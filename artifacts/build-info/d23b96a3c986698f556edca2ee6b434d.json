{
  "id": "d23b96a3c986698f556edca2ee6b434d",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.6.12",
  "solcLongVersion": "0.6.12+commit.27d51765",
  "input": {
    "language": "Solidity",
    "sources": {
      "contracts/BActions.sol": {
        "content": "// SPDX-License-Identifier: GPL-3.0-or-later\npragma solidity 0.6.12;\n\npragma experimental ABIEncoderV2;\n\nlibrary RightsManager {\n    struct Rights {\n        bool canPauseSwapping;\n        bool canChangeSwapFee;\n        bool canChangeWeights;\n        bool canAddRemoveTokens;\n        bool canWhitelistLPs;\n        bool canChangeCap;\n    }\n}\n\nabstract contract ERC20 {\n    function approve(address spender, uint amount) external virtual returns (bool);\n    function transfer(address dst, uint amt) external virtual returns (bool);\n    function transferFrom(address sender, address recipient, uint amount) external virtual returns (bool);\n    function balanceOf(address whom) external view virtual returns (uint);\n    function allowance(address, address) external view virtual returns (uint);\n}\n\nabstract contract BuniOwnable {\n    function setController(address controller) external virtual;\n}\n\nabstract contract AbstractPool is ERC20, BuniOwnable {\n    function setSwapFee(uint swapFee) external virtual;\n    function setPublicSwap(bool public_) external virtual;\n\n    function joinPool(uint poolAmountOut, uint[] calldata maxAmountsIn) external virtual;\n    function joinswapExternAmountIn(\n        address tokenIn, uint tokenAmountIn, uint minPoolAmountOut\n    ) external virtual returns (uint poolAmountOut);\n}\n\nabstract contract BPool is AbstractPool {\n    function finalize() external virtual;\n    function bind(address token, uint balance, uint denorm) external virtual;\n    function rebind(address token, uint balance, uint denorm) external virtual;\n    function unbind(address token) external virtual;\n    function isBound(address t) external view virtual returns (bool);\n    function getCurrentTokens() external view virtual returns (address[] memory);\n    function getFinalTokens() external view virtual returns(address[] memory);\n    function getBalance(address token) external view virtual returns (uint);\n}\n\nabstract contract BFactory {\n    function newBPool() external virtual returns (BPool);\n}\n\nabstract contract ConfigurableRightsPool is AbstractPool {\n    struct PoolParams {\n        string poolTokenSymbol;\n        string poolTokenName;\n        address[] constituentTokens;\n        uint[] tokenBalances;\n        uint[] tokenWeights;\n        uint swapFee;\n    }\n\n    struct CrpParams {\n        uint initialSupply;\n        uint minimumWeightChangeBlockPeriod;\n        uint addTokenTimeLockInBlocks;\n    }\n\n    function createPool(\n        uint initialSupply, uint minimumWeightChangeBlockPeriod, uint addTokenTimeLockInBlocks\n    ) external virtual;\n    function createPool(uint initialSupply) external virtual;\n    function setCap(uint newCap) external virtual;\n    function updateWeight(address token, uint newWeight) external virtual;\n    function updateWeightsGradually(\n        uint[] calldata newWeights, uint startBlock, uint endBlock\n    ) external virtual;\n    function commitAddToken(address token, uint balance, uint denormalizedWeight) external virtual;\n    function applyAddToken() external virtual;\n    function removeToken(address token) external virtual;\n    function whitelistLiquidityProvider(address provider) external virtual;\n    function removeWhitelistedLiquidityProvider(address provider) external virtual;\n    function bPool() external view virtual returns (BPool);\n}\n\nabstract contract CRPFactory {\n    function newCrp(\n        address factoryAddress,\n        ConfigurableRightsPool.PoolParams calldata params,\n        RightsManager.Rights calldata rights\n    ) external virtual returns (ConfigurableRightsPool);\n}\n/********************************** WARNING **********************************/\n//                                                                           //\n// This contract is only meant to be used in conjunction with ds-proxy.      //\n// Calling this contract directly will lead to loss of funds.                //\n//                                                                           //\n/********************************** WARNING **********************************/\n\ncontract BActions {\n\n    // --- Pool Creation ---\n\n    function create(\n        BFactory factory,\n        address[] calldata tokens,\n        uint[] calldata balances,\n        uint[] calldata weights,\n        uint swapFee,\n        bool finalize\n    ) external returns (BPool pool) {\n        require(tokens.length == balances.length, \"ERR_LENGTH_MISMATCH\");\n        require(tokens.length == weights.length, \"ERR_LENGTH_MISMATCH\");\n\n        pool = factory.newBPool();\n        pool.setSwapFee(swapFee);\n\n        for (uint i = 0; i < tokens.length; i++) {\n            ERC20 token = ERC20(tokens[i]);\n            require(token.transferFrom(msg.sender, address(this), balances[i]), \"ERR_TRANSFER_FAILED\");\n            _safeApprove(token, address(pool), balances[i]);\n            pool.bind(tokens[i], balances[i], weights[i]);\n        }\n\n        if (finalize) {\n            pool.finalize();\n            require(pool.transfer(msg.sender, pool.balanceOf(address(this))), \"ERR_TRANSFER_FAILED\");\n        } else {\n            pool.setPublicSwap(true);\n        }\n    }\n\n    function createSmartPool(\n        CRPFactory factory,\n        BFactory kFactory,\n        ConfigurableRightsPool.PoolParams calldata poolParams,\n        ConfigurableRightsPool.CrpParams calldata crpParams,\n        RightsManager.Rights calldata rights\n    ) external returns (ConfigurableRightsPool crp) {\n        require(\n            poolParams.constituentTokens.length == poolParams.tokenBalances.length,\n            \"ERR_LENGTH_MISMATCH\"\n        );\n        require(\n            poolParams.constituentTokens.length == poolParams.tokenWeights.length,\n            \"ERR_LENGTH_MISMATCH\"\n        );\n\n        crp = factory.newCrp(\n            address(kFactory),\n            poolParams,\n            rights\n        );\n\n        for (uint i = 0; i < poolParams.constituentTokens.length; i++) {\n            ERC20 token = ERC20(poolParams.constituentTokens[i]);\n            require(\n                token.transferFrom(msg.sender, address(this), poolParams.tokenBalances[i]),\n                \"ERR_TRANSFER_FAILED\"\n            );\n            _safeApprove(token, address(crp), poolParams.tokenBalances[i]);\n        }\n\n        crp.createPool(\n            crpParams.initialSupply,\n            crpParams.minimumWeightChangeBlockPeriod,\n            crpParams.addTokenTimeLockInBlocks\n        );\n        require(crp.transfer(msg.sender, crpParams.initialSupply), \"ERR_TRANSFER_FAILED\");\n        // DSProxy instance keeps pool ownership to enable management\n    }\n\n    // --- Joins ---\n\n    function joinPool(\n        BPool pool,\n        uint poolAmountOut,\n        uint[] calldata maxAmountsIn\n    ) external {\n        address[] memory tokens = pool.getFinalTokens();\n        _join(pool, tokens, poolAmountOut, maxAmountsIn);\n    }\n\n    function joinSmartPool(\n        ConfigurableRightsPool pool,\n        uint poolAmountOut,\n        uint[] calldata maxAmountsIn\n    ) external {\n        address[] memory tokens = pool.bPool().getCurrentTokens();\n        _join(pool, tokens, poolAmountOut, maxAmountsIn);\n    }\n\n    function joinswapExternAmountIn(\n        AbstractPool pool,\n        ERC20 token,\n        uint tokenAmountIn,\n        uint minPoolAmountOut\n    ) external {\n        require(token.transferFrom(msg.sender, address(this), tokenAmountIn), \"ERR_TRANSFER_FAILED\");\n        _safeApprove(token, address(pool), tokenAmountIn);\n        uint poolAmountOut = pool.joinswapExternAmountIn(address(token), tokenAmountIn, minPoolAmountOut);\n        require(pool.transfer(msg.sender, poolAmountOut), \"ERR_TRANSFER_FAILED\");\n    }\n\n    // --- Pool management (common) ---\n\n    function setPublicSwap(AbstractPool pool, bool publicSwap) external {\n        pool.setPublicSwap(publicSwap);\n    }\n\n    function setSwapFee(AbstractPool pool, uint newFee) external {\n        pool.setSwapFee(newFee);\n    }\n\n    function setController(AbstractPool pool, address newController) external {\n        pool.setController(newController);\n    }\n\n    // --- Private pool management ---\n\n    function setTokens(\n        BPool pool,\n        address[] calldata tokens,\n        uint[] calldata balances,\n        uint[] calldata denorms\n    ) external {\n        require(tokens.length == balances.length, \"ERR_LENGTH_MISMATCH\");\n        require(tokens.length == denorms.length, \"ERR_LENGTH_MISMATCH\");\n\n        for (uint i = 0; i < tokens.length; i++) {\n            ERC20 token = ERC20(tokens[i]);\n            if (pool.isBound(tokens[i])) {\n                if (balances[i] > pool.getBalance(tokens[i])) {\n                    require(\n                        token.transferFrom(msg.sender, address(this), balances[i] - pool.getBalance(tokens[i])),\n                        \"ERR_TRANSFER_FAILED\"\n                    );\n                    _safeApprove(token, address(pool), balances[i] - pool.getBalance(tokens[i]));\n                }\n                if (balances[i] > 10**6) {\n                    pool.rebind(tokens[i], balances[i], denorms[i]);\n                } else {\n                    pool.unbind(tokens[i]);\n                }\n\n            } else {\n                require(token.transferFrom(msg.sender, address(this), balances[i]), \"ERR_TRANSFER_FAILED\");\n                _safeApprove(token, address(pool), balances[i]);\n                pool.bind(tokens[i], balances[i], denorms[i]);\n            }\n\n            if (token.balanceOf(address(this)) > 0) {\n                require(token.transfer(msg.sender, token.balanceOf(address(this))), \"ERR_TRANSFER_FAILED\");\n            }\n\n        }\n    }\n\n    function finalize(BPool pool) external {\n        pool.finalize();\n        require(pool.transfer(msg.sender, pool.balanceOf(address(this))), \"ERR_TRANSFER_FAILED\");\n    }\n\n    // --- Smart pool management ---\n\n    function increaseWeight(\n        ConfigurableRightsPool crp,\n        ERC20 token,\n        uint newWeight,\n        uint tokenAmountIn\n    ) external {\n        require(token.transferFrom(msg.sender, address(this), tokenAmountIn), \"ERR_TRANSFER_FAILED\");\n        _safeApprove(token, address(crp), tokenAmountIn);\n        crp.updateWeight(address(token), newWeight);\n        require(crp.transfer(msg.sender, crp.balanceOf(address(this))), \"ERR_TRANSFER_FAILED\");\n    }\n\n    function decreaseWeight(\n        ConfigurableRightsPool crp,\n        ERC20 token,\n        uint newWeight,\n        uint poolAmountIn\n    ) external {\n        require(crp.transferFrom(msg.sender, address(this), poolAmountIn), \"ERR_TRANSFER_FAILED\");\n        crp.updateWeight(address(token), newWeight);\n        require(token.transfer(msg.sender, token.balanceOf(address(this))), \"ERR_TRANSFER_FAILED\");\n    }\n\n    function updateWeightsGradually(\n        ConfigurableRightsPool crp,\n        uint[] calldata newWeights,\n        uint startBlock,\n        uint endBlock\n    ) external {\n        crp.updateWeightsGradually(newWeights, startBlock, endBlock);\n    }\n\n    function setCap(\n        ConfigurableRightsPool crp,\n        uint newCap\n    ) external {\n        crp.setCap(newCap);\n    }\n\n    function commitAddToken(\n        ConfigurableRightsPool crp,\n        ERC20 token,\n        uint balance,\n        uint denormalizedWeight\n    ) external {\n        crp.commitAddToken(address(token), balance, denormalizedWeight);\n    }\n\n    function applyAddToken(\n        ConfigurableRightsPool crp,\n        ERC20 token,\n        uint tokenAmountIn\n    ) external {\n        require(token.transferFrom(msg.sender, address(this), tokenAmountIn), \"ERR_TRANSFER_FAILED\");\n        _safeApprove(token, address(crp), tokenAmountIn);\n        crp.applyAddToken();\n        require(crp.transfer(msg.sender, crp.balanceOf(address(this))), \"ERR_TRANSFER_FAILED\");\n    }\n\n    function removeToken(\n        ConfigurableRightsPool crp,\n        ERC20 token,\n        uint poolAmountIn\n    ) external {\n        require(crp.transferFrom(msg.sender, address(this), poolAmountIn), \"ERR_TRANSFER_FAILED\");\n        crp.removeToken(address(token));\n        require(token.transfer(msg.sender, token.balanceOf(address(this))), \"ERR_TRANSFER_FAILED\");\n    }\n\n    function whitelistLiquidityProvider(\n        ConfigurableRightsPool crp,\n        address provider\n    ) external {\n        crp.whitelistLiquidityProvider(provider);\n    }\n\n    function removeWhitelistedLiquidityProvider(\n        ConfigurableRightsPool crp,\n        address provider\n    ) external {\n        crp.removeWhitelistedLiquidityProvider(provider);\n    }\n\n    // --- Internals ---\n\n    function _safeApprove(ERC20 token, address spender, uint amount) internal {\n        if (token.allowance(address(this), spender) > 0) {\n            token.approve(spender, 0);\n        }\n        token.approve(spender, amount);\n    }\n\n    function _join(\n        AbstractPool pool,\n        address[] memory tokens,\n        uint poolAmountOut,\n        uint[] memory maxAmountsIn\n    ) internal {\n        require(maxAmountsIn.length == tokens.length, \"ERR_LENGTH_MISMATCH\");\n\n        for (uint i = 0; i < tokens.length; i++) {\n            ERC20 token = ERC20(tokens[i]);\n            require(token.transferFrom(msg.sender, address(this), maxAmountsIn[i]), \"ERR_TRANSFER_FAILED\");\n            _safeApprove(token, address(pool), maxAmountsIn[i]);\n        }\n        pool.joinPool(poolAmountOut, maxAmountsIn);\n        for (uint i = 0; i < tokens.length; i++) {\n            ERC20 token = ERC20(tokens[i]);\n            if (token.balanceOf(address(this)) > 0) {\n                require(token.transfer(msg.sender, token.balanceOf(address(this))), \"ERR_TRANSFER_FAILED\");\n            }\n        }\n        require(pool.transfer(msg.sender, pool.balanceOf(address(this))), \"ERR_TRANSFER_FAILED\");\n    }\n}\n"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": true,
        "runs": 1000
      },
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata",
            "devdoc",
            "userdoc",
            "storageLayout",
            "evm.gasEstimates"
          ],
          "": [
            "ast"
          ]
        }
      },
      "metadata": {
        "useLiteralContent": true
      }
    }
  },
  "output": {
    "contracts": {
      "contracts/BActions.sol": {
        "AbstractPool": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "whom",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "poolAmountOut",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256[]",
                  "name": "maxAmountsIn",
                  "type": "uint256[]"
                }
              ],
              "name": "joinPool",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "tokenIn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenAmountIn",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minPoolAmountOut",
                  "type": "uint256"
                }
              ],
              "name": "joinswapExternAmountIn",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "poolAmountOut",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "controller",
                  "type": "address"
                }
              ],
              "name": "setController",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bool",
                  "name": "public_",
                  "type": "bool"
                }
              ],
              "name": "setPublicSwap",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "swapFee",
                  "type": "uint256"
                }
              ],
              "name": "setSwapFee",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "dst",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amt",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "devdoc": {
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "evm": {
            "bytecode": {
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "joinPool(uint256,uint256[])": "4f69c0d4",
              "joinswapExternAmountIn(address,uint256,uint256)": "5db34277",
              "setController(address)": "92eefe9b",
              "setPublicSwap(bool)": "49b59552",
              "setSwapFee(uint256)": "34e19907",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"whom\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"poolAmountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"maxAmountsIn\",\"type\":\"uint256[]\"}],\"name\":\"joinPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPoolAmountOut\",\"type\":\"uint256\"}],\"name\":\"joinswapExternAmountIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"poolAmountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"controller\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"public_\",\"type\":\"bool\"}],\"name\":\"setPublicSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"swapFee\",\"type\":\"uint256\"}],\"name\":\"setSwapFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amt\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BActions.sol\":\"AbstractPool\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/BActions.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\npragma solidity 0.6.12;\\n\\npragma experimental ABIEncoderV2;\\n\\nlibrary RightsManager {\\n    struct Rights {\\n        bool canPauseSwapping;\\n        bool canChangeSwapFee;\\n        bool canChangeWeights;\\n        bool canAddRemoveTokens;\\n        bool canWhitelistLPs;\\n        bool canChangeCap;\\n    }\\n}\\n\\nabstract contract ERC20 {\\n    function approve(address spender, uint amount) external virtual returns (bool);\\n    function transfer(address dst, uint amt) external virtual returns (bool);\\n    function transferFrom(address sender, address recipient, uint amount) external virtual returns (bool);\\n    function balanceOf(address whom) external view virtual returns (uint);\\n    function allowance(address, address) external view virtual returns (uint);\\n}\\n\\nabstract contract BuniOwnable {\\n    function setController(address controller) external virtual;\\n}\\n\\nabstract contract AbstractPool is ERC20, BuniOwnable {\\n    function setSwapFee(uint swapFee) external virtual;\\n    function setPublicSwap(bool public_) external virtual;\\n\\n    function joinPool(uint poolAmountOut, uint[] calldata maxAmountsIn) external virtual;\\n    function joinswapExternAmountIn(\\n        address tokenIn, uint tokenAmountIn, uint minPoolAmountOut\\n    ) external virtual returns (uint poolAmountOut);\\n}\\n\\nabstract contract BPool is AbstractPool {\\n    function finalize() external virtual;\\n    function bind(address token, uint balance, uint denorm) external virtual;\\n    function rebind(address token, uint balance, uint denorm) external virtual;\\n    function unbind(address token) external virtual;\\n    function isBound(address t) external view virtual returns (bool);\\n    function getCurrentTokens() external view virtual returns (address[] memory);\\n    function getFinalTokens() external view virtual returns(address[] memory);\\n    function getBalance(address token) external view virtual returns (uint);\\n}\\n\\nabstract contract BFactory {\\n    function newBPool() external virtual returns (BPool);\\n}\\n\\nabstract contract ConfigurableRightsPool is AbstractPool {\\n    struct PoolParams {\\n        string poolTokenSymbol;\\n        string poolTokenName;\\n        address[] constituentTokens;\\n        uint[] tokenBalances;\\n        uint[] tokenWeights;\\n        uint swapFee;\\n    }\\n\\n    struct CrpParams {\\n        uint initialSupply;\\n        uint minimumWeightChangeBlockPeriod;\\n        uint addTokenTimeLockInBlocks;\\n    }\\n\\n    function createPool(\\n        uint initialSupply, uint minimumWeightChangeBlockPeriod, uint addTokenTimeLockInBlocks\\n    ) external virtual;\\n    function createPool(uint initialSupply) external virtual;\\n    function setCap(uint newCap) external virtual;\\n    function updateWeight(address token, uint newWeight) external virtual;\\n    function updateWeightsGradually(\\n        uint[] calldata newWeights, uint startBlock, uint endBlock\\n    ) external virtual;\\n    function commitAddToken(address token, uint balance, uint denormalizedWeight) external virtual;\\n    function applyAddToken() external virtual;\\n    function removeToken(address token) external virtual;\\n    function whitelistLiquidityProvider(address provider) external virtual;\\n    function removeWhitelistedLiquidityProvider(address provider) external virtual;\\n    function bPool() external view virtual returns (BPool);\\n}\\n\\nabstract contract CRPFactory {\\n    function newCrp(\\n        address factoryAddress,\\n        ConfigurableRightsPool.PoolParams calldata params,\\n        RightsManager.Rights calldata rights\\n    ) external virtual returns (ConfigurableRightsPool);\\n}\\n/********************************** WARNING **********************************/\\n//                                                                           //\\n// This contract is only meant to be used in conjunction with ds-proxy.      //\\n// Calling this contract directly will lead to loss of funds.                //\\n//                                                                           //\\n/********************************** WARNING **********************************/\\n\\ncontract BActions {\\n\\n    // --- Pool Creation ---\\n\\n    function create(\\n        BFactory factory,\\n        address[] calldata tokens,\\n        uint[] calldata balances,\\n        uint[] calldata weights,\\n        uint swapFee,\\n        bool finalize\\n    ) external returns (BPool pool) {\\n        require(tokens.length == balances.length, \\\"ERR_LENGTH_MISMATCH\\\");\\n        require(tokens.length == weights.length, \\\"ERR_LENGTH_MISMATCH\\\");\\n\\n        pool = factory.newBPool();\\n        pool.setSwapFee(swapFee);\\n\\n        for (uint i = 0; i < tokens.length; i++) {\\n            ERC20 token = ERC20(tokens[i]);\\n            require(token.transferFrom(msg.sender, address(this), balances[i]), \\\"ERR_TRANSFER_FAILED\\\");\\n            _safeApprove(token, address(pool), balances[i]);\\n            pool.bind(tokens[i], balances[i], weights[i]);\\n        }\\n\\n        if (finalize) {\\n            pool.finalize();\\n            require(pool.transfer(msg.sender, pool.balanceOf(address(this))), \\\"ERR_TRANSFER_FAILED\\\");\\n        } else {\\n            pool.setPublicSwap(true);\\n        }\\n    }\\n\\n    function createSmartPool(\\n        CRPFactory factory,\\n        BFactory kFactory,\\n        ConfigurableRightsPool.PoolParams calldata poolParams,\\n        ConfigurableRightsPool.CrpParams calldata crpParams,\\n        RightsManager.Rights calldata rights\\n    ) external returns (ConfigurableRightsPool crp) {\\n        require(\\n            poolParams.constituentTokens.length == poolParams.tokenBalances.length,\\n            \\\"ERR_LENGTH_MISMATCH\\\"\\n        );\\n        require(\\n            poolParams.constituentTokens.length == poolParams.tokenWeights.length,\\n            \\\"ERR_LENGTH_MISMATCH\\\"\\n        );\\n\\n        crp = factory.newCrp(\\n            address(kFactory),\\n            poolParams,\\n            rights\\n        );\\n\\n        for (uint i = 0; i < poolParams.constituentTokens.length; i++) {\\n            ERC20 token = ERC20(poolParams.constituentTokens[i]);\\n            require(\\n                token.transferFrom(msg.sender, address(this), poolParams.tokenBalances[i]),\\n                \\\"ERR_TRANSFER_FAILED\\\"\\n            );\\n            _safeApprove(token, address(crp), poolParams.tokenBalances[i]);\\n        }\\n\\n        crp.createPool(\\n            crpParams.initialSupply,\\n            crpParams.minimumWeightChangeBlockPeriod,\\n            crpParams.addTokenTimeLockInBlocks\\n        );\\n        require(crp.transfer(msg.sender, crpParams.initialSupply), \\\"ERR_TRANSFER_FAILED\\\");\\n        // DSProxy instance keeps pool ownership to enable management\\n    }\\n\\n    // --- Joins ---\\n\\n    function joinPool(\\n        BPool pool,\\n        uint poolAmountOut,\\n        uint[] calldata maxAmountsIn\\n    ) external {\\n        address[] memory tokens = pool.getFinalTokens();\\n        _join(pool, tokens, poolAmountOut, maxAmountsIn);\\n    }\\n\\n    function joinSmartPool(\\n        ConfigurableRightsPool pool,\\n        uint poolAmountOut,\\n        uint[] calldata maxAmountsIn\\n    ) external {\\n        address[] memory tokens = pool.bPool().getCurrentTokens();\\n        _join(pool, tokens, poolAmountOut, maxAmountsIn);\\n    }\\n\\n    function joinswapExternAmountIn(\\n        AbstractPool pool,\\n        ERC20 token,\\n        uint tokenAmountIn,\\n        uint minPoolAmountOut\\n    ) external {\\n        require(token.transferFrom(msg.sender, address(this), tokenAmountIn), \\\"ERR_TRANSFER_FAILED\\\");\\n        _safeApprove(token, address(pool), tokenAmountIn);\\n        uint poolAmountOut = pool.joinswapExternAmountIn(address(token), tokenAmountIn, minPoolAmountOut);\\n        require(pool.transfer(msg.sender, poolAmountOut), \\\"ERR_TRANSFER_FAILED\\\");\\n    }\\n\\n    // --- Pool management (common) ---\\n\\n    function setPublicSwap(AbstractPool pool, bool publicSwap) external {\\n        pool.setPublicSwap(publicSwap);\\n    }\\n\\n    function setSwapFee(AbstractPool pool, uint newFee) external {\\n        pool.setSwapFee(newFee);\\n    }\\n\\n    function setController(AbstractPool pool, address newController) external {\\n        pool.setController(newController);\\n    }\\n\\n    // --- Private pool management ---\\n\\n    function setTokens(\\n        BPool pool,\\n        address[] calldata tokens,\\n        uint[] calldata balances,\\n        uint[] calldata denorms\\n    ) external {\\n        require(tokens.length == balances.length, \\\"ERR_LENGTH_MISMATCH\\\");\\n        require(tokens.length == denorms.length, \\\"ERR_LENGTH_MISMATCH\\\");\\n\\n        for (uint i = 0; i < tokens.length; i++) {\\n            ERC20 token = ERC20(tokens[i]);\\n            if (pool.isBound(tokens[i])) {\\n                if (balances[i] > pool.getBalance(tokens[i])) {\\n                    require(\\n                        token.transferFrom(msg.sender, address(this), balances[i] - pool.getBalance(tokens[i])),\\n                        \\\"ERR_TRANSFER_FAILED\\\"\\n                    );\\n                    _safeApprove(token, address(pool), balances[i] - pool.getBalance(tokens[i]));\\n                }\\n                if (balances[i] > 10**6) {\\n                    pool.rebind(tokens[i], balances[i], denorms[i]);\\n                } else {\\n                    pool.unbind(tokens[i]);\\n                }\\n\\n            } else {\\n                require(token.transferFrom(msg.sender, address(this), balances[i]), \\\"ERR_TRANSFER_FAILED\\\");\\n                _safeApprove(token, address(pool), balances[i]);\\n                pool.bind(tokens[i], balances[i], denorms[i]);\\n            }\\n\\n            if (token.balanceOf(address(this)) > 0) {\\n                require(token.transfer(msg.sender, token.balanceOf(address(this))), \\\"ERR_TRANSFER_FAILED\\\");\\n            }\\n\\n        }\\n    }\\n\\n    function finalize(BPool pool) external {\\n        pool.finalize();\\n        require(pool.transfer(msg.sender, pool.balanceOf(address(this))), \\\"ERR_TRANSFER_FAILED\\\");\\n    }\\n\\n    // --- Smart pool management ---\\n\\n    function increaseWeight(\\n        ConfigurableRightsPool crp,\\n        ERC20 token,\\n        uint newWeight,\\n        uint tokenAmountIn\\n    ) external {\\n        require(token.transferFrom(msg.sender, address(this), tokenAmountIn), \\\"ERR_TRANSFER_FAILED\\\");\\n        _safeApprove(token, address(crp), tokenAmountIn);\\n        crp.updateWeight(address(token), newWeight);\\n        require(crp.transfer(msg.sender, crp.balanceOf(address(this))), \\\"ERR_TRANSFER_FAILED\\\");\\n    }\\n\\n    function decreaseWeight(\\n        ConfigurableRightsPool crp,\\n        ERC20 token,\\n        uint newWeight,\\n        uint poolAmountIn\\n    ) external {\\n        require(crp.transferFrom(msg.sender, address(this), poolAmountIn), \\\"ERR_TRANSFER_FAILED\\\");\\n        crp.updateWeight(address(token), newWeight);\\n        require(token.transfer(msg.sender, token.balanceOf(address(this))), \\\"ERR_TRANSFER_FAILED\\\");\\n    }\\n\\n    function updateWeightsGradually(\\n        ConfigurableRightsPool crp,\\n        uint[] calldata newWeights,\\n        uint startBlock,\\n        uint endBlock\\n    ) external {\\n        crp.updateWeightsGradually(newWeights, startBlock, endBlock);\\n    }\\n\\n    function setCap(\\n        ConfigurableRightsPool crp,\\n        uint newCap\\n    ) external {\\n        crp.setCap(newCap);\\n    }\\n\\n    function commitAddToken(\\n        ConfigurableRightsPool crp,\\n        ERC20 token,\\n        uint balance,\\n        uint denormalizedWeight\\n    ) external {\\n        crp.commitAddToken(address(token), balance, denormalizedWeight);\\n    }\\n\\n    function applyAddToken(\\n        ConfigurableRightsPool crp,\\n        ERC20 token,\\n        uint tokenAmountIn\\n    ) external {\\n        require(token.transferFrom(msg.sender, address(this), tokenAmountIn), \\\"ERR_TRANSFER_FAILED\\\");\\n        _safeApprove(token, address(crp), tokenAmountIn);\\n        crp.applyAddToken();\\n        require(crp.transfer(msg.sender, crp.balanceOf(address(this))), \\\"ERR_TRANSFER_FAILED\\\");\\n    }\\n\\n    function removeToken(\\n        ConfigurableRightsPool crp,\\n        ERC20 token,\\n        uint poolAmountIn\\n    ) external {\\n        require(crp.transferFrom(msg.sender, address(this), poolAmountIn), \\\"ERR_TRANSFER_FAILED\\\");\\n        crp.removeToken(address(token));\\n        require(token.transfer(msg.sender, token.balanceOf(address(this))), \\\"ERR_TRANSFER_FAILED\\\");\\n    }\\n\\n    function whitelistLiquidityProvider(\\n        ConfigurableRightsPool crp,\\n        address provider\\n    ) external {\\n        crp.whitelistLiquidityProvider(provider);\\n    }\\n\\n    function removeWhitelistedLiquidityProvider(\\n        ConfigurableRightsPool crp,\\n        address provider\\n    ) external {\\n        crp.removeWhitelistedLiquidityProvider(provider);\\n    }\\n\\n    // --- Internals ---\\n\\n    function _safeApprove(ERC20 token, address spender, uint amount) internal {\\n        if (token.allowance(address(this), spender) > 0) {\\n            token.approve(spender, 0);\\n        }\\n        token.approve(spender, amount);\\n    }\\n\\n    function _join(\\n        AbstractPool pool,\\n        address[] memory tokens,\\n        uint poolAmountOut,\\n        uint[] memory maxAmountsIn\\n    ) internal {\\n        require(maxAmountsIn.length == tokens.length, \\\"ERR_LENGTH_MISMATCH\\\");\\n\\n        for (uint i = 0; i < tokens.length; i++) {\\n            ERC20 token = ERC20(tokens[i]);\\n            require(token.transferFrom(msg.sender, address(this), maxAmountsIn[i]), \\\"ERR_TRANSFER_FAILED\\\");\\n            _safeApprove(token, address(pool), maxAmountsIn[i]);\\n        }\\n        pool.joinPool(poolAmountOut, maxAmountsIn);\\n        for (uint i = 0; i < tokens.length; i++) {\\n            ERC20 token = ERC20(tokens[i]);\\n            if (token.balanceOf(address(this)) > 0) {\\n                require(token.transfer(msg.sender, token.balanceOf(address(this))), \\\"ERR_TRANSFER_FAILED\\\");\\n            }\\n        }\\n        require(pool.transfer(msg.sender, pool.balanceOf(address(this))), \\\"ERR_TRANSFER_FAILED\\\");\\n    }\\n}\\n\",\"keccak256\":\"0xb7ab283093b39140440e6f2ec01f607a14558a05aa1ae54b1459d0c2df6b96c3\",\"license\":\"GPL-3.0-or-later\"}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        },
        "BActions": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "contract ConfigurableRightsPool",
                  "name": "crp",
                  "type": "address"
                },
                {
                  "internalType": "contract ERC20",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenAmountIn",
                  "type": "uint256"
                }
              ],
              "name": "applyAddToken",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract ConfigurableRightsPool",
                  "name": "crp",
                  "type": "address"
                },
                {
                  "internalType": "contract ERC20",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "denormalizedWeight",
                  "type": "uint256"
                }
              ],
              "name": "commitAddToken",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract BFactory",
                  "name": "factory",
                  "type": "address"
                },
                {
                  "internalType": "address[]",
                  "name": "tokens",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "balances",
                  "type": "uint256[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "weights",
                  "type": "uint256[]"
                },
                {
                  "internalType": "uint256",
                  "name": "swapFee",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "finalize",
                  "type": "bool"
                }
              ],
              "name": "create",
              "outputs": [
                {
                  "internalType": "contract BPool",
                  "name": "pool",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract CRPFactory",
                  "name": "factory",
                  "type": "address"
                },
                {
                  "internalType": "contract BFactory",
                  "name": "kFactory",
                  "type": "address"
                },
                {
                  "components": [
                    {
                      "internalType": "string",
                      "name": "poolTokenSymbol",
                      "type": "string"
                    },
                    {
                      "internalType": "string",
                      "name": "poolTokenName",
                      "type": "string"
                    },
                    {
                      "internalType": "address[]",
                      "name": "constituentTokens",
                      "type": "address[]"
                    },
                    {
                      "internalType": "uint256[]",
                      "name": "tokenBalances",
                      "type": "uint256[]"
                    },
                    {
                      "internalType": "uint256[]",
                      "name": "tokenWeights",
                      "type": "uint256[]"
                    },
                    {
                      "internalType": "uint256",
                      "name": "swapFee",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct ConfigurableRightsPool.PoolParams",
                  "name": "poolParams",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "initialSupply",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "minimumWeightChangeBlockPeriod",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "addTokenTimeLockInBlocks",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct ConfigurableRightsPool.CrpParams",
                  "name": "crpParams",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "bool",
                      "name": "canPauseSwapping",
                      "type": "bool"
                    },
                    {
                      "internalType": "bool",
                      "name": "canChangeSwapFee",
                      "type": "bool"
                    },
                    {
                      "internalType": "bool",
                      "name": "canChangeWeights",
                      "type": "bool"
                    },
                    {
                      "internalType": "bool",
                      "name": "canAddRemoveTokens",
                      "type": "bool"
                    },
                    {
                      "internalType": "bool",
                      "name": "canWhitelistLPs",
                      "type": "bool"
                    },
                    {
                      "internalType": "bool",
                      "name": "canChangeCap",
                      "type": "bool"
                    }
                  ],
                  "internalType": "struct RightsManager.Rights",
                  "name": "rights",
                  "type": "tuple"
                }
              ],
              "name": "createSmartPool",
              "outputs": [
                {
                  "internalType": "contract ConfigurableRightsPool",
                  "name": "crp",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract ConfigurableRightsPool",
                  "name": "crp",
                  "type": "address"
                },
                {
                  "internalType": "contract ERC20",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "newWeight",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "poolAmountIn",
                  "type": "uint256"
                }
              ],
              "name": "decreaseWeight",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract BPool",
                  "name": "pool",
                  "type": "address"
                }
              ],
              "name": "finalize",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract ConfigurableRightsPool",
                  "name": "crp",
                  "type": "address"
                },
                {
                  "internalType": "contract ERC20",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "newWeight",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenAmountIn",
                  "type": "uint256"
                }
              ],
              "name": "increaseWeight",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract BPool",
                  "name": "pool",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "poolAmountOut",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256[]",
                  "name": "maxAmountsIn",
                  "type": "uint256[]"
                }
              ],
              "name": "joinPool",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract ConfigurableRightsPool",
                  "name": "pool",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "poolAmountOut",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256[]",
                  "name": "maxAmountsIn",
                  "type": "uint256[]"
                }
              ],
              "name": "joinSmartPool",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract AbstractPool",
                  "name": "pool",
                  "type": "address"
                },
                {
                  "internalType": "contract ERC20",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenAmountIn",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minPoolAmountOut",
                  "type": "uint256"
                }
              ],
              "name": "joinswapExternAmountIn",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract ConfigurableRightsPool",
                  "name": "crp",
                  "type": "address"
                },
                {
                  "internalType": "contract ERC20",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "poolAmountIn",
                  "type": "uint256"
                }
              ],
              "name": "removeToken",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract ConfigurableRightsPool",
                  "name": "crp",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "provider",
                  "type": "address"
                }
              ],
              "name": "removeWhitelistedLiquidityProvider",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract ConfigurableRightsPool",
                  "name": "crp",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "newCap",
                  "type": "uint256"
                }
              ],
              "name": "setCap",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract AbstractPool",
                  "name": "pool",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "newController",
                  "type": "address"
                }
              ],
              "name": "setController",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract AbstractPool",
                  "name": "pool",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "publicSwap",
                  "type": "bool"
                }
              ],
              "name": "setPublicSwap",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract AbstractPool",
                  "name": "pool",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "newFee",
                  "type": "uint256"
                }
              ],
              "name": "setSwapFee",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract BPool",
                  "name": "pool",
                  "type": "address"
                },
                {
                  "internalType": "address[]",
                  "name": "tokens",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "balances",
                  "type": "uint256[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "denorms",
                  "type": "uint256[]"
                }
              ],
              "name": "setTokens",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract ConfigurableRightsPool",
                  "name": "crp",
                  "type": "address"
                },
                {
                  "internalType": "uint256[]",
                  "name": "newWeights",
                  "type": "uint256[]"
                },
                {
                  "internalType": "uint256",
                  "name": "startBlock",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endBlock",
                  "type": "uint256"
                }
              ],
              "name": "updateWeightsGradually",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract ConfigurableRightsPool",
                  "name": "crp",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "provider",
                  "type": "address"
                }
              ],
              "name": "whitelistLiquidityProvider",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "devdoc": {
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "evm": {
            "bytecode": {
              "linkReferences": {},
              "object": "",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x30E7 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x151 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x84F3859B GT PUSH2 0xCD JUMPI DUP1 PUSH4 0xA7F28DA7 GT PUSH2 0x81 JUMPI DUP1 PUSH4 0xC152E579 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xC152E579 EQ PUSH2 0x29E JUMPI DUP1 PUSH4 0xC1762B15 EQ PUSH2 0x2B1 JUMPI DUP1 PUSH4 0xE0D945BF EQ PUSH2 0x2C4 JUMPI PUSH2 0x151 JUMP JUMPDEST DUP1 PUSH4 0xA7F28DA7 EQ PUSH2 0x278 JUMPI DUP1 PUSH4 0xC037F39C EQ PUSH2 0x28B JUMPI PUSH2 0x151 JUMP JUMPDEST DUP1 PUSH4 0x991991C7 GT PUSH2 0xB2 JUMPI DUP1 PUSH4 0x991991C7 EQ PUSH2 0x23F JUMPI DUP1 PUSH4 0x9C11BD17 EQ PUSH2 0x252 JUMPI DUP1 PUSH4 0x9FBBF3BA EQ PUSH2 0x265 JUMPI PUSH2 0x151 JUMP JUMPDEST DUP1 PUSH4 0x84F3859B EQ PUSH2 0x219 JUMPI DUP1 PUSH4 0x8A5C57DF EQ PUSH2 0x22C JUMPI PUSH2 0x151 JUMP JUMPDEST DUP1 PUSH4 0x4EF39B75 GT PUSH2 0x124 JUMPI DUP1 PUSH4 0x7B7D6C68 GT PUSH2 0x109 JUMPI DUP1 PUSH4 0x7B7D6C68 EQ PUSH2 0x1E0 JUMPI DUP1 PUSH4 0x80AD2CF3 EQ PUSH2 0x1F3 JUMPI DUP1 PUSH4 0x81BD5CD7 EQ PUSH2 0x206 JUMPI PUSH2 0x151 JUMP JUMPDEST DUP1 PUSH4 0x4EF39B75 EQ PUSH2 0x1BA JUMPI DUP1 PUSH4 0x674F8D8E EQ PUSH2 0x1CD JUMPI PUSH2 0x151 JUMP JUMPDEST DUP1 PUSH4 0x1A78A275 EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0x1ECCC185 EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0x2C91A591 EQ PUSH2 0x194 JUMPI DUP1 PUSH4 0x333FBEEF EQ PUSH2 0x1A7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x169 PUSH2 0x164 CALLDATASIZE PUSH1 0x4 PUSH2 0x2879 JUMP JUMPDEST PUSH2 0x2D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x176 SWAP2 SWAP1 PUSH2 0x2CF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x192 PUSH2 0x18D CALLDATASIZE PUSH1 0x4 PUSH2 0x27DC JUMP JUMPDEST PUSH2 0x781 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x192 PUSH2 0x1A2 CALLDATASIZE PUSH1 0x4 PUSH2 0x2A03 JUMP JUMPDEST PUSH2 0x7E3 JUMP JUMPDEST PUSH2 0x192 PUSH2 0x1B5 CALLDATASIZE PUSH1 0x4 PUSH2 0x2AEC JUMP JUMPDEST PUSH2 0x912 JUMP JUMPDEST PUSH2 0x192 PUSH2 0x1C8 CALLDATASIZE PUSH1 0x4 PUSH2 0x26BA JUMP JUMPDEST PUSH2 0x957 JUMP JUMPDEST PUSH2 0x192 PUSH2 0x1DB CALLDATASIZE PUSH1 0x4 PUSH2 0x2809 JUMP JUMPDEST PUSH2 0xABE JUMP JUMPDEST PUSH2 0x192 PUSH2 0x1EE CALLDATASIZE PUSH1 0x4 PUSH2 0x27A4 JUMP JUMPDEST PUSH2 0xCD3 JUMP JUMPDEST PUSH2 0x192 PUSH2 0x201 CALLDATASIZE PUSH1 0x4 PUSH2 0x284E JUMP JUMPDEST PUSH2 0xD18 JUMP JUMPDEST PUSH2 0x192 PUSH2 0x214 CALLDATASIZE PUSH1 0x4 PUSH2 0x2809 JUMP JUMPDEST PUSH2 0xD5D JUMP JUMPDEST PUSH2 0x192 PUSH2 0x227 CALLDATASIZE PUSH1 0x4 PUSH2 0x2B63 JUMP JUMPDEST PUSH2 0xE9C JUMP JUMPDEST PUSH2 0x192 PUSH2 0x23A CALLDATASIZE PUSH1 0x4 PUSH2 0x2A03 JUMP JUMPDEST PUSH2 0x10C7 JUMP JUMPDEST PUSH2 0x192 PUSH2 0x24D CALLDATASIZE PUSH1 0x4 PUSH2 0x284E JUMP JUMPDEST PUSH2 0x1102 JUMP JUMPDEST PUSH2 0x192 PUSH2 0x260 CALLDATASIZE PUSH1 0x4 PUSH2 0x2AFE JUMP JUMPDEST PUSH2 0x112E JUMP JUMPDEST PUSH2 0x192 PUSH2 0x273 CALLDATASIZE PUSH1 0x4 PUSH2 0x2809 JUMP JUMPDEST PUSH2 0x11B2 JUMP JUMPDEST PUSH2 0x192 PUSH2 0x286 CALLDATASIZE PUSH1 0x4 PUSH2 0x2AEC JUMP JUMPDEST PUSH2 0x1233 JUMP JUMPDEST PUSH2 0x192 PUSH2 0x299 CALLDATASIZE PUSH1 0x4 PUSH2 0x2B63 JUMP JUMPDEST PUSH2 0x1278 JUMP JUMPDEST PUSH2 0x169 PUSH2 0x2AC CALLDATASIZE PUSH1 0x4 PUSH2 0x2A5D JUMP JUMPDEST PUSH2 0x13AA JUMP JUMPDEST PUSH2 0x192 PUSH2 0x2BF CALLDATASIZE PUSH1 0x4 PUSH2 0x2809 JUMP JUMPDEST PUSH2 0x1712 JUMP JUMPDEST PUSH2 0x192 PUSH2 0x2D2 CALLDATASIZE PUSH1 0x4 PUSH2 0x295A JUMP JUMPDEST PUSH2 0x18F8 JUMP JUMPDEST PUSH1 0x0 DUP8 DUP7 EQ PUSH2 0x301 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F8 SWAP1 PUSH2 0x2EB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP8 DUP5 EQ PUSH2 0x320 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F8 SWAP1 PUSH2 0x2EB9 JUMP JUMPDEST DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD556C5DC PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x35B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x36F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x393 SWAP2 SWAP1 PUSH2 0x293E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x34E19907 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x34E19907 SWAP1 PUSH2 0x3C2 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x2F27 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3F0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 JUMPDEST DUP9 DUP2 LT ISZERO PUSH2 0x5A4 JUMPI PUSH1 0x0 DUP11 DUP11 DUP4 DUP2 DUP2 LT PUSH2 0x40D JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x422 SWAP2 SWAP1 PUSH2 0x26BA JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x23B872DD CALLER ADDRESS DUP13 DUP13 DUP8 DUP2 DUP2 LT PUSH2 0x441 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x466 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2D0C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x480 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x494 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4B8 SWAP2 SWAP1 PUSH2 0x2788 JUMP JUMPDEST PUSH2 0x4D4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F8 SWAP1 PUSH2 0x2EF0 JUMP JUMPDEST PUSH2 0x4F1 DUP2 DUP5 DUP12 DUP12 DUP7 DUP2 DUP2 LT PUSH2 0x4E5 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH2 0x2116 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xE4E1E538 DUP13 DUP13 DUP6 DUP2 DUP2 LT PUSH2 0x50C JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x521 SWAP2 SWAP1 PUSH2 0x26BA JUMP JUMPDEST DUP12 DUP12 DUP7 DUP2 DUP2 LT PUSH2 0x52D JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP11 DUP11 DUP8 DUP2 DUP2 LT PUSH2 0x540 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x565 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2E66 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x57F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x593 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 POP PUSH2 0x3F7 SWAP2 POP POP JUMP JUMPDEST POP DUP2 ISZERO PUSH2 0x714 JUMPI DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x4BB278F3 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5FA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP3 POP PUSH4 0xA9059CBB SWAP2 POP CALLER SWAP1 DUP4 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x634 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x2CF8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x64C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x660 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x684 SWAP2 SWAP1 PUSH2 0x2BA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A1 SWAP3 SWAP2 SWAP1 PUSH2 0x2D30 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6CF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6F3 SWAP2 SWAP1 PUSH2 0x2788 JUMP JUMPDEST PUSH2 0x70F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F8 SWAP1 PUSH2 0x2EF0 JUMP JUMPDEST PUSH2 0x774 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x24DACAA9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x49B59552 SWAP1 PUSH2 0x741 SWAP1 PUSH1 0x1 SWAP1 PUSH1 0x4 ADD PUSH2 0x2EAE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x75B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x76F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x24DACAA9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x49B59552 SWAP1 PUSH2 0x7AD SWAP1 DUP5 SWAP1 PUSH1 0x4 ADD PUSH2 0x2EAE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7DB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xB64EF17B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x81E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x832 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x856 SWAP2 SWAP1 PUSH2 0x293E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xCC77828D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x88E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8A2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x8CA SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x26DD JUMP JUMPDEST SWAP1 POP PUSH2 0x90B DUP6 DUP3 DUP7 DUP7 DUP7 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x22B9 SWAP3 POP POP POP JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xC83A1C2D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0xC83A1C2D SWAP1 PUSH2 0x7AD SWAP1 DUP5 SWAP1 PUSH1 0x4 ADD PUSH2 0x2CF8 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x4BB278F3 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x992 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9A6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP3 POP PUSH4 0xA9059CBB SWAP2 POP CALLER SWAP1 DUP4 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x9E0 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x2CF8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA0C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA30 SWAP2 SWAP1 PUSH2 0x2BA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA4D SWAP3 SWAP2 SWAP1 PUSH2 0x2D30 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA7B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA9F SWAP2 SWAP1 PUSH2 0x2788 JUMP JUMPDEST PUSH2 0xABB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F8 SWAP1 PUSH2 0x2EF0 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0xAEE SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x2D0C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB08 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB1C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB40 SWAP2 SWAP1 PUSH2 0x2788 JUMP JUMPDEST PUSH2 0xB5C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F8 SWAP1 PUSH2 0x2EF0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x9776E94B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x9776E94B SWAP1 PUSH2 0xB8A SWAP1 DUP7 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x2D30 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBA4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xBB8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP3 POP PUSH4 0xA9059CBB SWAP2 POP CALLER SWAP1 DUP4 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0xBF2 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x2CF8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC0A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC1E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC42 SWAP2 SWAP1 PUSH2 0x2BA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC5F SWAP3 SWAP2 SWAP1 PUSH2 0x2D30 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC8D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCB1 SWAP2 SWAP1 PUSH2 0x2788 JUMP JUMPDEST PUSH2 0xCCD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F8 SWAP1 PUSH2 0x2EF0 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x92EEFE9B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x92EEFE9B SWAP1 PUSH2 0x7AD SWAP1 DUP5 SWAP1 PUSH1 0x4 ADD PUSH2 0x2CF8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x47786D3700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x47786D37 SWAP1 PUSH2 0x7AD SWAP1 DUP5 SWAP1 PUSH1 0x4 ADD PUSH2 0x2F27 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0xD8D SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x2D0C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xDBB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDDF SWAP2 SWAP1 PUSH2 0x2788 JUMP JUMPDEST PUSH2 0xDFB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F8 SWAP1 PUSH2 0x2EF0 JUMP JUMPDEST PUSH2 0xE06 DUP4 DUP6 DUP4 PUSH2 0x2116 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x9776E94B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x9776E94B SWAP1 PUSH2 0xE34 SWAP1 DUP7 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x2D30 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE4E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE62 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP3 POP PUSH4 0xA9059CBB SWAP2 POP CALLER SWAP1 DUP4 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0xBF2 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x2CF8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0xECC SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x2D0C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xEE6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xEFA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF1E SWAP2 SWAP1 PUSH2 0x2788 JUMP JUMPDEST PUSH2 0xF3A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F8 SWAP1 PUSH2 0x2EF0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x5FA7B58400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x5FA7B584 SWAP1 PUSH2 0xF7F SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x2CF8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF99 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xFAD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP3 POP PUSH4 0xA9059CBB SWAP2 POP CALLER SWAP1 DUP4 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0xFE7 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x2CF8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFFF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1013 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1037 SWAP2 SWAP1 PUSH2 0x2BA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1054 SWAP3 SWAP2 SWAP1 PUSH2 0x2D30 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x106E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1082 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10A6 SWAP2 SWAP1 PUSH2 0x2788 JUMP JUMPDEST PUSH2 0x10C2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F8 SWAP1 PUSH2 0x2EF0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xBE3BBD2E PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x88E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x34E19907 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x34E19907 SWAP1 PUSH2 0x7AD SWAP1 DUP5 SWAP1 PUSH1 0x4 ADD PUSH2 0x2F27 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x246BC19B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0x246BC19B SWAP1 PUSH2 0x1179 SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x2E87 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1193 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x11A7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x4C20D20900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x4C20D209 SWAP1 PUSH2 0x11FB SWAP1 DUP7 SWAP1 DUP7 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x2E66 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1215 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1229 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xE2762D4B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0xE2762D4B SWAP1 PUSH2 0x7AD SWAP1 DUP5 SWAP1 PUSH1 0x4 ADD PUSH2 0x2CF8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x12A8 SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x2D0C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x12C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x12D6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x12FA SWAP2 SWAP1 PUSH2 0x2788 JUMP JUMPDEST PUSH2 0x1316 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F8 SWAP1 PUSH2 0x2EF0 JUMP JUMPDEST PUSH2 0x1321 DUP3 DUP5 DUP4 PUSH2 0x2116 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xC275D81B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x135C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1370 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP3 POP PUSH4 0xA9059CBB SWAP2 POP CALLER SWAP1 DUP4 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0xFE7 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x2CF8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13B9 PUSH1 0x60 DUP6 ADD DUP6 PUSH2 0x2F93 JUMP JUMPDEST SWAP1 POP PUSH2 0x13C8 PUSH1 0x40 DUP7 ADD DUP7 PUSH2 0x2F93 JUMP JUMPDEST SWAP1 POP EQ PUSH2 0x13E7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F8 SWAP1 PUSH2 0x2EB9 JUMP JUMPDEST PUSH2 0x13F4 PUSH1 0x80 DUP6 ADD DUP6 PUSH2 0x2F93 JUMP JUMPDEST SWAP1 POP PUSH2 0x1403 PUSH1 0x40 DUP7 ADD DUP7 PUSH2 0x2F93 JUMP JUMPDEST SWAP1 POP EQ PUSH2 0x1422 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F8 SWAP1 PUSH2 0x2EB9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x4420002B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 PUSH4 0x4420002B SWAP1 PUSH2 0x146B SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x2D63 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1485 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1499 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x14BD SWAP2 SWAP1 PUSH2 0x293E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST PUSH2 0x14CF PUSH1 0x40 DUP7 ADD DUP7 PUSH2 0x2F93 JUMP JUMPDEST SWAP1 POP DUP2 LT ISZERO PUSH2 0x15E8 JUMPI PUSH1 0x0 PUSH2 0x14E7 PUSH1 0x40 DUP8 ADD DUP8 PUSH2 0x2F93 JUMP JUMPDEST DUP4 DUP2 DUP2 LT PUSH2 0x14F1 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1506 SWAP2 SWAP1 PUSH2 0x26BA JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH4 0x23B872DD CALLER ADDRESS PUSH2 0x1526 PUSH1 0x60 DUP12 ADD DUP12 PUSH2 0x2F93 JUMP JUMPDEST DUP8 DUP2 DUP2 LT PUSH2 0x1530 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1555 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2D0C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x156F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1583 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x15A7 SWAP2 SWAP1 PUSH2 0x2788 JUMP JUMPDEST PUSH2 0x15C3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F8 SWAP1 PUSH2 0x2EF0 JUMP JUMPDEST PUSH2 0x15DF DUP2 DUP5 PUSH2 0x15D5 PUSH1 0x60 DUP11 ADD DUP11 PUSH2 0x2F93 JUMP JUMPDEST DUP7 DUP2 DUP2 LT PUSH2 0x4E5 JUMPI INVALID JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x14C2 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH32 0xC3391D2700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP2 PUSH4 0xC3391D27 SWAP2 PUSH2 0x163A SWAP2 DUP8 CALLDATALOAD SWAP2 PUSH1 0x20 DUP10 ADD CALLDATALOAD SWAP2 DUP10 ADD CALLDATALOAD SWAP1 PUSH1 0x4 ADD PUSH2 0x2F7D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1654 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1668 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP3 POP PUSH4 0xA9059CBB SWAP2 POP PUSH2 0x169B SWAP1 CALLER SWAP1 DUP8 CALLDATALOAD SWAP1 PUSH1 0x4 ADD PUSH2 0x2D30 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x16B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x16C9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x16ED SWAP2 SWAP1 PUSH2 0x2788 JUMP JUMPDEST PUSH2 0x1709 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F8 SWAP1 PUSH2 0x2EF0 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x1742 SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x2D0C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x175C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1770 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1794 SWAP2 SWAP1 PUSH2 0x2788 JUMP JUMPDEST PUSH2 0x17B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F8 SWAP1 PUSH2 0x2EF0 JUMP JUMPDEST PUSH2 0x17BB DUP4 DUP6 DUP5 PUSH2 0x2116 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x5DB3427700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0x5DB34277 SWAP1 PUSH2 0x1807 SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x2E66 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1821 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1835 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1859 SWAP2 SWAP1 PUSH2 0x2BA3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH2 0x188A SWAP1 CALLER SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x2D30 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x18A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x18B8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x18DC SWAP2 SWAP1 PUSH2 0x2788 JUMP JUMPDEST PUSH2 0x90B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F8 SWAP1 PUSH2 0x2EF0 JUMP JUMPDEST DUP5 DUP4 EQ PUSH2 0x1917 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F8 SWAP1 PUSH2 0x2EB9 JUMP JUMPDEST DUP5 DUP2 EQ PUSH2 0x1936 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F8 SWAP1 PUSH2 0x2EB9 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x1229 JUMPI PUSH1 0x0 DUP8 DUP8 DUP4 DUP2 DUP2 LT PUSH2 0x194F JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1964 SWAP2 SWAP1 PUSH2 0x26BA JUMP JUMPDEST SWAP1 POP DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x2F37B624 DUP10 DUP10 DUP6 DUP2 DUP2 LT PUSH2 0x1981 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1996 SWAP2 SWAP1 PUSH2 0x26BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19B2 SWAP2 SWAP1 PUSH2 0x2CF8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x19CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x19DE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1A02 SWAP2 SWAP1 PUSH2 0x2788 JUMP JUMPDEST ISZERO PUSH2 0x1E0F JUMPI DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF8B2CB4F DUP10 DUP10 DUP6 DUP2 DUP2 LT PUSH2 0x1A22 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1A37 SWAP2 SWAP1 PUSH2 0x26BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A53 SWAP2 SWAP1 PUSH2 0x2CF8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1A6B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A7F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1AA3 SWAP2 SWAP1 PUSH2 0x2BA3 JUMP JUMPDEST DUP7 DUP7 DUP5 DUP2 DUP2 LT PUSH2 0x1AAF JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD GT ISZERO PUSH2 0x1CC3 JUMPI DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x23B872DD CALLER ADDRESS DUP13 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF8B2CB4F DUP14 DUP14 DUP10 DUP2 DUP2 LT PUSH2 0x1AE8 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1AFD SWAP2 SWAP1 PUSH2 0x26BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B19 SWAP2 SWAP1 PUSH2 0x2CF8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1B31 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1B45 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1B69 SWAP2 SWAP1 PUSH2 0x2BA3 JUMP JUMPDEST DUP11 DUP11 DUP9 DUP2 DUP2 LT PUSH2 0x1B75 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD SUB PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B9B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2D0C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1BB5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1BC9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1BED SWAP2 SWAP1 PUSH2 0x2788 JUMP JUMPDEST PUSH2 0x1C09 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F8 SWAP1 PUSH2 0x2EF0 JUMP JUMPDEST PUSH2 0x1CC3 DUP2 DUP11 DUP12 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF8B2CB4F DUP13 DUP13 DUP9 DUP2 DUP2 LT PUSH2 0x1C29 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1C3E SWAP2 SWAP1 PUSH2 0x26BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C5A SWAP2 SWAP1 PUSH2 0x2CF8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1C72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1C86 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1CAA SWAP2 SWAP1 PUSH2 0x2BA3 JUMP JUMPDEST DUP10 DUP10 DUP8 DUP2 DUP2 LT PUSH2 0x1CB6 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD SUB PUSH2 0x2116 JUMP JUMPDEST PUSH3 0xF4240 DUP7 DUP7 DUP5 DUP2 DUP2 LT PUSH2 0x1CD3 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD GT ISZERO PUSH2 0x1D8B JUMPI DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x3FDDDAA2 DUP10 DUP10 DUP6 DUP2 DUP2 LT PUSH2 0x1CFB JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1D10 SWAP2 SWAP1 PUSH2 0x26BA JUMP JUMPDEST DUP9 DUP9 DUP7 DUP2 DUP2 LT PUSH2 0x1D1C JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP8 DUP8 DUP8 DUP2 DUP2 LT PUSH2 0x1D2F JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D54 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2E66 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1D6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1D82 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x1E0A JUMP JUMPDEST DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xCF5E7BD3 DUP10 DUP10 DUP6 DUP2 DUP2 LT PUSH2 0x1DA6 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1DBB SWAP2 SWAP1 PUSH2 0x26BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DD7 SWAP2 SWAP1 PUSH2 0x2CF8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1DF1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1E05 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH2 0x1F77 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x23B872DD CALLER ADDRESS DUP10 DUP10 DUP8 DUP2 DUP2 LT PUSH2 0x1E2C JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E51 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2D0C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1E6B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1E7F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1EA3 SWAP2 SWAP1 PUSH2 0x2788 JUMP JUMPDEST PUSH2 0x1EBF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F8 SWAP1 PUSH2 0x2EF0 JUMP JUMPDEST PUSH2 0x1ED0 DUP2 DUP11 DUP9 DUP9 DUP7 DUP2 DUP2 LT PUSH2 0x4E5 JUMPI INVALID JUMPDEST DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xE4E1E538 DUP10 DUP10 DUP6 DUP2 DUP2 LT PUSH2 0x1EEB JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1F00 SWAP2 SWAP1 PUSH2 0x26BA JUMP JUMPDEST DUP9 DUP9 DUP7 DUP2 DUP2 LT PUSH2 0x1F0C JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP8 DUP8 DUP8 DUP2 DUP2 LT PUSH2 0x1F1F JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F44 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2E66 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1F5E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1F72 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x1FA6 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x2CF8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1FBE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1FD2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1FF6 SWAP2 SWAP1 PUSH2 0x2BA3 JUMP JUMPDEST GT ISZERO PUSH2 0x210D JUMPI PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0xA9059CBB SWAP1 CALLER SWAP1 DUP4 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x2032 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x2CF8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x204A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x205E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2082 SWAP2 SWAP1 PUSH2 0x2BA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x209F SWAP3 SWAP2 SWAP1 PUSH2 0x2D30 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x20B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x20CD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x20F1 SWAP2 SWAP1 PUSH2 0x2788 JUMP JUMPDEST PUSH2 0x210D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F8 SWAP1 PUSH2 0x2EF0 JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x1939 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xDD62ED3E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH2 0x2160 SWAP1 ADDRESS SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x2D49 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2178 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x218C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x21B0 SWAP2 SWAP1 PUSH2 0x2BA3 JUMP JUMPDEST GT ISZERO PUSH2 0x2239 JUMPI PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH2 0x21E5 SWAP1 DUP6 SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x4 ADD PUSH2 0x2D30 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x21FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2213 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2237 SWAP2 SWAP1 PUSH2 0x2788 JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH2 0x2267 SWAP1 DUP6 SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x2D30 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2281 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2295 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCCD SWAP2 SWAP1 PUSH2 0x2788 JUMP JUMPDEST DUP3 MLOAD DUP2 MLOAD EQ PUSH2 0x22DA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F8 SWAP1 PUSH2 0x2EB9 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x23D6 JUMPI PUSH1 0x0 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x22F4 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x23B872DD CALLER ADDRESS DUP7 DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x231B JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2341 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2D0C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x235B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x236F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2393 SWAP2 SWAP1 PUSH2 0x2788 JUMP JUMPDEST PUSH2 0x23AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F8 SWAP1 PUSH2 0x2EF0 JUMP JUMPDEST PUSH2 0x23CD DUP2 DUP8 DUP6 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x23C0 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2116 JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x22DD JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0x4F69C0D400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x4F69C0D4 SWAP1 PUSH2 0x241E SWAP1 DUP6 SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x2F30 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2438 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x244C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x2612 JUMPI PUSH1 0x0 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x246A JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x24A2 SWAP2 SWAP1 PUSH2 0x2CF8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x24BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x24CE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x24F2 SWAP2 SWAP1 PUSH2 0x2BA3 JUMP JUMPDEST GT ISZERO PUSH2 0x2609 JUMPI PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0xA9059CBB SWAP1 CALLER SWAP1 DUP4 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x252E SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x2CF8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2546 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x255A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x257E SWAP2 SWAP1 PUSH2 0x2BA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x259B SWAP3 SWAP2 SWAP1 PUSH2 0x2D30 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x25B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x25C9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x25ED SWAP2 SWAP1 PUSH2 0x2788 JUMP JUMPDEST PUSH2 0x2609 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F8 SWAP1 PUSH2 0x2EF0 JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x2453 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xA9059CBB SWAP1 CALLER SWAP1 DUP4 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0xBF2 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x2CF8 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x2654 DUP2 PUSH2 0x308E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x266B JUMPI DUP2 DUP3 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2682 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP1 DUP4 MUL DUP6 ADD ADD GT ISZERO PUSH2 0x269C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x26B4 JUMPI DUP1 DUP2 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x26CB JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x26D6 DUP2 PUSH2 0x308E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x26EF JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2706 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2719 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x2727 JUMPI DUP5 DUP6 REVERT JUMPDEST DUP4 DUP2 MUL SWAP2 POP PUSH2 0x2737 DUP5 DUP4 ADD PUSH2 0x2FDA JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 DUP2 ADD SWAP1 DUP5 DUP7 ADD DUP5 DUP7 ADD DUP8 ADD DUP11 LT ISZERO PUSH2 0x2751 JUMPI DUP8 DUP9 REVERT JUMPDEST DUP8 SWAP6 POP JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x277B JUMPI PUSH2 0x2767 DUP11 DUP3 PUSH2 0x2649 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x1 SWAP6 SWAP1 SWAP6 ADD SWAP5 SWAP2 DUP7 ADD SWAP2 DUP7 ADD PUSH2 0x2755 JUMP JUMPDEST POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2799 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x26D6 DUP2 PUSH2 0x30A3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x27B6 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x27C1 DUP2 PUSH2 0x308E JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x27D1 DUP2 PUSH2 0x308E JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x27EE JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x27F9 DUP2 PUSH2 0x308E JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x27D1 DUP2 PUSH2 0x30A3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x281E JUMPI DUP2 DUP3 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x2829 DUP2 PUSH2 0x308E JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0x2839 DUP2 PUSH2 0x308E JUMP JUMPDEST SWAP4 SWAP7 SWAP4 SWAP6 POP POP POP POP PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP2 PUSH1 0x60 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2860 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x286B DUP2 PUSH2 0x308E JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xC0 DUP11 DUP13 SUB SLT ISZERO PUSH2 0x2896 JUMPI DUP5 DUP6 REVERT JUMPDEST DUP10 CALLDATALOAD PUSH2 0x28A1 DUP2 PUSH2 0x308E JUMP JUMPDEST SWAP9 POP PUSH1 0x20 DUP11 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x28BD JUMPI DUP7 DUP8 REVERT JUMPDEST PUSH2 0x28C9 DUP14 DUP4 DUP15 ADD PUSH2 0x265A JUMP JUMPDEST SWAP1 SWAP11 POP SWAP9 POP PUSH1 0x40 DUP13 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x28E1 JUMPI DUP7 DUP8 REVERT JUMPDEST PUSH2 0x28ED DUP14 DUP4 DUP15 ADD PUSH2 0x265A JUMP JUMPDEST SWAP1 SWAP9 POP SWAP7 POP PUSH1 0x60 DUP13 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2905 JUMPI DUP6 DUP7 REVERT JUMPDEST POP PUSH2 0x2912 DUP13 DUP3 DUP14 ADD PUSH2 0x265A JUMP JUMPDEST SWAP1 SWAP6 POP SWAP4 POP POP PUSH1 0x80 DUP11 ADD CALLDATALOAD SWAP2 POP PUSH1 0xA0 DUP11 ADD CALLDATALOAD PUSH2 0x292D DUP2 PUSH2 0x30A3 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x294F JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x26D6 DUP2 PUSH2 0x308E JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x2974 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP8 CALLDATALOAD PUSH2 0x297F DUP2 PUSH2 0x308E JUMP JUMPDEST SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x299B JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x29A7 DUP12 DUP4 DUP13 ADD PUSH2 0x265A JUMP JUMPDEST SWAP1 SWAP9 POP SWAP7 POP PUSH1 0x40 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x29BF JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x29CB DUP12 DUP4 DUP13 ADD PUSH2 0x265A JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x60 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x29E3 JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH2 0x29F0 DUP11 DUP3 DUP12 ADD PUSH2 0x265A JUMP JUMPDEST SWAP9 SWAP12 SWAP8 SWAP11 POP SWAP6 SWAP9 POP SWAP4 SWAP7 SWAP3 SWAP6 SWAP3 SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2A18 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x2A23 DUP2 PUSH2 0x308E JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2A45 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x2A51 DUP8 DUP3 DUP9 ADD PUSH2 0x265A JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 DUP8 SUB PUSH2 0x180 DUP2 SLT ISZERO PUSH2 0x2A76 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH2 0x2A81 DUP2 PUSH2 0x308E JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD PUSH2 0x2A91 DUP2 PUSH2 0x308E JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2AAC JUMPI DUP5 DUP6 REVERT JUMPDEST PUSH2 0x2AB8 DUP10 DUP3 DUP11 ADD PUSH2 0x26A3 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH1 0x5F NOT DUP3 ADD SLT ISZERO PUSH2 0x2ACC JUMPI DUP2 DUP3 REVERT JUMPDEST POP PUSH1 0x60 DUP7 ADD SWAP2 POP PUSH2 0x2AE0 DUP8 PUSH1 0xC0 DUP9 ADD PUSH2 0x26A3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x27B6 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2B15 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x2B20 DUP2 PUSH2 0x308E JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2B3B JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0x2B47 DUP9 DUP3 DUP10 ADD PUSH2 0x265A JUMP JUMPDEST SWAP7 SWAP10 SWAP1 SWAP9 POP SWAP6 SWAP7 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP7 PUSH1 0x60 SWAP1 SWAP2 ADD CALLDATALOAD SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2B77 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x2B82 DUP2 PUSH2 0x308E JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x2B92 DUP2 PUSH2 0x308E JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2BB4 JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP3 DUP3 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x2BF8 JUMPI DUP2 CALLDATALOAD PUSH2 0x2BDD DUP2 PUSH2 0x308E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x2BCA JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 MSTORE PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 GT ISZERO PUSH2 0x2C34 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH1 0x20 DUP4 MUL DUP1 DUP4 PUSH1 0x20 DUP8 ADD CALLDATACOPY SWAP4 SWAP1 SWAP4 ADD PUSH1 0x20 ADD SWAP3 DUP4 MSTORE POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 MSTORE DUP3 DUP3 PUSH1 0x20 DUP7 ADD CALLDATACOPY DUP1 PUSH1 0x20 DUP5 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP6 ADD AND DUP6 ADD ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0x2C85 DUP2 PUSH2 0x30A3 JUMP JUMPDEST ISZERO ISZERO DUP3 MSTORE PUSH1 0x20 DUP2 ADD CALLDATALOAD PUSH2 0x2C97 DUP2 PUSH2 0x30A3 JUMP JUMPDEST ISZERO ISZERO PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP2 ADD CALLDATALOAD PUSH2 0x2CAC DUP2 PUSH2 0x30A3 JUMP JUMPDEST ISZERO ISZERO PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP2 ADD CALLDATALOAD PUSH2 0x2CC1 DUP2 PUSH2 0x30A3 JUMP JUMPDEST ISZERO ISZERO PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP2 ADD CALLDATALOAD PUSH2 0x2CD6 DUP2 PUSH2 0x30A3 JUMP JUMPDEST ISZERO ISZERO PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP2 ADD CALLDATALOAD PUSH2 0x2CEB DUP2 PUSH2 0x30A3 JUMP JUMPDEST DUP1 ISZERO ISZERO PUSH1 0xA0 DUP5 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP4 MSTORE DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x2D84 DUP6 DUP7 PUSH2 0x3049 JUMP JUMPDEST PUSH1 0xC0 DUP4 DUP7 ADD MSTORE PUSH2 0x2D99 PUSH2 0x1C0 DUP7 ADD DUP3 DUP5 PUSH2 0x2C50 JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x2DAA PUSH1 0x20 DUP7 ADD DUP7 PUSH2 0x3049 JUMP JUMPDEST PUSH1 0xFF NOT DUP1 DUP7 DUP6 SUB ADD PUSH2 0x120 DUP8 ADD MSTORE PUSH2 0x2DC3 DUP5 DUP4 DUP6 PUSH2 0x2C50 JUMP JUMPDEST SWAP4 POP PUSH2 0x2DD2 PUSH1 0x40 DUP10 ADD DUP10 PUSH2 0x3001 JUMP JUMPDEST SWAP4 POP SWAP2 POP DUP1 DUP7 DUP6 SUB ADD PUSH2 0x140 DUP8 ADD MSTORE PUSH2 0x2DEC DUP5 DUP5 DUP5 PUSH2 0x2BBB JUMP JUMPDEST SWAP4 POP PUSH2 0x2DFB PUSH1 0x60 DUP10 ADD DUP10 PUSH2 0x3001 JUMP JUMPDEST SWAP4 POP SWAP2 POP DUP1 DUP7 DUP6 SUB ADD PUSH2 0x160 DUP8 ADD MSTORE PUSH2 0x2E15 DUP5 DUP5 DUP5 PUSH2 0x2C03 JUMP JUMPDEST SWAP4 POP PUSH2 0x2E24 PUSH1 0x80 DUP10 ADD DUP10 PUSH2 0x3001 JUMP JUMPDEST SWAP4 POP SWAP2 POP DUP1 DUP7 DUP6 SUB ADD PUSH2 0x180 DUP8 ADD MSTORE POP PUSH2 0x2E3F DUP4 DUP4 DUP4 PUSH2 0x2C03 JUMP JUMPDEST PUSH1 0xA0 DUP9 ADD CALLDATALOAD PUSH2 0x1A0 DUP8 ADD MSTORE SWAP4 POP PUSH2 0x2E5E SWAP3 POP POP PUSH1 0x40 DUP5 ADD SWAP1 POP DUP5 PUSH2 0x2C7A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 MSTORE PUSH2 0x2E9B PUSH1 0x60 DUP4 ADD DUP7 DUP9 PUSH2 0x2C03 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP5 SWAP1 SWAP5 MSTORE POP PUSH1 0x40 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x13 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552525F4C454E4754485F4D49534D4154434800000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x13 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552525F5452414E534645525F4641494C454400000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD DUP5 DUP4 MSTORE PUSH1 0x20 PUSH1 0x40 DUP2 DUP6 ADD MSTORE DUP2 DUP6 MLOAD DUP1 DUP5 MSTORE PUSH1 0x60 DUP7 ADD SWAP2 POP DUP3 DUP8 ADD SWAP4 POP DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2F70 JUMPI DUP5 MLOAD DUP4 MSTORE SWAP4 DUP4 ADD SWAP4 SWAP2 DUP4 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x2F54 JUMP JUMPDEST POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1E NOT DUP5 CALLDATASIZE SUB ADD DUP2 SLT PUSH2 0x2FA9 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 ADD DUP1 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2FC3 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 ADD SWAP3 POP DUP2 MUL CALLDATASIZE SUB DUP3 SGT ISZERO PUSH2 0x269C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x2FF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1E NOT DUP5 CALLDATASIZE SUB ADD DUP2 SLT PUSH2 0x3017 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 ADD PUSH1 0x20 DUP2 ADD SWAP3 POP CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3037 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP2 MUL CALLDATASIZE SUB DUP4 SGT ISZERO PUSH2 0x269C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1E NOT DUP5 CALLDATASIZE SUB ADD DUP2 SLT PUSH2 0x305F JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 ADD PUSH1 0x20 DUP2 ADD SWAP3 POP CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x307F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATASIZE SUB DUP4 SGT ISZERO PUSH2 0x269C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xABB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xABB JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 REVERT 0xD0 MSTORE 0xD5 0xCA 0xE8 PUSH23 0x9A92E7F904AA9D597EE277050ED6000F267C770268092A 0xC3 PUSH29 0x64736F6C634300060C0033000000000000000000000000000000000000 ",
              "sourceMap": "4038:9604:0:-:0;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "immutableReferences": {},
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b50600436106101515760003560e01c806384f3859b116100cd578063a7f28da711610081578063c152e57911610066578063c152e5791461029e578063c1762b15146102b1578063e0d945bf146102c457610151565b8063a7f28da714610278578063c037f39c1461028b57610151565b8063991991c7116100b2578063991991c71461023f5780639c11bd17146102525780639fbbf3ba1461026557610151565b806384f3859b146102195780638a5c57df1461022c57610151565b80634ef39b75116101245780637b7d6c68116101095780637b7d6c68146101e057806380ad2cf3146101f357806381bd5cd71461020657610151565b80634ef39b75146101ba578063674f8d8e146101cd57610151565b80631a78a275146101565780631eccc1851461017f5780632c91a59114610194578063333fbeef146101a7575b600080fd5b610169610164366004612879565b6102d7565b6040516101769190612cf8565b60405180910390f35b61019261018d3660046127dc565b610781565b005b6101926101a2366004612a03565b6107e3565b6101926101b5366004612aec565b610912565b6101926101c83660046126ba565b610957565b6101926101db366004612809565b610abe565b6101926101ee3660046127a4565b610cd3565b61019261020136600461284e565b610d18565b610192610214366004612809565b610d5d565b610192610227366004612b63565b610e9c565b61019261023a366004612a03565b6110c7565b61019261024d36600461284e565b611102565b610192610260366004612afe565b61112e565b610192610273366004612809565b6111b2565b610192610286366004612aec565b611233565b610192610299366004612b63565b611278565b6101696102ac366004612a5d565b6113aa565b6101926102bf366004612809565b611712565b6101926102d236600461295a565b6118f8565b60008786146103015760405162461bcd60e51b81526004016102f890612eb9565b60405180910390fd5b8784146103205760405162461bcd60e51b81526004016102f890612eb9565b896001600160a01b031663d556c5dc6040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561035b57600080fd5b505af115801561036f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610393919061293e565b6040516334e1990760e01b81529091506001600160a01b038216906334e19907906103c2908690600401612f27565b600060405180830381600087803b1580156103dc57600080fd5b505af11580156103f0573d6000803e3d6000fd5b5050505060005b888110156105a45760008a8a8381811061040d57fe5b905060200201602081019061042291906126ba565b9050806001600160a01b03166323b872dd33308c8c8781811061044157fe5b905060200201356040518463ffffffff1660e01b815260040161046693929190612d0c565b602060405180830381600087803b15801561048057600080fd5b505af1158015610494573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104b89190612788565b6104d45760405162461bcd60e51b81526004016102f890612ef0565b6104f181848b8b868181106104e557fe5b90506020020135612116565b826001600160a01b031663e4e1e5388c8c8581811061050c57fe5b905060200201602081019061052191906126ba565b8b8b8681811061052d57fe5b905060200201358a8a8781811061054057fe5b905060200201356040518463ffffffff1660e01b815260040161056593929190612e66565b600060405180830381600087803b15801561057f57600080fd5b505af1158015610593573d6000803e3d6000fd5b5050600190930192506103f7915050565b50811561071457806001600160a01b0316634bb278f36040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156105e657600080fd5b505af11580156105fa573d6000803e3d6000fd5b50506040516370a0823160e01b81526001600160a01b038416925063a9059cbb9150339083906370a0823190610634903090600401612cf8565b60206040518083038186803b15801561064c57600080fd5b505afa158015610660573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106849190612ba3565b6040518363ffffffff1660e01b81526004016106a1929190612d30565b602060405180830381600087803b1580156106bb57600080fd5b505af11580156106cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106f39190612788565b61070f5760405162461bcd60e51b81526004016102f890612ef0565b610774565b6040516324dacaa960e11b81526001600160a01b038216906349b595529061074190600190600401612eae565b600060405180830381600087803b15801561075b57600080fd5b505af115801561076f573d6000803e3d6000fd5b505050505b9998505050505050505050565b6040516324dacaa960e11b81526001600160a01b038316906349b59552906107ad908490600401612eae565b600060405180830381600087803b1580156107c757600080fd5b505af11580156107db573d6000803e3d6000fd5b505050505050565b6060846001600160a01b031663b64ef17b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561081e57600080fd5b505afa158015610832573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610856919061293e565b6001600160a01b031663cc77828d6040518163ffffffff1660e01b815260040160006040518083038186803b15801561088e57600080fd5b505afa1580156108a2573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526108ca91908101906126dd565b905061090b8582868686808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152506122b992505050565b5050505050565b6040517fc83a1c2d0000000000000000000000000000000000000000000000000000000081526001600160a01b0383169063c83a1c2d906107ad908490600401612cf8565b806001600160a01b0316634bb278f36040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561099257600080fd5b505af11580156109a6573d6000803e3d6000fd5b50506040516370a0823160e01b81526001600160a01b038416925063a9059cbb9150339083906370a08231906109e0903090600401612cf8565b60206040518083038186803b1580156109f857600080fd5b505afa158015610a0c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a309190612ba3565b6040518363ffffffff1660e01b8152600401610a4d929190612d30565b602060405180830381600087803b158015610a6757600080fd5b505af1158015610a7b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a9f9190612788565b610abb5760405162461bcd60e51b81526004016102f890612ef0565b50565b6040516323b872dd60e01b81526001600160a01b038516906323b872dd90610aee90339030908690600401612d0c565b602060405180830381600087803b158015610b0857600080fd5b505af1158015610b1c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b409190612788565b610b5c5760405162461bcd60e51b81526004016102f890612ef0565b604051639776e94b60e01b81526001600160a01b03851690639776e94b90610b8a9086908690600401612d30565b600060405180830381600087803b158015610ba457600080fd5b505af1158015610bb8573d6000803e3d6000fd5b50506040516370a0823160e01b81526001600160a01b038616925063a9059cbb9150339083906370a0823190610bf2903090600401612cf8565b60206040518083038186803b158015610c0a57600080fd5b505afa158015610c1e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c429190612ba3565b6040518363ffffffff1660e01b8152600401610c5f929190612d30565b602060405180830381600087803b158015610c7957600080fd5b505af1158015610c8d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cb19190612788565b610ccd5760405162461bcd60e51b81526004016102f890612ef0565b50505050565b6040517f92eefe9b0000000000000000000000000000000000000000000000000000000081526001600160a01b038316906392eefe9b906107ad908490600401612cf8565b6040517f47786d370000000000000000000000000000000000000000000000000000000081526001600160a01b038316906347786d37906107ad908490600401612f27565b6040516323b872dd60e01b81526001600160a01b038416906323b872dd90610d8d90339030908690600401612d0c565b602060405180830381600087803b158015610da757600080fd5b505af1158015610dbb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ddf9190612788565b610dfb5760405162461bcd60e51b81526004016102f890612ef0565b610e06838583612116565b604051639776e94b60e01b81526001600160a01b03851690639776e94b90610e349086908690600401612d30565b600060405180830381600087803b158015610e4e57600080fd5b505af1158015610e62573d6000803e3d6000fd5b50506040516370a0823160e01b81526001600160a01b038716925063a9059cbb9150339083906370a0823190610bf2903090600401612cf8565b6040516323b872dd60e01b81526001600160a01b038416906323b872dd90610ecc90339030908690600401612d0c565b602060405180830381600087803b158015610ee657600080fd5b505af1158015610efa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f1e9190612788565b610f3a5760405162461bcd60e51b81526004016102f890612ef0565b6040517f5fa7b5840000000000000000000000000000000000000000000000000000000081526001600160a01b03841690635fa7b58490610f7f908590600401612cf8565b600060405180830381600087803b158015610f9957600080fd5b505af1158015610fad573d6000803e3d6000fd5b50506040516370a0823160e01b81526001600160a01b038516925063a9059cbb9150339083906370a0823190610fe7903090600401612cf8565b60206040518083038186803b158015610fff57600080fd5b505afa158015611013573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110379190612ba3565b6040518363ffffffff1660e01b8152600401611054929190612d30565b602060405180830381600087803b15801561106e57600080fd5b505af1158015611082573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110a69190612788565b6110c25760405162461bcd60e51b81526004016102f890612ef0565b505050565b6060846001600160a01b031663be3bbd2e6040518163ffffffff1660e01b815260040160006040518083038186803b15801561088e57600080fd5b6040516334e1990760e01b81526001600160a01b038316906334e19907906107ad908490600401612f27565b6040517f246bc19b0000000000000000000000000000000000000000000000000000000081526001600160a01b0386169063246bc19b90611179908790879087908790600401612e87565b600060405180830381600087803b15801561119357600080fd5b505af11580156111a7573d6000803e3d6000fd5b505050505050505050565b6040517f4c20d2090000000000000000000000000000000000000000000000000000000081526001600160a01b03851690634c20d209906111fb90869086908690600401612e66565b600060405180830381600087803b15801561121557600080fd5b505af1158015611229573d6000803e3d6000fd5b5050505050505050565b6040517fe2762d4b0000000000000000000000000000000000000000000000000000000081526001600160a01b0383169063e2762d4b906107ad908490600401612cf8565b6040516323b872dd60e01b81526001600160a01b038316906323b872dd906112a890339030908690600401612d0c565b602060405180830381600087803b1580156112c257600080fd5b505af11580156112d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112fa9190612788565b6113165760405162461bcd60e51b81526004016102f890612ef0565b611321828483612116565b826001600160a01b031663c275d81b6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561135c57600080fd5b505af1158015611370573d6000803e3d6000fd5b50506040516370a0823160e01b81526001600160a01b038616925063a9059cbb9150339083906370a0823190610fe7903090600401612cf8565b60006113b96060850185612f93565b90506113c86040860186612f93565b9050146113e75760405162461bcd60e51b81526004016102f890612eb9565b6113f46080850185612f93565b90506114036040860186612f93565b9050146114225760405162461bcd60e51b81526004016102f890612eb9565b6040517f4420002b0000000000000000000000000000000000000000000000000000000081526001600160a01b03871690634420002b9061146b90889088908790600401612d63565b602060405180830381600087803b15801561148557600080fd5b505af1158015611499573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114bd919061293e565b905060005b6114cf6040860186612f93565b90508110156115e85760006114e76040870187612f93565b838181106114f157fe5b905060200201602081019061150691906126ba565b90506001600160a01b0381166323b872dd333061152660608b018b612f93565b8781811061153057fe5b905060200201356040518463ffffffff1660e01b815260040161155593929190612d0c565b602060405180830381600087803b15801561156f57600080fd5b505af1158015611583573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115a79190612788565b6115c35760405162461bcd60e51b81526004016102f890612ef0565b6115df81846115d560608a018a612f93565b868181106104e557fe5b506001016114c2565b50604080517fc3391d270000000000000000000000000000000000000000000000000000000081526001600160a01b0383169163c3391d279161163a9187359160208901359189013590600401612f7d565b600060405180830381600087803b15801561165457600080fd5b505af1158015611668573d6000803e3d6000fd5b505060405163a9059cbb60e01b81526001600160a01b038416925063a9059cbb915061169b903390873590600401612d30565b602060405180830381600087803b1580156116b557600080fd5b505af11580156116c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116ed9190612788565b6117095760405162461bcd60e51b81526004016102f890612ef0565b95945050505050565b6040516323b872dd60e01b81526001600160a01b038416906323b872dd9061174290339030908790600401612d0c565b602060405180830381600087803b15801561175c57600080fd5b505af1158015611770573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117949190612788565b6117b05760405162461bcd60e51b81526004016102f890612ef0565b6117bb838584612116565b6040517f5db342770000000000000000000000000000000000000000000000000000000081526000906001600160a01b03861690635db342779061180790879087908790600401612e66565b602060405180830381600087803b15801561182157600080fd5b505af1158015611835573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118599190612ba3565b60405163a9059cbb60e01b81529091506001600160a01b0386169063a9059cbb9061188a9033908590600401612d30565b602060405180830381600087803b1580156118a457600080fd5b505af11580156118b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118dc9190612788565b61090b5760405162461bcd60e51b81526004016102f890612ef0565b8483146119175760405162461bcd60e51b81526004016102f890612eb9565b8481146119365760405162461bcd60e51b81526004016102f890612eb9565b60005b8581101561122957600087878381811061194f57fe5b905060200201602081019061196491906126ba565b9050886001600160a01b0316632f37b62489898581811061198157fe5b905060200201602081019061199691906126ba565b6040518263ffffffff1660e01b81526004016119b29190612cf8565b60206040518083038186803b1580156119ca57600080fd5b505afa1580156119de573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a029190612788565b15611e0f57886001600160a01b031663f8b2cb4f898985818110611a2257fe5b9050602002016020810190611a3791906126ba565b6040518263ffffffff1660e01b8152600401611a539190612cf8565b60206040518083038186803b158015611a6b57600080fd5b505afa158015611a7f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611aa39190612ba3565b868684818110611aaf57fe5b905060200201351115611cc357806001600160a01b03166323b872dd33308c6001600160a01b031663f8b2cb4f8d8d89818110611ae857fe5b9050602002016020810190611afd91906126ba565b6040518263ffffffff1660e01b8152600401611b199190612cf8565b60206040518083038186803b158015611b3157600080fd5b505afa158015611b45573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b699190612ba3565b8a8a88818110611b7557fe5b90506020020135036040518463ffffffff1660e01b8152600401611b9b93929190612d0c565b602060405180830381600087803b158015611bb557600080fd5b505af1158015611bc9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bed9190612788565b611c095760405162461bcd60e51b81526004016102f890612ef0565b611cc3818a8b6001600160a01b031663f8b2cb4f8c8c88818110611c2957fe5b9050602002016020810190611c3e91906126ba565b6040518263ffffffff1660e01b8152600401611c5a9190612cf8565b60206040518083038186803b158015611c7257600080fd5b505afa158015611c86573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611caa9190612ba3565b898987818110611cb657fe5b9050602002013503612116565b620f4240868684818110611cd357fe5b905060200201351115611d8b57886001600160a01b0316633fdddaa2898985818110611cfb57fe5b9050602002016020810190611d1091906126ba565b888886818110611d1c57fe5b90506020020135878787818110611d2f57fe5b905060200201356040518463ffffffff1660e01b8152600401611d5493929190612e66565b600060405180830381600087803b158015611d6e57600080fd5b505af1158015611d82573d6000803e3d6000fd5b50505050611e0a565b886001600160a01b031663cf5e7bd3898985818110611da657fe5b9050602002016020810190611dbb91906126ba565b6040518263ffffffff1660e01b8152600401611dd79190612cf8565b600060405180830381600087803b158015611df157600080fd5b505af1158015611e05573d6000803e3d6000fd5b505050505b611f77565b806001600160a01b03166323b872dd3330898987818110611e2c57fe5b905060200201356040518463ffffffff1660e01b8152600401611e5193929190612d0c565b602060405180830381600087803b158015611e6b57600080fd5b505af1158015611e7f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ea39190612788565b611ebf5760405162461bcd60e51b81526004016102f890612ef0565b611ed0818a8888868181106104e557fe5b886001600160a01b031663e4e1e538898985818110611eeb57fe5b9050602002016020810190611f0091906126ba565b888886818110611f0c57fe5b90506020020135878787818110611f1f57fe5b905060200201356040518463ffffffff1660e01b8152600401611f4493929190612e66565b600060405180830381600087803b158015611f5e57600080fd5b505af1158015611f72573d6000803e3d6000fd5b505050505b6040516370a0823160e01b81526000906001600160a01b038316906370a0823190611fa6903090600401612cf8565b60206040518083038186803b158015611fbe57600080fd5b505afa158015611fd2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ff69190612ba3565b111561210d576040516370a0823160e01b81526001600160a01b0382169063a9059cbb90339083906370a0823190612032903090600401612cf8565b60206040518083038186803b15801561204a57600080fd5b505afa15801561205e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120829190612ba3565b6040518363ffffffff1660e01b815260040161209f929190612d30565b602060405180830381600087803b1580156120b957600080fd5b505af11580156120cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120f19190612788565b61210d5760405162461bcd60e51b81526004016102f890612ef0565b50600101611939565b6040517fdd62ed3e0000000000000000000000000000000000000000000000000000000081526000906001600160a01b0385169063dd62ed3e906121609030908790600401612d49565b60206040518083038186803b15801561217857600080fd5b505afa15801561218c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121b09190612ba3565b11156122395760405163095ea7b360e01b81526001600160a01b0384169063095ea7b3906121e5908590600090600401612d30565b602060405180830381600087803b1580156121ff57600080fd5b505af1158015612213573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122379190612788565b505b60405163095ea7b360e01b81526001600160a01b0384169063095ea7b3906122679085908590600401612d30565b602060405180830381600087803b15801561228157600080fd5b505af1158015612295573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ccd9190612788565b82518151146122da5760405162461bcd60e51b81526004016102f890612eb9565b60005b83518110156123d65760008482815181106122f457fe5b60200260200101519050806001600160a01b03166323b872dd333086868151811061231b57fe5b60200260200101516040518463ffffffff1660e01b815260040161234193929190612d0c565b602060405180830381600087803b15801561235b57600080fd5b505af115801561236f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123939190612788565b6123af5760405162461bcd60e51b81526004016102f890612ef0565b6123cd81878585815181106123c057fe5b6020026020010151612116565b506001016122dd565b506040517f4f69c0d40000000000000000000000000000000000000000000000000000000081526001600160a01b03851690634f69c0d49061241e9085908590600401612f30565b600060405180830381600087803b15801561243857600080fd5b505af115801561244c573d6000803e3d6000fd5b5050505060005b835181101561261257600084828151811061246a57fe5b602002602001015190506000816001600160a01b03166370a08231306040518263ffffffff1660e01b81526004016124a29190612cf8565b60206040518083038186803b1580156124ba57600080fd5b505afa1580156124ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124f29190612ba3565b1115612609576040516370a0823160e01b81526001600160a01b0382169063a9059cbb90339083906370a082319061252e903090600401612cf8565b60206040518083038186803b15801561254657600080fd5b505afa15801561255a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061257e9190612ba3565b6040518363ffffffff1660e01b815260040161259b929190612d30565b602060405180830381600087803b1580156125b557600080fd5b505af11580156125c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125ed9190612788565b6126095760405162461bcd60e51b81526004016102f890612ef0565b50600101612453565b506040516370a0823160e01b81526001600160a01b0385169063a9059cbb90339083906370a0823190610bf2903090600401612cf8565b80516126548161308e565b92915050565b60008083601f84011261266b578182fd5b50813567ffffffffffffffff811115612682578182fd5b602083019150836020808302850101111561269c57600080fd5b9250929050565b600060c082840312156126b4578081fd5b50919050565b6000602082840312156126cb578081fd5b81356126d68161308e565b9392505050565b600060208083850312156126ef578182fd5b825167ffffffffffffffff80821115612706578384fd5b818501915085601f830112612719578384fd5b815181811115612727578485fd5b8381029150612737848301612fda565b8181528481019084860184860187018a1015612751578788fd5b8795505b8386101561277b576127678a82612649565b835260019590950194918601918601612755565b5098975050505050505050565b600060208284031215612799578081fd5b81516126d6816130a3565b600080604083850312156127b6578081fd5b82356127c18161308e565b915060208301356127d18161308e565b809150509250929050565b600080604083850312156127ee578182fd5b82356127f98161308e565b915060208301356127d1816130a3565b6000806000806080858703121561281e578182fd5b84356128298161308e565b935060208501356128398161308e565b93969395505050506040820135916060013590565b60008060408385031215612860578182fd5b823561286b8161308e565b946020939093013593505050565b600080600080600080600080600060c08a8c031215612896578485fd5b89356128a18161308e565b985060208a013567ffffffffffffffff808211156128bd578687fd5b6128c98d838e0161265a565b909a50985060408c01359150808211156128e1578687fd5b6128ed8d838e0161265a565b909850965060608c0135915080821115612905578586fd5b506129128c828d0161265a565b90955093505060808a0135915060a08a013561292d816130a3565b809150509295985092959850929598565b60006020828403121561294f578081fd5b81516126d68161308e565b60008060008060008060006080888a031215612974578081fd5b873561297f8161308e565b9650602088013567ffffffffffffffff8082111561299b578283fd5b6129a78b838c0161265a565b909850965060408a01359150808211156129bf578283fd5b6129cb8b838c0161265a565b909650945060608a01359150808211156129e3578283fd5b506129f08a828b0161265a565b989b979a50959850939692959293505050565b60008060008060608587031215612a18578182fd5b8435612a238161308e565b935060208501359250604085013567ffffffffffffffff811115612a45578283fd5b612a518782880161265a565b95989497509550505050565b6000806000806000858703610180811215612a76578384fd5b8635612a818161308e565b95506020870135612a918161308e565b9450604087013567ffffffffffffffff811115612aac578485fd5b612ab889828a016126a3565b9450506060605f1982011215612acc578182fd5b50606086019150612ae08760c088016126a3565b90509295509295909350565b600080604083850312156127b6578182fd5b600080600080600060808688031215612b15578283fd5b8535612b208161308e565b9450602086013567ffffffffffffffff811115612b3b578384fd5b612b478882890161265a565b9699909850959660408101359660609091013595509350505050565b600080600060608486031215612b77578081fd5b8335612b828161308e565b92506020840135612b928161308e565b929592945050506040919091013590565b600060208284031215612bb4578081fd5b5051919050565b60008284526020808501945082825b85811015612bf8578135612bdd8161308e565b6001600160a01b031687529582019590820190600101612bca565b509495945050505050565b60008284527f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff831115612c34578081fd5b6020830280836020870137939093016020019283525090919050565b60008284528282602086013780602084860101526020601f19601f85011685010190509392505050565b8035612c85816130a3565b151582526020810135612c97816130a3565b151560208301526040810135612cac816130a3565b151560408301526060810135612cc1816130a3565b151560608301526080810135612cd6816130a3565b1515608083015260a0810135612ceb816130a3565b80151560a0840152505050565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b6001600160a01b0392831681529116602082015260400190565b60006101006001600160a01b0386168352806020840152612d848586613049565b60c083860152612d996101c086018284612c50565b92505050612daa6020860186613049565b60ff198086850301610120870152612dc3848385612c50565b9350612dd26040890189613001565b935091508086850301610140870152612dec848484612bbb565b9350612dfb6060890189613001565b935091508086850301610160870152612e15848484612c03565b9350612e246080890189613001565b93509150808685030161018087015250612e3f838383612c03565b60a08801356101a08701529350612e5e92505060408401905084612c7a565b949350505050565b6001600160a01b039390931683526020830191909152604082015260600190565b600060608252612e9b606083018688612c03565b6020830194909452506040015292915050565b901515815260200190565b60208082526013908201527f4552525f4c454e4754485f4d49534d4154434800000000000000000000000000604082015260600190565b60208082526013908201527f4552525f5452414e534645525f4641494c454400000000000000000000000000604082015260600190565b90815260200190565b60006040820184835260206040818501528185518084526060860191508287019350845b81811015612f7057845183529383019391830191600101612f54565b5090979650505050505050565b9283526020830191909152604082015260600190565b6000808335601e19843603018112612fa9578283fd5b83018035915067ffffffffffffffff821115612fc3578283fd5b602090810192508102360382131561269c57600080fd5b60405181810167ffffffffffffffff81118282101715612ff957600080fd5b604052919050565b6000808335601e19843603018112613017578283fd5b830160208101925035905067ffffffffffffffff81111561303757600080fd5b60208102360383131561269c57600080fd5b6000808335601e1984360301811261305f578283fd5b830160208101925035905067ffffffffffffffff81111561307f57600080fd5b80360383131561269c57600080fd5b6001600160a01b0381168114610abb57600080fd5b8015158114610abb57600080fdfea2646970667358221220fdd052d5cae8769a92e7f904aa9d597ee277050ed6000f267c770268092ac37c64736f6c634300060c0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x151 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x84F3859B GT PUSH2 0xCD JUMPI DUP1 PUSH4 0xA7F28DA7 GT PUSH2 0x81 JUMPI DUP1 PUSH4 0xC152E579 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xC152E579 EQ PUSH2 0x29E JUMPI DUP1 PUSH4 0xC1762B15 EQ PUSH2 0x2B1 JUMPI DUP1 PUSH4 0xE0D945BF EQ PUSH2 0x2C4 JUMPI PUSH2 0x151 JUMP JUMPDEST DUP1 PUSH4 0xA7F28DA7 EQ PUSH2 0x278 JUMPI DUP1 PUSH4 0xC037F39C EQ PUSH2 0x28B JUMPI PUSH2 0x151 JUMP JUMPDEST DUP1 PUSH4 0x991991C7 GT PUSH2 0xB2 JUMPI DUP1 PUSH4 0x991991C7 EQ PUSH2 0x23F JUMPI DUP1 PUSH4 0x9C11BD17 EQ PUSH2 0x252 JUMPI DUP1 PUSH4 0x9FBBF3BA EQ PUSH2 0x265 JUMPI PUSH2 0x151 JUMP JUMPDEST DUP1 PUSH4 0x84F3859B EQ PUSH2 0x219 JUMPI DUP1 PUSH4 0x8A5C57DF EQ PUSH2 0x22C JUMPI PUSH2 0x151 JUMP JUMPDEST DUP1 PUSH4 0x4EF39B75 GT PUSH2 0x124 JUMPI DUP1 PUSH4 0x7B7D6C68 GT PUSH2 0x109 JUMPI DUP1 PUSH4 0x7B7D6C68 EQ PUSH2 0x1E0 JUMPI DUP1 PUSH4 0x80AD2CF3 EQ PUSH2 0x1F3 JUMPI DUP1 PUSH4 0x81BD5CD7 EQ PUSH2 0x206 JUMPI PUSH2 0x151 JUMP JUMPDEST DUP1 PUSH4 0x4EF39B75 EQ PUSH2 0x1BA JUMPI DUP1 PUSH4 0x674F8D8E EQ PUSH2 0x1CD JUMPI PUSH2 0x151 JUMP JUMPDEST DUP1 PUSH4 0x1A78A275 EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0x1ECCC185 EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0x2C91A591 EQ PUSH2 0x194 JUMPI DUP1 PUSH4 0x333FBEEF EQ PUSH2 0x1A7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x169 PUSH2 0x164 CALLDATASIZE PUSH1 0x4 PUSH2 0x2879 JUMP JUMPDEST PUSH2 0x2D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x176 SWAP2 SWAP1 PUSH2 0x2CF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x192 PUSH2 0x18D CALLDATASIZE PUSH1 0x4 PUSH2 0x27DC JUMP JUMPDEST PUSH2 0x781 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x192 PUSH2 0x1A2 CALLDATASIZE PUSH1 0x4 PUSH2 0x2A03 JUMP JUMPDEST PUSH2 0x7E3 JUMP JUMPDEST PUSH2 0x192 PUSH2 0x1B5 CALLDATASIZE PUSH1 0x4 PUSH2 0x2AEC JUMP JUMPDEST PUSH2 0x912 JUMP JUMPDEST PUSH2 0x192 PUSH2 0x1C8 CALLDATASIZE PUSH1 0x4 PUSH2 0x26BA JUMP JUMPDEST PUSH2 0x957 JUMP JUMPDEST PUSH2 0x192 PUSH2 0x1DB CALLDATASIZE PUSH1 0x4 PUSH2 0x2809 JUMP JUMPDEST PUSH2 0xABE JUMP JUMPDEST PUSH2 0x192 PUSH2 0x1EE CALLDATASIZE PUSH1 0x4 PUSH2 0x27A4 JUMP JUMPDEST PUSH2 0xCD3 JUMP JUMPDEST PUSH2 0x192 PUSH2 0x201 CALLDATASIZE PUSH1 0x4 PUSH2 0x284E JUMP JUMPDEST PUSH2 0xD18 JUMP JUMPDEST PUSH2 0x192 PUSH2 0x214 CALLDATASIZE PUSH1 0x4 PUSH2 0x2809 JUMP JUMPDEST PUSH2 0xD5D JUMP JUMPDEST PUSH2 0x192 PUSH2 0x227 CALLDATASIZE PUSH1 0x4 PUSH2 0x2B63 JUMP JUMPDEST PUSH2 0xE9C JUMP JUMPDEST PUSH2 0x192 PUSH2 0x23A CALLDATASIZE PUSH1 0x4 PUSH2 0x2A03 JUMP JUMPDEST PUSH2 0x10C7 JUMP JUMPDEST PUSH2 0x192 PUSH2 0x24D CALLDATASIZE PUSH1 0x4 PUSH2 0x284E JUMP JUMPDEST PUSH2 0x1102 JUMP JUMPDEST PUSH2 0x192 PUSH2 0x260 CALLDATASIZE PUSH1 0x4 PUSH2 0x2AFE JUMP JUMPDEST PUSH2 0x112E JUMP JUMPDEST PUSH2 0x192 PUSH2 0x273 CALLDATASIZE PUSH1 0x4 PUSH2 0x2809 JUMP JUMPDEST PUSH2 0x11B2 JUMP JUMPDEST PUSH2 0x192 PUSH2 0x286 CALLDATASIZE PUSH1 0x4 PUSH2 0x2AEC JUMP JUMPDEST PUSH2 0x1233 JUMP JUMPDEST PUSH2 0x192 PUSH2 0x299 CALLDATASIZE PUSH1 0x4 PUSH2 0x2B63 JUMP JUMPDEST PUSH2 0x1278 JUMP JUMPDEST PUSH2 0x169 PUSH2 0x2AC CALLDATASIZE PUSH1 0x4 PUSH2 0x2A5D JUMP JUMPDEST PUSH2 0x13AA JUMP JUMPDEST PUSH2 0x192 PUSH2 0x2BF CALLDATASIZE PUSH1 0x4 PUSH2 0x2809 JUMP JUMPDEST PUSH2 0x1712 JUMP JUMPDEST PUSH2 0x192 PUSH2 0x2D2 CALLDATASIZE PUSH1 0x4 PUSH2 0x295A JUMP JUMPDEST PUSH2 0x18F8 JUMP JUMPDEST PUSH1 0x0 DUP8 DUP7 EQ PUSH2 0x301 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F8 SWAP1 PUSH2 0x2EB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP8 DUP5 EQ PUSH2 0x320 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F8 SWAP1 PUSH2 0x2EB9 JUMP JUMPDEST DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD556C5DC PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x35B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x36F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x393 SWAP2 SWAP1 PUSH2 0x293E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x34E19907 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x34E19907 SWAP1 PUSH2 0x3C2 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x2F27 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3F0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 JUMPDEST DUP9 DUP2 LT ISZERO PUSH2 0x5A4 JUMPI PUSH1 0x0 DUP11 DUP11 DUP4 DUP2 DUP2 LT PUSH2 0x40D JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x422 SWAP2 SWAP1 PUSH2 0x26BA JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x23B872DD CALLER ADDRESS DUP13 DUP13 DUP8 DUP2 DUP2 LT PUSH2 0x441 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x466 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2D0C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x480 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x494 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4B8 SWAP2 SWAP1 PUSH2 0x2788 JUMP JUMPDEST PUSH2 0x4D4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F8 SWAP1 PUSH2 0x2EF0 JUMP JUMPDEST PUSH2 0x4F1 DUP2 DUP5 DUP12 DUP12 DUP7 DUP2 DUP2 LT PUSH2 0x4E5 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH2 0x2116 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xE4E1E538 DUP13 DUP13 DUP6 DUP2 DUP2 LT PUSH2 0x50C JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x521 SWAP2 SWAP1 PUSH2 0x26BA JUMP JUMPDEST DUP12 DUP12 DUP7 DUP2 DUP2 LT PUSH2 0x52D JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP11 DUP11 DUP8 DUP2 DUP2 LT PUSH2 0x540 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x565 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2E66 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x57F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x593 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 POP PUSH2 0x3F7 SWAP2 POP POP JUMP JUMPDEST POP DUP2 ISZERO PUSH2 0x714 JUMPI DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x4BB278F3 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5FA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP3 POP PUSH4 0xA9059CBB SWAP2 POP CALLER SWAP1 DUP4 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x634 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x2CF8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x64C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x660 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x684 SWAP2 SWAP1 PUSH2 0x2BA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A1 SWAP3 SWAP2 SWAP1 PUSH2 0x2D30 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6CF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6F3 SWAP2 SWAP1 PUSH2 0x2788 JUMP JUMPDEST PUSH2 0x70F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F8 SWAP1 PUSH2 0x2EF0 JUMP JUMPDEST PUSH2 0x774 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x24DACAA9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x49B59552 SWAP1 PUSH2 0x741 SWAP1 PUSH1 0x1 SWAP1 PUSH1 0x4 ADD PUSH2 0x2EAE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x75B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x76F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x24DACAA9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x49B59552 SWAP1 PUSH2 0x7AD SWAP1 DUP5 SWAP1 PUSH1 0x4 ADD PUSH2 0x2EAE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7DB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xB64EF17B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x81E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x832 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x856 SWAP2 SWAP1 PUSH2 0x293E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xCC77828D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x88E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8A2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x8CA SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x26DD JUMP JUMPDEST SWAP1 POP PUSH2 0x90B DUP6 DUP3 DUP7 DUP7 DUP7 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x22B9 SWAP3 POP POP POP JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xC83A1C2D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0xC83A1C2D SWAP1 PUSH2 0x7AD SWAP1 DUP5 SWAP1 PUSH1 0x4 ADD PUSH2 0x2CF8 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x4BB278F3 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x992 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9A6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP3 POP PUSH4 0xA9059CBB SWAP2 POP CALLER SWAP1 DUP4 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x9E0 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x2CF8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA0C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA30 SWAP2 SWAP1 PUSH2 0x2BA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA4D SWAP3 SWAP2 SWAP1 PUSH2 0x2D30 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA7B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA9F SWAP2 SWAP1 PUSH2 0x2788 JUMP JUMPDEST PUSH2 0xABB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F8 SWAP1 PUSH2 0x2EF0 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0xAEE SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x2D0C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB08 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB1C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB40 SWAP2 SWAP1 PUSH2 0x2788 JUMP JUMPDEST PUSH2 0xB5C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F8 SWAP1 PUSH2 0x2EF0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x9776E94B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x9776E94B SWAP1 PUSH2 0xB8A SWAP1 DUP7 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x2D30 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBA4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xBB8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP3 POP PUSH4 0xA9059CBB SWAP2 POP CALLER SWAP1 DUP4 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0xBF2 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x2CF8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC0A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC1E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC42 SWAP2 SWAP1 PUSH2 0x2BA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC5F SWAP3 SWAP2 SWAP1 PUSH2 0x2D30 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC8D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCB1 SWAP2 SWAP1 PUSH2 0x2788 JUMP JUMPDEST PUSH2 0xCCD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F8 SWAP1 PUSH2 0x2EF0 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x92EEFE9B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x92EEFE9B SWAP1 PUSH2 0x7AD SWAP1 DUP5 SWAP1 PUSH1 0x4 ADD PUSH2 0x2CF8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x47786D3700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x47786D37 SWAP1 PUSH2 0x7AD SWAP1 DUP5 SWAP1 PUSH1 0x4 ADD PUSH2 0x2F27 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0xD8D SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x2D0C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xDBB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDDF SWAP2 SWAP1 PUSH2 0x2788 JUMP JUMPDEST PUSH2 0xDFB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F8 SWAP1 PUSH2 0x2EF0 JUMP JUMPDEST PUSH2 0xE06 DUP4 DUP6 DUP4 PUSH2 0x2116 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x9776E94B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x9776E94B SWAP1 PUSH2 0xE34 SWAP1 DUP7 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x2D30 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE4E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE62 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP3 POP PUSH4 0xA9059CBB SWAP2 POP CALLER SWAP1 DUP4 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0xBF2 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x2CF8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0xECC SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x2D0C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xEE6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xEFA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF1E SWAP2 SWAP1 PUSH2 0x2788 JUMP JUMPDEST PUSH2 0xF3A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F8 SWAP1 PUSH2 0x2EF0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x5FA7B58400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x5FA7B584 SWAP1 PUSH2 0xF7F SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x2CF8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF99 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xFAD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP3 POP PUSH4 0xA9059CBB SWAP2 POP CALLER SWAP1 DUP4 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0xFE7 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x2CF8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFFF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1013 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1037 SWAP2 SWAP1 PUSH2 0x2BA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1054 SWAP3 SWAP2 SWAP1 PUSH2 0x2D30 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x106E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1082 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10A6 SWAP2 SWAP1 PUSH2 0x2788 JUMP JUMPDEST PUSH2 0x10C2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F8 SWAP1 PUSH2 0x2EF0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xBE3BBD2E PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x88E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x34E19907 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x34E19907 SWAP1 PUSH2 0x7AD SWAP1 DUP5 SWAP1 PUSH1 0x4 ADD PUSH2 0x2F27 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x246BC19B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0x246BC19B SWAP1 PUSH2 0x1179 SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x2E87 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1193 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x11A7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x4C20D20900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x4C20D209 SWAP1 PUSH2 0x11FB SWAP1 DUP7 SWAP1 DUP7 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x2E66 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1215 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1229 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xE2762D4B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0xE2762D4B SWAP1 PUSH2 0x7AD SWAP1 DUP5 SWAP1 PUSH1 0x4 ADD PUSH2 0x2CF8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x12A8 SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x2D0C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x12C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x12D6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x12FA SWAP2 SWAP1 PUSH2 0x2788 JUMP JUMPDEST PUSH2 0x1316 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F8 SWAP1 PUSH2 0x2EF0 JUMP JUMPDEST PUSH2 0x1321 DUP3 DUP5 DUP4 PUSH2 0x2116 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xC275D81B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x135C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1370 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP3 POP PUSH4 0xA9059CBB SWAP2 POP CALLER SWAP1 DUP4 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0xFE7 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x2CF8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13B9 PUSH1 0x60 DUP6 ADD DUP6 PUSH2 0x2F93 JUMP JUMPDEST SWAP1 POP PUSH2 0x13C8 PUSH1 0x40 DUP7 ADD DUP7 PUSH2 0x2F93 JUMP JUMPDEST SWAP1 POP EQ PUSH2 0x13E7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F8 SWAP1 PUSH2 0x2EB9 JUMP JUMPDEST PUSH2 0x13F4 PUSH1 0x80 DUP6 ADD DUP6 PUSH2 0x2F93 JUMP JUMPDEST SWAP1 POP PUSH2 0x1403 PUSH1 0x40 DUP7 ADD DUP7 PUSH2 0x2F93 JUMP JUMPDEST SWAP1 POP EQ PUSH2 0x1422 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F8 SWAP1 PUSH2 0x2EB9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x4420002B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 PUSH4 0x4420002B SWAP1 PUSH2 0x146B SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x2D63 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1485 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1499 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x14BD SWAP2 SWAP1 PUSH2 0x293E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST PUSH2 0x14CF PUSH1 0x40 DUP7 ADD DUP7 PUSH2 0x2F93 JUMP JUMPDEST SWAP1 POP DUP2 LT ISZERO PUSH2 0x15E8 JUMPI PUSH1 0x0 PUSH2 0x14E7 PUSH1 0x40 DUP8 ADD DUP8 PUSH2 0x2F93 JUMP JUMPDEST DUP4 DUP2 DUP2 LT PUSH2 0x14F1 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1506 SWAP2 SWAP1 PUSH2 0x26BA JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH4 0x23B872DD CALLER ADDRESS PUSH2 0x1526 PUSH1 0x60 DUP12 ADD DUP12 PUSH2 0x2F93 JUMP JUMPDEST DUP8 DUP2 DUP2 LT PUSH2 0x1530 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1555 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2D0C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x156F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1583 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x15A7 SWAP2 SWAP1 PUSH2 0x2788 JUMP JUMPDEST PUSH2 0x15C3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F8 SWAP1 PUSH2 0x2EF0 JUMP JUMPDEST PUSH2 0x15DF DUP2 DUP5 PUSH2 0x15D5 PUSH1 0x60 DUP11 ADD DUP11 PUSH2 0x2F93 JUMP JUMPDEST DUP7 DUP2 DUP2 LT PUSH2 0x4E5 JUMPI INVALID JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x14C2 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH32 0xC3391D2700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP2 PUSH4 0xC3391D27 SWAP2 PUSH2 0x163A SWAP2 DUP8 CALLDATALOAD SWAP2 PUSH1 0x20 DUP10 ADD CALLDATALOAD SWAP2 DUP10 ADD CALLDATALOAD SWAP1 PUSH1 0x4 ADD PUSH2 0x2F7D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1654 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1668 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP3 POP PUSH4 0xA9059CBB SWAP2 POP PUSH2 0x169B SWAP1 CALLER SWAP1 DUP8 CALLDATALOAD SWAP1 PUSH1 0x4 ADD PUSH2 0x2D30 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x16B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x16C9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x16ED SWAP2 SWAP1 PUSH2 0x2788 JUMP JUMPDEST PUSH2 0x1709 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F8 SWAP1 PUSH2 0x2EF0 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x1742 SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x2D0C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x175C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1770 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1794 SWAP2 SWAP1 PUSH2 0x2788 JUMP JUMPDEST PUSH2 0x17B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F8 SWAP1 PUSH2 0x2EF0 JUMP JUMPDEST PUSH2 0x17BB DUP4 DUP6 DUP5 PUSH2 0x2116 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x5DB3427700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0x5DB34277 SWAP1 PUSH2 0x1807 SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x2E66 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1821 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1835 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1859 SWAP2 SWAP1 PUSH2 0x2BA3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH2 0x188A SWAP1 CALLER SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x2D30 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x18A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x18B8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x18DC SWAP2 SWAP1 PUSH2 0x2788 JUMP JUMPDEST PUSH2 0x90B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F8 SWAP1 PUSH2 0x2EF0 JUMP JUMPDEST DUP5 DUP4 EQ PUSH2 0x1917 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F8 SWAP1 PUSH2 0x2EB9 JUMP JUMPDEST DUP5 DUP2 EQ PUSH2 0x1936 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F8 SWAP1 PUSH2 0x2EB9 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x1229 JUMPI PUSH1 0x0 DUP8 DUP8 DUP4 DUP2 DUP2 LT PUSH2 0x194F JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1964 SWAP2 SWAP1 PUSH2 0x26BA JUMP JUMPDEST SWAP1 POP DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x2F37B624 DUP10 DUP10 DUP6 DUP2 DUP2 LT PUSH2 0x1981 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1996 SWAP2 SWAP1 PUSH2 0x26BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19B2 SWAP2 SWAP1 PUSH2 0x2CF8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x19CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x19DE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1A02 SWAP2 SWAP1 PUSH2 0x2788 JUMP JUMPDEST ISZERO PUSH2 0x1E0F JUMPI DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF8B2CB4F DUP10 DUP10 DUP6 DUP2 DUP2 LT PUSH2 0x1A22 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1A37 SWAP2 SWAP1 PUSH2 0x26BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A53 SWAP2 SWAP1 PUSH2 0x2CF8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1A6B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A7F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1AA3 SWAP2 SWAP1 PUSH2 0x2BA3 JUMP JUMPDEST DUP7 DUP7 DUP5 DUP2 DUP2 LT PUSH2 0x1AAF JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD GT ISZERO PUSH2 0x1CC3 JUMPI DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x23B872DD CALLER ADDRESS DUP13 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF8B2CB4F DUP14 DUP14 DUP10 DUP2 DUP2 LT PUSH2 0x1AE8 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1AFD SWAP2 SWAP1 PUSH2 0x26BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B19 SWAP2 SWAP1 PUSH2 0x2CF8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1B31 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1B45 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1B69 SWAP2 SWAP1 PUSH2 0x2BA3 JUMP JUMPDEST DUP11 DUP11 DUP9 DUP2 DUP2 LT PUSH2 0x1B75 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD SUB PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B9B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2D0C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1BB5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1BC9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1BED SWAP2 SWAP1 PUSH2 0x2788 JUMP JUMPDEST PUSH2 0x1C09 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F8 SWAP1 PUSH2 0x2EF0 JUMP JUMPDEST PUSH2 0x1CC3 DUP2 DUP11 DUP12 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF8B2CB4F DUP13 DUP13 DUP9 DUP2 DUP2 LT PUSH2 0x1C29 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1C3E SWAP2 SWAP1 PUSH2 0x26BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C5A SWAP2 SWAP1 PUSH2 0x2CF8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1C72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1C86 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1CAA SWAP2 SWAP1 PUSH2 0x2BA3 JUMP JUMPDEST DUP10 DUP10 DUP8 DUP2 DUP2 LT PUSH2 0x1CB6 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD SUB PUSH2 0x2116 JUMP JUMPDEST PUSH3 0xF4240 DUP7 DUP7 DUP5 DUP2 DUP2 LT PUSH2 0x1CD3 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD GT ISZERO PUSH2 0x1D8B JUMPI DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x3FDDDAA2 DUP10 DUP10 DUP6 DUP2 DUP2 LT PUSH2 0x1CFB JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1D10 SWAP2 SWAP1 PUSH2 0x26BA JUMP JUMPDEST DUP9 DUP9 DUP7 DUP2 DUP2 LT PUSH2 0x1D1C JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP8 DUP8 DUP8 DUP2 DUP2 LT PUSH2 0x1D2F JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D54 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2E66 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1D6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1D82 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x1E0A JUMP JUMPDEST DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xCF5E7BD3 DUP10 DUP10 DUP6 DUP2 DUP2 LT PUSH2 0x1DA6 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1DBB SWAP2 SWAP1 PUSH2 0x26BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DD7 SWAP2 SWAP1 PUSH2 0x2CF8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1DF1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1E05 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH2 0x1F77 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x23B872DD CALLER ADDRESS DUP10 DUP10 DUP8 DUP2 DUP2 LT PUSH2 0x1E2C JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E51 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2D0C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1E6B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1E7F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1EA3 SWAP2 SWAP1 PUSH2 0x2788 JUMP JUMPDEST PUSH2 0x1EBF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F8 SWAP1 PUSH2 0x2EF0 JUMP JUMPDEST PUSH2 0x1ED0 DUP2 DUP11 DUP9 DUP9 DUP7 DUP2 DUP2 LT PUSH2 0x4E5 JUMPI INVALID JUMPDEST DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xE4E1E538 DUP10 DUP10 DUP6 DUP2 DUP2 LT PUSH2 0x1EEB JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1F00 SWAP2 SWAP1 PUSH2 0x26BA JUMP JUMPDEST DUP9 DUP9 DUP7 DUP2 DUP2 LT PUSH2 0x1F0C JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP8 DUP8 DUP8 DUP2 DUP2 LT PUSH2 0x1F1F JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F44 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2E66 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1F5E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1F72 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x1FA6 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x2CF8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1FBE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1FD2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1FF6 SWAP2 SWAP1 PUSH2 0x2BA3 JUMP JUMPDEST GT ISZERO PUSH2 0x210D JUMPI PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0xA9059CBB SWAP1 CALLER SWAP1 DUP4 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x2032 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x2CF8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x204A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x205E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2082 SWAP2 SWAP1 PUSH2 0x2BA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x209F SWAP3 SWAP2 SWAP1 PUSH2 0x2D30 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x20B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x20CD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x20F1 SWAP2 SWAP1 PUSH2 0x2788 JUMP JUMPDEST PUSH2 0x210D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F8 SWAP1 PUSH2 0x2EF0 JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x1939 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xDD62ED3E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH2 0x2160 SWAP1 ADDRESS SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x2D49 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2178 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x218C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x21B0 SWAP2 SWAP1 PUSH2 0x2BA3 JUMP JUMPDEST GT ISZERO PUSH2 0x2239 JUMPI PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH2 0x21E5 SWAP1 DUP6 SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x4 ADD PUSH2 0x2D30 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x21FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2213 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2237 SWAP2 SWAP1 PUSH2 0x2788 JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH2 0x2267 SWAP1 DUP6 SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x2D30 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2281 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2295 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCCD SWAP2 SWAP1 PUSH2 0x2788 JUMP JUMPDEST DUP3 MLOAD DUP2 MLOAD EQ PUSH2 0x22DA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F8 SWAP1 PUSH2 0x2EB9 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x23D6 JUMPI PUSH1 0x0 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x22F4 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x23B872DD CALLER ADDRESS DUP7 DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x231B JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2341 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2D0C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x235B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x236F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2393 SWAP2 SWAP1 PUSH2 0x2788 JUMP JUMPDEST PUSH2 0x23AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F8 SWAP1 PUSH2 0x2EF0 JUMP JUMPDEST PUSH2 0x23CD DUP2 DUP8 DUP6 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x23C0 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2116 JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x22DD JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0x4F69C0D400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x4F69C0D4 SWAP1 PUSH2 0x241E SWAP1 DUP6 SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x2F30 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2438 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x244C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x2612 JUMPI PUSH1 0x0 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x246A JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x24A2 SWAP2 SWAP1 PUSH2 0x2CF8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x24BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x24CE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x24F2 SWAP2 SWAP1 PUSH2 0x2BA3 JUMP JUMPDEST GT ISZERO PUSH2 0x2609 JUMPI PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0xA9059CBB SWAP1 CALLER SWAP1 DUP4 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x252E SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x2CF8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2546 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x255A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x257E SWAP2 SWAP1 PUSH2 0x2BA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x259B SWAP3 SWAP2 SWAP1 PUSH2 0x2D30 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x25B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x25C9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x25ED SWAP2 SWAP1 PUSH2 0x2788 JUMP JUMPDEST PUSH2 0x2609 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F8 SWAP1 PUSH2 0x2EF0 JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x2453 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xA9059CBB SWAP1 CALLER SWAP1 DUP4 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0xBF2 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x2CF8 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x2654 DUP2 PUSH2 0x308E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x266B JUMPI DUP2 DUP3 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2682 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP1 DUP4 MUL DUP6 ADD ADD GT ISZERO PUSH2 0x269C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x26B4 JUMPI DUP1 DUP2 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x26CB JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x26D6 DUP2 PUSH2 0x308E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x26EF JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2706 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2719 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x2727 JUMPI DUP5 DUP6 REVERT JUMPDEST DUP4 DUP2 MUL SWAP2 POP PUSH2 0x2737 DUP5 DUP4 ADD PUSH2 0x2FDA JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 DUP2 ADD SWAP1 DUP5 DUP7 ADD DUP5 DUP7 ADD DUP8 ADD DUP11 LT ISZERO PUSH2 0x2751 JUMPI DUP8 DUP9 REVERT JUMPDEST DUP8 SWAP6 POP JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x277B JUMPI PUSH2 0x2767 DUP11 DUP3 PUSH2 0x2649 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x1 SWAP6 SWAP1 SWAP6 ADD SWAP5 SWAP2 DUP7 ADD SWAP2 DUP7 ADD PUSH2 0x2755 JUMP JUMPDEST POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2799 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x26D6 DUP2 PUSH2 0x30A3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x27B6 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x27C1 DUP2 PUSH2 0x308E JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x27D1 DUP2 PUSH2 0x308E JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x27EE JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x27F9 DUP2 PUSH2 0x308E JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x27D1 DUP2 PUSH2 0x30A3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x281E JUMPI DUP2 DUP3 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x2829 DUP2 PUSH2 0x308E JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0x2839 DUP2 PUSH2 0x308E JUMP JUMPDEST SWAP4 SWAP7 SWAP4 SWAP6 POP POP POP POP PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP2 PUSH1 0x60 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2860 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x286B DUP2 PUSH2 0x308E JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xC0 DUP11 DUP13 SUB SLT ISZERO PUSH2 0x2896 JUMPI DUP5 DUP6 REVERT JUMPDEST DUP10 CALLDATALOAD PUSH2 0x28A1 DUP2 PUSH2 0x308E JUMP JUMPDEST SWAP9 POP PUSH1 0x20 DUP11 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x28BD JUMPI DUP7 DUP8 REVERT JUMPDEST PUSH2 0x28C9 DUP14 DUP4 DUP15 ADD PUSH2 0x265A JUMP JUMPDEST SWAP1 SWAP11 POP SWAP9 POP PUSH1 0x40 DUP13 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x28E1 JUMPI DUP7 DUP8 REVERT JUMPDEST PUSH2 0x28ED DUP14 DUP4 DUP15 ADD PUSH2 0x265A JUMP JUMPDEST SWAP1 SWAP9 POP SWAP7 POP PUSH1 0x60 DUP13 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2905 JUMPI DUP6 DUP7 REVERT JUMPDEST POP PUSH2 0x2912 DUP13 DUP3 DUP14 ADD PUSH2 0x265A JUMP JUMPDEST SWAP1 SWAP6 POP SWAP4 POP POP PUSH1 0x80 DUP11 ADD CALLDATALOAD SWAP2 POP PUSH1 0xA0 DUP11 ADD CALLDATALOAD PUSH2 0x292D DUP2 PUSH2 0x30A3 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x294F JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x26D6 DUP2 PUSH2 0x308E JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x2974 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP8 CALLDATALOAD PUSH2 0x297F DUP2 PUSH2 0x308E JUMP JUMPDEST SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x299B JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x29A7 DUP12 DUP4 DUP13 ADD PUSH2 0x265A JUMP JUMPDEST SWAP1 SWAP9 POP SWAP7 POP PUSH1 0x40 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x29BF JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x29CB DUP12 DUP4 DUP13 ADD PUSH2 0x265A JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x60 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x29E3 JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH2 0x29F0 DUP11 DUP3 DUP12 ADD PUSH2 0x265A JUMP JUMPDEST SWAP9 SWAP12 SWAP8 SWAP11 POP SWAP6 SWAP9 POP SWAP4 SWAP7 SWAP3 SWAP6 SWAP3 SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2A18 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x2A23 DUP2 PUSH2 0x308E JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2A45 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x2A51 DUP8 DUP3 DUP9 ADD PUSH2 0x265A JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 DUP8 SUB PUSH2 0x180 DUP2 SLT ISZERO PUSH2 0x2A76 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH2 0x2A81 DUP2 PUSH2 0x308E JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD PUSH2 0x2A91 DUP2 PUSH2 0x308E JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2AAC JUMPI DUP5 DUP6 REVERT JUMPDEST PUSH2 0x2AB8 DUP10 DUP3 DUP11 ADD PUSH2 0x26A3 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH1 0x5F NOT DUP3 ADD SLT ISZERO PUSH2 0x2ACC JUMPI DUP2 DUP3 REVERT JUMPDEST POP PUSH1 0x60 DUP7 ADD SWAP2 POP PUSH2 0x2AE0 DUP8 PUSH1 0xC0 DUP9 ADD PUSH2 0x26A3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x27B6 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2B15 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x2B20 DUP2 PUSH2 0x308E JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2B3B JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0x2B47 DUP9 DUP3 DUP10 ADD PUSH2 0x265A JUMP JUMPDEST SWAP7 SWAP10 SWAP1 SWAP9 POP SWAP6 SWAP7 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP7 PUSH1 0x60 SWAP1 SWAP2 ADD CALLDATALOAD SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2B77 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x2B82 DUP2 PUSH2 0x308E JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x2B92 DUP2 PUSH2 0x308E JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2BB4 JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP3 DUP3 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x2BF8 JUMPI DUP2 CALLDATALOAD PUSH2 0x2BDD DUP2 PUSH2 0x308E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x2BCA JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 MSTORE PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 GT ISZERO PUSH2 0x2C34 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH1 0x20 DUP4 MUL DUP1 DUP4 PUSH1 0x20 DUP8 ADD CALLDATACOPY SWAP4 SWAP1 SWAP4 ADD PUSH1 0x20 ADD SWAP3 DUP4 MSTORE POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 MSTORE DUP3 DUP3 PUSH1 0x20 DUP7 ADD CALLDATACOPY DUP1 PUSH1 0x20 DUP5 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP6 ADD AND DUP6 ADD ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0x2C85 DUP2 PUSH2 0x30A3 JUMP JUMPDEST ISZERO ISZERO DUP3 MSTORE PUSH1 0x20 DUP2 ADD CALLDATALOAD PUSH2 0x2C97 DUP2 PUSH2 0x30A3 JUMP JUMPDEST ISZERO ISZERO PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP2 ADD CALLDATALOAD PUSH2 0x2CAC DUP2 PUSH2 0x30A3 JUMP JUMPDEST ISZERO ISZERO PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP2 ADD CALLDATALOAD PUSH2 0x2CC1 DUP2 PUSH2 0x30A3 JUMP JUMPDEST ISZERO ISZERO PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP2 ADD CALLDATALOAD PUSH2 0x2CD6 DUP2 PUSH2 0x30A3 JUMP JUMPDEST ISZERO ISZERO PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP2 ADD CALLDATALOAD PUSH2 0x2CEB DUP2 PUSH2 0x30A3 JUMP JUMPDEST DUP1 ISZERO ISZERO PUSH1 0xA0 DUP5 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP4 MSTORE DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x2D84 DUP6 DUP7 PUSH2 0x3049 JUMP JUMPDEST PUSH1 0xC0 DUP4 DUP7 ADD MSTORE PUSH2 0x2D99 PUSH2 0x1C0 DUP7 ADD DUP3 DUP5 PUSH2 0x2C50 JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x2DAA PUSH1 0x20 DUP7 ADD DUP7 PUSH2 0x3049 JUMP JUMPDEST PUSH1 0xFF NOT DUP1 DUP7 DUP6 SUB ADD PUSH2 0x120 DUP8 ADD MSTORE PUSH2 0x2DC3 DUP5 DUP4 DUP6 PUSH2 0x2C50 JUMP JUMPDEST SWAP4 POP PUSH2 0x2DD2 PUSH1 0x40 DUP10 ADD DUP10 PUSH2 0x3001 JUMP JUMPDEST SWAP4 POP SWAP2 POP DUP1 DUP7 DUP6 SUB ADD PUSH2 0x140 DUP8 ADD MSTORE PUSH2 0x2DEC DUP5 DUP5 DUP5 PUSH2 0x2BBB JUMP JUMPDEST SWAP4 POP PUSH2 0x2DFB PUSH1 0x60 DUP10 ADD DUP10 PUSH2 0x3001 JUMP JUMPDEST SWAP4 POP SWAP2 POP DUP1 DUP7 DUP6 SUB ADD PUSH2 0x160 DUP8 ADD MSTORE PUSH2 0x2E15 DUP5 DUP5 DUP5 PUSH2 0x2C03 JUMP JUMPDEST SWAP4 POP PUSH2 0x2E24 PUSH1 0x80 DUP10 ADD DUP10 PUSH2 0x3001 JUMP JUMPDEST SWAP4 POP SWAP2 POP DUP1 DUP7 DUP6 SUB ADD PUSH2 0x180 DUP8 ADD MSTORE POP PUSH2 0x2E3F DUP4 DUP4 DUP4 PUSH2 0x2C03 JUMP JUMPDEST PUSH1 0xA0 DUP9 ADD CALLDATALOAD PUSH2 0x1A0 DUP8 ADD MSTORE SWAP4 POP PUSH2 0x2E5E SWAP3 POP POP PUSH1 0x40 DUP5 ADD SWAP1 POP DUP5 PUSH2 0x2C7A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 MSTORE PUSH2 0x2E9B PUSH1 0x60 DUP4 ADD DUP7 DUP9 PUSH2 0x2C03 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP5 SWAP1 SWAP5 MSTORE POP PUSH1 0x40 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x13 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552525F4C454E4754485F4D49534D4154434800000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x13 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552525F5452414E534645525F4641494C454400000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD DUP5 DUP4 MSTORE PUSH1 0x20 PUSH1 0x40 DUP2 DUP6 ADD MSTORE DUP2 DUP6 MLOAD DUP1 DUP5 MSTORE PUSH1 0x60 DUP7 ADD SWAP2 POP DUP3 DUP8 ADD SWAP4 POP DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2F70 JUMPI DUP5 MLOAD DUP4 MSTORE SWAP4 DUP4 ADD SWAP4 SWAP2 DUP4 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x2F54 JUMP JUMPDEST POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1E NOT DUP5 CALLDATASIZE SUB ADD DUP2 SLT PUSH2 0x2FA9 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 ADD DUP1 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2FC3 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 ADD SWAP3 POP DUP2 MUL CALLDATASIZE SUB DUP3 SGT ISZERO PUSH2 0x269C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x2FF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1E NOT DUP5 CALLDATASIZE SUB ADD DUP2 SLT PUSH2 0x3017 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 ADD PUSH1 0x20 DUP2 ADD SWAP3 POP CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3037 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP2 MUL CALLDATASIZE SUB DUP4 SGT ISZERO PUSH2 0x269C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1E NOT DUP5 CALLDATASIZE SUB ADD DUP2 SLT PUSH2 0x305F JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 ADD PUSH1 0x20 DUP2 ADD SWAP3 POP CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x307F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATASIZE SUB DUP4 SGT ISZERO PUSH2 0x269C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xABB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xABB JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 REVERT 0xD0 MSTORE 0xD5 0xCA 0xE8 PUSH23 0x9A92E7F904AA9D597EE277050ED6000F267C770268092A 0xC3 PUSH29 0x64736F6C634300060C0033000000000000000000000000000000000000 ",
              "sourceMap": "4038:9604:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4093:1000;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7654:115;;;;;;:::i;:::-;;:::i;:::-;;6817:273;;;;;;:::i;:::-;;:::i;12062:170::-;;;;;;:::i;:::-;;:::i;9557:169::-;;;;;;:::i;:::-;;:::i;10240:406::-;;;;;;:::i;:::-;;:::i;7882:124::-;;;;;;:::i;:::-;;:::i;10902:123::-;;;;;;:::i;:::-;;:::i;9770:464::-;;;;;;:::i;:::-;;:::i;11689:367::-;;;;;;:::i;:::-;;:::i;6570:241::-;;;;;;:::i;:::-;;:::i;7775:101::-;;;;;;:::i;:::-;;:::i;10652:244::-;;;;;;:::i;:::-;;:::i;11031:231::-;;;;;;:::i;:::-;;:::i;12238:186::-;;;;;;:::i;:::-;;:::i;11268:415::-;;;;;;:::i;:::-;;:::i;5099:1443::-;;;;;;:::i;:::-;;:::i;7096:511::-;;;;;;:::i;:::-;;:::i;8052:1499::-;;;;;;:::i;:::-;;:::i;4093:1000::-;4306:10;4336:32;;;4328:64;;;;-1:-1:-1;;;4328:64:0;;;;;;;:::i;:::-;;;;;;;;;4410:31;;;4402:63;;;;-1:-1:-1;;;4402:63:0;;;;;;;:::i;:::-;4483:7;-1:-1:-1;;;;;4483:16:0;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4511:24;;-1:-1:-1;;;4511:24:0;;4476:25;;-1:-1:-1;;;;;;4511:15:0;;;;;:24;;4527:7;;4511:24;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4551:6;4546:320;4563:17;;;4546:320;;;4601:11;4621:6;;4628:1;4621:9;;;;;;;;;;;;;;;;;;;;:::i;:::-;4601:30;;4653:5;-1:-1:-1;;;;;4653:18:0;;4672:10;4692:4;4699:8;;4708:1;4699:11;;;;;;;;;;;;;4653:58;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4645:90;;;;-1:-1:-1;;;4645:90:0;;;;;;;:::i;:::-;4749:47;4762:5;4777:4;4784:8;;4793:1;4784:11;;;;;;;;;;;;;4749:12;:47::i;:::-;4810:4;-1:-1:-1;;;;;4810:9:0;;4820:6;;4827:1;4820:9;;;;;;;;;;;;;;;;;;;;:::i;:::-;4831:8;;4840:1;4831:11;;;;;;;;;;;;;4844:7;;4852:1;4844:10;;;;;;;;;;;;;4810:45;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4582:3:0;;;;;-1:-1:-1;4546:320:0;;-1:-1:-1;;4546:320:0;;;4880:8;4876:211;;;4904:4;-1:-1:-1;;;;;4904:13:0;;:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4967:29:0;;-1:-1:-1;;;4967:29:0;;-1:-1:-1;;;;;4941:13:0;;;-1:-1:-1;4941:13:0;;-1:-1:-1;4955:10:0;;4941:13;;4967:14;;:29;;4990:4;;4967:29;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4941:56;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4933:88;;;;-1:-1:-1;;;4933:88:0;;;;;;;:::i;:::-;4876:211;;;5052:24;;-1:-1:-1;;;5052:24:0;;-1:-1:-1;;;;;5052:18:0;;;;;:24;;5071:4;;5052:24;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4876:211;4093:1000;;;;;;;;;;;:::o;7654:115::-;7732:30;;-1:-1:-1;;;7732:30:0;;-1:-1:-1;;;;;7732:18:0;;;;;:30;;7751:10;;7732:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7654:115;;:::o;6817:273::-;6968:23;6994:4;-1:-1:-1;;;;;6994:10:0;;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;6994:29:0;;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6994:31:0;;;;;;;;;;;;:::i;:::-;6968:57;;7035:48;7041:4;7047:6;7055:13;7070:12;;7035:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7035:5:0;;-1:-1:-1;;;7035:48:0:i;:::-;6817:273;;;;;:::o;12062:170::-;12185:40;;;;;-1:-1:-1;;;;;12185:30:0;;;;;:40;;12216:8;;12185:40;;;:::i;9557:169::-;9606:4;-1:-1:-1;;;;;9606:13:0;;:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9665:29:0;;-1:-1:-1;;;9665:29:0;;-1:-1:-1;;;;;9639:13:0;;;-1:-1:-1;9639:13:0;;-1:-1:-1;9653:10:0;;9639:13;;9665:14;;:29;;9688:4;;9665:29;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9639:56;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9631:88;;;;-1:-1:-1;;;9631:88:0;;;;;;;:::i;:::-;9557:169;:::o;10240:406::-;10405:57;;-1:-1:-1;;;10405:57:0;;-1:-1:-1;;;;;10405:16:0;;;;;:57;;10422:10;;10442:4;;10449:12;;10405:57;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10397:89;;;;-1:-1:-1;;;10397:89:0;;;;;;;:::i;:::-;10496:43;;-1:-1:-1;;;10496:43:0;;-1:-1:-1;;;;;10496:16:0;;;;;:43;;10521:5;;10529:9;;10496:43;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10584:30:0;;-1:-1:-1;;;10584:30:0;;-1:-1:-1;;;;;10557:14:0;;;-1:-1:-1;10557:14:0;;-1:-1:-1;10572:10:0;;10557:14;;10584:15;;:30;;10608:4;;10584:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10557:58;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10549:90;;;;-1:-1:-1;;;10549:90:0;;;;;;;:::i;:::-;10240:406;;;;:::o;7882:124::-;7966:33;;;;;-1:-1:-1;;;;;7966:18:0;;;;;:33;;7985:13;;7966:33;;;:::i;10902:123::-;11000:18;;;;;-1:-1:-1;;;;;11000:10:0;;;;;:18;;11011:6;;11000:18;;;:::i;9770:464::-;9936:60;;-1:-1:-1;;;9936:60:0;;-1:-1:-1;;;;;9936:18:0;;;;;:60;;9955:10;;9975:4;;9982:13;;9936:60;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9928:92;;;;-1:-1:-1;;;9928:92:0;;;;;;;:::i;:::-;10030:48;10043:5;10058:3;10064:13;10030:12;:48::i;:::-;10088:43;;-1:-1:-1;;;10088:43:0;;-1:-1:-1;;;;;10088:16:0;;;;;:43;;10113:5;;10121:9;;10088:43;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10174:28:0;;-1:-1:-1;;;10174:28:0;;-1:-1:-1;;;;;10149:12:0;;;-1:-1:-1;10149:12:0;;-1:-1:-1;10162:10:0;;10149:12;;10174:13;;:28;;10196:4;;10174:28;;;:::i;11689:367::-;11827:57;;-1:-1:-1;;;11827:57:0;;-1:-1:-1;;;;;11827:16:0;;;;;:57;;11844:10;;11864:4;;11871:12;;11827:57;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11819:89;;;;-1:-1:-1;;;11819:89:0;;;;;;;:::i;:::-;11918:31;;;;;-1:-1:-1;;;;;11918:15:0;;;;;:31;;11942:5;;11918:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11994:30:0;;-1:-1:-1;;;11994:30:0;;-1:-1:-1;;;;;11967:14:0;;;-1:-1:-1;11967:14:0;;-1:-1:-1;11982:10:0;;11967:14;;11994:15;;:30;;12018:4;;11994:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11967:58;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11959:90;;;;-1:-1:-1;;;11959:90:0;;;;;;;:::i;:::-;11689:367;;;:::o;6570:241::-;6699:23;6725:4;-1:-1:-1;;;;;6725:19:0;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7775:101;7846:23;;-1:-1:-1;;;7846:23:0;;-1:-1:-1;;;;;7846:15:0;;;;;:23;;7862:6;;7846:23;;;:::i;10652:244::-;10829:60;;;;;-1:-1:-1;;;;;10829:26:0;;;;;:60;;10856:10;;;;10868;;10880:8;;10829:60;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10652:244;;;;;:::o;11031:231::-;11192:63;;;;;-1:-1:-1;;;;;11192:18:0;;;;;:63;;11219:5;;11227:7;;11236:18;;11192:63;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11031:231;;;;:::o;12238:186::-;12369:48;;;;;-1:-1:-1;;;;;12369:38:0;;;;;:48;;12408:8;;12369:48;;;:::i;11268:415::-;11409:60;;-1:-1:-1;;;11409:60:0;;-1:-1:-1;;;;;11409:18:0;;;;;:60;;11428:10;;11448:4;;11455:13;;11409:60;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11401:92;;;;-1:-1:-1;;;11401:92:0;;;;;;;:::i;:::-;11503:48;11516:5;11531:3;11537:13;11503:12;:48::i;:::-;11561:3;-1:-1:-1;;;;;11561:17:0;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11623:28:0;;-1:-1:-1;;;11623:28:0;;-1:-1:-1;;;;;11598:12:0;;;-1:-1:-1;11598:12:0;;-1:-1:-1;11611:10:0;;11598:12;;11623:13;;:28;;11645:4;;11623:28;;;:::i;5099:1443::-;5373:26;5471:24;;;;:10;:24;:::i;:::-;:31;-1:-1:-1;5432:28:0;;;;:10;:28;:::i;:::-;:35;;:70;5411:136;;;;-1:-1:-1;;;5411:136:0;;;;;;;:::i;:::-;5617:23;;;;:10;:23;:::i;:::-;:30;-1:-1:-1;5578:28:0;;;;:10;:28;:::i;:::-;:35;;:69;5557:135;;;;-1:-1:-1;;;5557:135:0;;;;;;;:::i;:::-;5709:99;;;;;-1:-1:-1;;;;;5709:14:0;;;;;:99;;5745:8;;5768:10;;5792:6;;5709:99;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5703:105;;5824:6;5819:382;5840:28;;;;:10;:28;:::i;:::-;:35;;5836:1;:39;5819:382;;;5896:11;5916:28;;;;:10;:28;:::i;:::-;5945:1;5916:31;;;;;;;;;;;;;;;;;;;;:::i;:::-;5896:52;-1:-1:-1;;;;;;5987:18:0;;;6006:10;6026:4;6033:24;;;;:10;:24;:::i;:::-;6058:1;6033:27;;;;;;;;;;;;;5987:74;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5962:152;;;;-1:-1:-1;;;5962:152:0;;;;;;;:::i;:::-;6128:62;6141:5;6156:3;6162:24;;;;:10;:24;:::i;:::-;6187:1;6162:27;;;;;;6128:62;-1:-1:-1;5877:3:0;;5819:382;;;-1:-1:-1;6330:34:0;6211:163;;;;;-1:-1:-1;;;;;6211:14:0;;;;;:163;;6239:23;;;6276:40;;;;;6330:34;;;;6211:163;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6392:49:0;;-1:-1:-1;;;6392:49:0;;-1:-1:-1;;;;;6392:12:0;;;-1:-1:-1;6392:12:0;;-1:-1:-1;6392:49:0;;6405:10;;6417:23;;;6392:49;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6384:81;;;;-1:-1:-1;;;6384:81:0;;;;;;;:::i;:::-;5099:1443;;;;;;;:::o;7096:511::-;7268:60;;-1:-1:-1;;;7268:60:0;;-1:-1:-1;;;;;7268:18:0;;;;;:60;;7287:10;;7307:4;;7314:13;;7268:60;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7260:92;;;;-1:-1:-1;;;7260:92:0;;;;;;;:::i;:::-;7362:49;7375:5;7390:4;7397:13;7362:12;:49::i;:::-;7442:76;;;;;7421:18;;-1:-1:-1;;;;;7442:27:0;;;;;:76;;7478:5;;7486:13;;7501:16;;7442:76;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7536:40;;-1:-1:-1;;;7536:40:0;;7421:97;;-1:-1:-1;;;;;;7536:13:0;;;;;:40;;7550:10;;7421:97;;7536:40;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7528:72;;;;-1:-1:-1;;;7528:72:0;;;;;;;:::i;8052:1499::-;8226:32;;;8218:64;;;;-1:-1:-1;;;8218:64:0;;;;;;;:::i;:::-;8300:31;;;8292:63;;;;-1:-1:-1;;;8292:63:0;;;;;;;:::i;:::-;8371:6;8366:1179;8383:17;;;8366:1179;;;8421:11;8441:6;;8448:1;8441:9;;;;;;;;;;;;;;;;;;;;:::i;:::-;8421:30;;8469:4;-1:-1:-1;;;;;8469:12:0;;8482:6;;8489:1;8482:9;;;;;;;;;;;;;;;;;;;;:::i;:::-;8469:23;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8465:892;;;8530:4;-1:-1:-1;;;;;8530:15:0;;8546:6;;8553:1;8546:9;;;;;;;;;;;;;;;;;;;;:::i;:::-;8530:26;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8516:8;;8525:1;8516:11;;;;;;;;;;;;;:40;8512:374;;;8613:5;-1:-1:-1;;;;;8613:18:0;;8632:10;8652:4;8673;-1:-1:-1;;;;;8673:15:0;;8689:6;;8696:1;8689:9;;;;;;;;;;;;;;;;;;;;:::i;:::-;8673:26;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8659:8;;8668:1;8659:11;;;;;;;;;;;;;:40;8613:87;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8580:189;;;;-1:-1:-1;;;8580:189:0;;;;;;;:::i;:::-;8791:76;8804:5;8819:4;8840;-1:-1:-1;;;;;8840:15:0;;8856:6;;8863:1;8856:9;;;;;;;;;;;;;;;;;;;;:::i;:::-;8840:26;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8826:8;;8835:1;8826:11;;;;;;;;;;;;;:40;8791:12;:76::i;:::-;8921:5;8907:8;;8916:1;8907:11;;;;;;;;;;;;;:19;8903:182;;;8950:4;-1:-1:-1;;;;;8950:11:0;;8962:6;;8969:1;8962:9;;;;;;;;;;;;;;;;;;;;:::i;:::-;8973:8;;8982:1;8973:11;;;;;;;;;;;;;8986:7;;8994:1;8986:10;;;;;;;;;;;;;8950:47;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8903:182;;;9044:4;-1:-1:-1;;;;;9044:11:0;;9056:6;;9063:1;9056:9;;;;;;;;;;;;;;;;;;;;:::i;:::-;9044:22;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8903:182;8465:892;;;9132:5;-1:-1:-1;;;;;9132:18:0;;9151:10;9171:4;9178:8;;9187:1;9178:11;;;;;;;;;;;;;9132:58;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9124:90;;;;-1:-1:-1;;;9124:90:0;;;;;;;:::i;:::-;9232:47;9245:5;9260:4;9267:8;;9276:1;9267:11;;;;;;9232:47;9297:4;-1:-1:-1;;;;;9297:9:0;;9307:6;;9314:1;9307:9;;;;;;;;;;;;;;;;;;;;:::i;:::-;9318:8;;9327:1;9318:11;;;;;;;;;;;;;9331:7;;9339:1;9331:10;;;;;;;;;;;;;9297:45;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8465:892;9375:30;;-1:-1:-1;;;9375:30:0;;9408:1;;-1:-1:-1;;;;;9375:15:0;;;;;:30;;9399:4;;9375:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:34;9371:163;;;9464:30;;-1:-1:-1;;;9464:30:0;;-1:-1:-1;;;;;9437:14:0;;;;;9452:10;;9437:14;;9464:15;;:30;;9488:4;;9464:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9437:58;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9429:90;;;;-1:-1:-1;;;9429:90:0;;;;;;;:::i;:::-;-1:-1:-1;8402:3:0;;8366:1179;;12456:229;12544:39;;;;;12586:1;;-1:-1:-1;;;;;12544:15:0;;;;;:39;;12568:4;;12575:7;;12544:39;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:43;12540:99;;;12603:25;;-1:-1:-1;;;12603:25:0;;-1:-1:-1;;;;;12603:13:0;;;;;:25;;12617:7;;12626:1;;12603:25;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;12540:99;12648:30;;-1:-1:-1;;;12648:30:0;;-1:-1:-1;;;;;12648:13:0;;;;;:30;;12662:7;;12671:6;;12648:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;12691:949::-;12886:6;:13;12863:12;:19;:36;12855:68;;;;-1:-1:-1;;;12855:68:0;;;;;;;:::i;:::-;12939:6;12934:269;12955:6;:13;12951:1;:17;12934:269;;;12989:11;13009:6;13016:1;13009:9;;;;;;;;;;;;;;12989:30;;13041:5;-1:-1:-1;;;;;13041:18:0;;13060:10;13080:4;13087:12;13100:1;13087:15;;;;;;;;;;;;;;13041:62;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13033:94;;;;-1:-1:-1;;;13033:94:0;;;;;;;:::i;:::-;13141:51;13154:5;13169:4;13176:12;13189:1;13176:15;;;;;;;;;;;;;;13141:12;:51::i;:::-;-1:-1:-1;12970:3:0;;12934:269;;;-1:-1:-1;13212:42:0;;;;;-1:-1:-1;;;;;13212:13:0;;;;;:42;;13226:13;;13241:12;;13212:42;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13269:6;13264:272;13285:6;:13;13281:1;:17;13264:272;;;13319:11;13339:6;13346:1;13339:9;;;;;;;;;;;;;;13319:30;;13400:1;13367:5;-1:-1:-1;;;;;13367:15:0;;13391:4;13367:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:34;13363:163;;;13456:30;;-1:-1:-1;;;13456:30:0;;-1:-1:-1;;;;;13429:14:0;;;;;13444:10;;13429:14;;13456:15;;:30;;13480:4;;13456:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13429:58;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13421:90;;;;-1:-1:-1;;;13421:90:0;;;;;;;:::i;:::-;-1:-1:-1;13300:3:0;;13264:272;;;-1:-1:-1;13579:29:0;;-1:-1:-1;;;13579:29:0;;-1:-1:-1;;;;;13553:13:0;;;;;13567:10;;13553:13;;13579:14;;:29;;13602:4;;13579:29;;;:::i;142:134:-1:-;220:13;;238:33;220:13;238:33;:::i;:::-;205:71;;;;:::o;301:352::-;;;431:3;424:4;416:6;412:17;408:27;398:2;;-1:-1;;439:12;398:2;-1:-1;469:20;;509:18;498:30;;495:2;;;-1:-1;;531:12;495:2;575:4;567:6;563:17;551:29;;626:3;575:4;;610:6;606:17;567:6;592:32;;589:41;586:2;;;643:1;;633:12;586:2;391:262;;;;;:::o;3724:161::-;;3837:3;3828:6;3823:3;3819:16;3815:26;3812:2;;;-1:-1;;3844:12;3812:2;-1:-1;3864:15;3805:80;-1:-1;3805:80::o;4369:241::-;;4473:2;4461:9;4452:7;4448:23;4444:32;4441:2;;;-1:-1;;4479:12;4441:2;85:6;72:20;97:33;124:5;97:33;:::i;:::-;4531:63;4435:175;-1:-1;;;4435:175::o;4617:392::-;;4757:2;;4745:9;4736:7;4732:23;4728:32;4725:2;;;-1:-1;;4763:12;4725:2;4814:17;4808:24;4852:18;;4844:6;4841:30;4838:2;;;-1:-1;;4874:12;4838:2;4976:6;4965:9;4961:22;;;807:3;800:4;792:6;788:17;784:27;774:2;;-1:-1;;815:12;774:2;855:6;849:13;4852:18;32976:6;32973:30;32970:2;;;-1:-1;;33006:12;32970:2;4757;33043:6;33039:17;;;877:80;4757:2;33039:17;33104:15;877:80;:::i;:::-;985:21;;;1042:14;;;;1017:17;;;1122:27;;;;;1119:36;-1:-1;1116:2;;;-1:-1;;1158:12;1116:2;-1:-1;1184:10;;1178:217;1203:6;1200:1;1197:13;1178:217;;;1283:48;1327:3;1315:10;1283:48;:::i;:::-;1271:61;;1225:1;1218:9;;;;;1346:14;;;;1374;;1178:217;;;-1:-1;4894:99;4719:290;-1:-1;;;;;;;;4719:290::o;5016:257::-;;5128:2;5116:9;5107:7;5103:23;5099:32;5096:2;;;-1:-1;;5134:12;5096:2;1999:6;1993:13;2011:30;2035:5;2011:30;:::i;5280:406::-;;;5421:2;5409:9;5400:7;5396:23;5392:32;5389:2;;;-1:-1;;5427:12;5389:2;2153:6;2140:20;2165:53;2212:5;2165:53;:::i;:::-;5479:83;-1:-1;5599:2;5638:22;;72:20;97:33;72:20;97:33;:::i;:::-;5607:63;;;;5383:303;;;;;:::o;5693:400::-;;;5831:2;5819:9;5810:7;5806:23;5802:32;5799:2;;;-1:-1;;5837:12;5799:2;2153:6;2140:20;2165:53;2212:5;2165:53;:::i;:::-;5889:83;-1:-1;6009:2;6045:22;;1851:20;1876:30;1851:20;1876:30;:::i;6100:681::-;;;;;6287:3;6275:9;6266:7;6262:23;6258:33;6255:2;;;-1:-1;;6294:12;6255:2;2153:6;2140:20;2165:53;2212:5;2165:53;:::i;:::-;6346:83;-1:-1;6466:2;6517:22;;3379:20;3404:45;3379:20;3404:45;:::i;:::-;6249:532;;6474:75;;-1:-1;;;;6586:2;6625:22;;4158:20;;6694:2;6733:22;4158:20;;6249:532::o;6788:406::-;;;6929:2;6917:9;6908:7;6904:23;6900:32;6897:2;;;-1:-1;;6935:12;6897:2;2153:6;2140:20;2165:53;2212:5;2165:53;:::i;:::-;6987:83;7107:2;7146:22;;;;4158:20;;-1:-1;;;6891:303::o;7201:1363::-;;;;;;;;;;7508:3;7496:9;7487:7;7483:23;7479:33;7476:2;;;-1:-1;;7515:12;7476:2;2326:6;2313:20;2338:49;2381:5;2338:49;:::i;:::-;7567:79;-1:-1;7711:2;7696:18;;7683:32;7735:18;7724:30;;;7721:2;;;-1:-1;;7757:12;7721:2;7795:80;7867:7;7858:6;7847:9;7843:22;7795:80;:::i;:::-;7777:98;;-1:-1;7777:98;-1:-1;7940:2;7925:18;;7912:32;;-1:-1;7953:30;;;7950:2;;;-1:-1;;7986:12;7950:2;8024:80;8096:7;8087:6;8076:9;8072:22;8024:80;:::i;:::-;8006:98;;-1:-1;8006:98;-1:-1;8169:2;8154:18;;8141:32;;-1:-1;8182:30;;;8179:2;;;-1:-1;;8215:12;8179:2;;8253:80;8325:7;8316:6;8305:9;8301:22;8253:80;:::i;:::-;8235:98;;-1:-1;8235:98;-1:-1;;8370:3;8410:22;;4158:20;;-1:-1;8479:3;8516:22;;1851:20;1876:30;1851:20;1876:30;:::i;:::-;8488:60;;;;7470:1094;;;;;;;;;;;:::o;8845:289::-;;8973:2;8961:9;8952:7;8948:23;8944:32;8941:2;;;-1:-1;;8979:12;8941:2;2659:6;2653:13;2671:46;2711:5;2671:46;:::i;9141:1111::-;;;;;;;;9414:3;9402:9;9393:7;9389:23;9385:33;9382:2;;;-1:-1;;9421:12;9382:2;2492:6;2479:20;2504:46;2544:5;2504:46;:::i;:::-;9473:76;-1:-1;9614:2;9599:18;;9586:32;9638:18;9627:30;;;9624:2;;;-1:-1;;9660:12;9624:2;9698:80;9770:7;9761:6;9750:9;9746:22;9698:80;:::i;:::-;9680:98;;-1:-1;9680:98;-1:-1;9843:2;9828:18;;9815:32;;-1:-1;9856:30;;;9853:2;;;-1:-1;;9889:12;9853:2;9927:80;9999:7;9990:6;9979:9;9975:22;9927:80;:::i;:::-;9909:98;;-1:-1;9909:98;-1:-1;10072:2;10057:18;;10044:32;;-1:-1;10085:30;;;10082:2;;;-1:-1;;10118:12;10082:2;;10156:80;10228:7;10219:6;10208:9;10204:22;10156:80;:::i;:::-;9376:876;;;;-1:-1;9376:876;;-1:-1;9376:876;;;;10138:98;;-1:-1;;;9376:876::o;10259:673::-;;;;;10445:2;10433:9;10424:7;10420:23;10416:32;10413:2;;;-1:-1;;10451:12;10413:2;2492:6;2479:20;2504:46;2544:5;2504:46;:::i;:::-;10503:76;-1:-1;10616:2;10655:22;;4158:20;;-1:-1;10752:2;10737:18;;10724:32;10776:18;10765:30;;10762:2;;;-1:-1;;10798:12;10762:2;10836:80;10908:7;10899:6;10888:9;10884:22;10836:80;:::i;:::-;10407:525;;;;-1:-1;10818:98;-1:-1;;;;10407:525::o;10939:1059::-;;;;;;11214:9;11205:7;11201:23;11226:3;11201:23;11197:33;11194:2;;;-1:-1;;11233:12;11194:2;2827:6;2814:20;2839:51;2884:5;2839:51;:::i;:::-;11285:81;-1:-1;11403:2;11458:22;;2313:20;2338:49;2313:20;2338:49;:::i;:::-;11411:79;-1:-1;11555:2;11540:18;;11527:32;11579:18;11568:30;;11565:2;;;-1:-1;;11601:12;11565:2;11631:82;11705:7;11696:6;11685:9;11681:22;11631:82;:::i;:::-;11621:92;-1:-1;;11750:2;-1:-1;;3603:16;;3599:25;3596:2;;;-1:-1;;3627:12;3596:2;;11750;11821:9;11817:22;11758:91;;11905:77;11974:7;11886:3;11954:9;11950:22;11905:77;:::i;:::-;11895:87;;11188:810;;;;;;;;:::o;12335:426::-;;;12486:2;12474:9;12465:7;12461:23;12457:32;12454:2;;;-1:-1;;12492:12;12768:833;;;;;;12988:3;12976:9;12967:7;12963:23;12959:33;12956:2;;;-1:-1;;12995:12;12956:2;3012:6;2999:20;3024:63;3081:5;3024:63;:::i;:::-;13047:93;-1:-1;13205:2;13190:18;;13177:32;13229:18;13218:30;;13215:2;;;-1:-1;;13251:12;13215:2;13289:80;13361:7;13352:6;13341:9;13337:22;13289:80;:::i;:::-;12950:651;;13271:98;;-1:-1;13271:98;;13406:2;13445:22;;4158:20;;13514:2;13553:22;;;4158:20;;-1:-1;12950:651;-1:-1;;;;12950:651::o;13608:575::-;;;;13788:2;13776:9;13767:7;13763:23;13759:32;13756:2;;;-1:-1;;13794:12;13756:2;3012:6;2999:20;3024:63;3081:5;3024:63;:::i;:::-;13846:93;-1:-1;13976:2;14027:22;;3379:20;3404:45;3379:20;3404:45;:::i;:::-;13750:433;;13984:75;;-1:-1;;;14096:2;14135:22;;;;4158:20;;13750:433::o;16045:263::-;;16160:2;16148:9;16139:7;16135:23;16131:32;16128:2;;;-1:-1;;16166:12;16128:2;-1:-1;4306:13;;16122:186;-1:-1;16122:186::o;17089:645::-;;33916:6;33911:3;33904:19;33953:4;;33948:3;33944:14;17226:83;;17394:21;-1:-1;17421:291;17446:6;17443:1;17440:13;17421:291;;;85:6;72:20;97:33;124:5;97:33;:::i;:::-;-1:-1;;;;;37560:54;16889:37;;16469:14;;;;34771:12;;;;17468:1;17461:9;17421:291;;;-1:-1;17718:10;;17213:521;-1:-1;;;;;17213:521::o;17773:447::-;;33916:6;33911:3;33904:19;18012:66;18004:6;18001:78;17998:2;;;-1:-1;;18082:12;17998:2;33953:4;18117:6;18113:17;38904:6;38899:3;33953:4;33948:3;33944:14;38881:30;38942:16;;;;33953:4;38942:16;38935:27;;;-1:-1;38942:16;;17895:325;-1:-1;17895:325::o;20201:280::-;;33916:6;33911:3;33904:19;38904:6;38899:3;33953:4;33948:3;33944:14;38881:30;-1:-1;33953:4;38951:6;33948:3;38942:16;;38935:27;33953:4;39060:7;;39064:2;20467:6;39044:14;39040:28;33948:3;20436:39;;20429:46;;20293:188;;;;;:::o;23365:1265::-;1864:6;1851:20;1876:30;1900:5;1876:30;:::i;:::-;36775:13;36768:21;19518:34;;35954:2;35945:12;;1851:20;1876:30;1851:20;1876:30;:::i;:::-;36775:13;36768:21;35954:2;23861:14;;19518:34;23991:4;23980:16;;1851:20;1876:30;1851:20;1876:30;:::i;:::-;36775:13;36768:21;23991:4;24045:14;;19518:34;24177:4;24166:16;;1851:20;1876:30;1851:20;1876:30;:::i;:::-;36775:13;36768:21;24177:4;24231:14;;19518:34;24360:4;24349:16;;1851:20;1876:30;1851:20;1876:30;:::i;:::-;36775:13;36768:21;24360:4;24414:14;;19518:34;24540:4;24529:16;;1851:20;1876:30;1851:20;1876:30;:::i;:::-;19545:5;36775:13;36768:21;24540:4;24598:3;24594:14;19518:34;;23477:1153;;:::o;24867:222::-;-1:-1;;;;;37560:54;;;;16889:37;;24994:2;24979:18;;24965:124::o;25096:460::-;-1:-1;;;;;37560:54;;;16758:58;;37560:54;;;;25459:2;25444:18;;16889:37;25542:2;25527:18;;24698:37;;;;25287:2;25272:18;;25258:298::o;25563:349::-;-1:-1;;;;;37560:54;;;;16758:58;;25898:2;25883:18;;24698:37;25726:2;25711:18;;25697:215::o;25919:333::-;-1:-1;;;;;37560:54;;;16889:37;;37560:54;;26238:2;26223:18;;16889:37;26074:2;26059:18;;26045:207::o;26615:697::-;;26900:3;-1:-1;;;;;16919:5;37560:54;16896:3;16889:37;26900:3;27019:2;27008:9;27004:18;26997:48;21484:62;21529:16;21522:5;21484:62;:::i;:::-;21393:4;26900:3;26889:9;26885:19;21559:38;21612:89;21384:14;26889:9;21384:14;21682:12;21668;21612:89;:::i;:::-;21604:97;;;;21792:62;27019:2;21841:5;21837:16;21830:5;21792:62;:::i;:::-;21890:14;;;26889:9;21894:4;21890:14;;21874;26889:9;21874:14;21867:38;21920:89;22004:4;21990:12;21976;21920:89;:::i;:::-;21912:97;;22104:77;22175:4;22168:5;22164:16;22157:5;22104:77;:::i;:::-;22070:111;;;;21890:14;26889:9;22221:4;22217:14;;22201;26889:9;22201:14;22194:38;22247:119;22361:4;22347:12;22333;22247:119;:::i;:::-;22239:127;;22457:77;22528:4;22521:5;22517:16;22510:5;22457:77;:::i;:::-;22423:111;;;;21890:14;26889:9;22574:4;22570:14;;22554;26889:9;22554:14;22547:38;22600:119;22714:4;22700:12;22686;22600:119;:::i;:::-;22592:127;;22809:77;22880:4;22873:5;22869:16;22862:5;22809:77;:::i;:::-;22775:111;;;;21890:14;26889:9;22926:4;22922:14;;22906;26889:9;22906:14;22899:38;;22952:119;23066:4;23052:12;23038;22952:119;:::i;:::-;23186:4;23175:16;;4158:20;23246:14;;;24698:37;22944:127;-1:-1;27184:118;;-1:-1;;22175:4;27283:18;;;-1:-1;27274:6;27184:118;:::i;:::-;26871:441;;;;;;:::o;27659:444::-;-1:-1;;;;;37560:54;;;;16889:37;;28006:2;27991:18;;24698:37;;;;28089:2;28074:18;;24698:37;27842:2;27827:18;;27813:290::o;28110:612::-;;28353:2;28374:17;28367:47;28428:118;28353:2;28342:9;28338:18;28532:6;28524;28428:118;:::i;:::-;28625:2;28610:18;;24698:37;;;;-1:-1;28708:2;28693:18;24698:37;28420:126;28324:398;-1:-1;;28324:398::o;28729:210::-;36775:13;;36768:21;19518:34;;28850:2;28835:18;;28821:118::o;29490:416::-;29690:2;29704:47;;;20714:2;29675:18;;;33904:19;20750:21;33944:14;;;20730:42;20791:12;;;29661:245::o;29913:416::-;30113:2;30127:47;;;21042:2;30098:18;;;33904:19;21078:21;33944:14;;;21058:42;21119:12;;;30084:245::o;30336:222::-;24698:37;;;30463:2;30448:18;;30434:124::o;30565:481::-;;30770:2;30759:9;30755:18;24728:5;24705:3;24698:37;30888:2;30770;30888;30877:9;30873:18;30866:48;30928:108;18958:5;33522:12;33916:6;33911:3;33904:19;33944:14;30759:9;33944:14;18970:93;;30888:2;19134:5;33376:14;19146:21;;-1:-1;19173:260;19198:6;19195:1;19192:13;19173:260;;;19259:13;;24698:37;;33654:14;;;;16651;;;;19220:1;19213:9;19173:260;;;-1:-1;30920:116;;30741:305;-1:-1;;;;;;;30741:305::o;31053:444::-;24698:37;;;31400:2;31385:18;;24698:37;;;;31483:2;31468:18;;24698:37;31236:2;31221:18;;31207:290::o;31504:522::-;;;31655:11;31642:25;31706:48;;31730:8;31714:14;31710:29;31706:48;31686:18;31682:73;31672:2;;-1:-1;;31759:12;31672:2;31786:33;;31840:18;;;-1:-1;31878:18;31867:30;;31864:2;;;-1:-1;;31900:12;31864:2;31745:4;31928:13;;;;-1:-1;31980:17;;31714:14;31960:38;31950:49;;31947:2;;;32012:1;;32002:12;32562:256;32624:2;32618:9;32650:17;;;32725:18;32710:34;;32746:22;;;32707:62;32704:2;;;32782:1;;32772:12;32704:2;32624;32791:22;32602:216;;-1:-1;32602:216::o;34799:517::-;;;34939:3;34926:17;31706:48;;35007:8;34991:14;34987:29;34983:48;34963:18;34959:73;34949:2;;-1:-1;;35036:12;34949:2;35065:33;;35022:4;35154:16;;;-1:-1;35120:19;;-1:-1;35190:18;35179:30;;35176:2;;;35222:1;;35212:12;35176:2;35022:4;35273:6;35269:17;34991:14;35249:38;35239:8;35235:53;35232:2;;;35301:1;;35291:12;35973:502;;;36098:3;36085:17;31706:48;;36166:8;36150:14;36146:29;36142:48;36122:18;36118:73;36108:2;;-1:-1;;36195:12;36108:2;36224:33;;36181:4;36313:16;;;-1:-1;36279:19;;-1:-1;36349:18;36338:30;;36335:2;;;36381:1;;36371:12;36335:2;36428:17;36150:14;36408:38;36398:8;36394:53;36391:2;;;36460:1;;36450:12;39081:117;-1:-1;;;;;39168:5;37560:54;39143:5;39140:35;39130:2;;39189:1;;39179:12;39205:111;39286:5;36775:13;36768:21;39264:5;39261:32;39251:2;;39307:1;;39297:12"
            },
            "gasEstimates": {
              "creation": {
                "codeDepositCost": "2503800",
                "executionCost": "2703",
                "totalCost": "2506503"
              },
              "external": {
                "applyAddToken(address,address,uint256)": "infinite",
                "commitAddToken(address,address,uint256,uint256)": "infinite",
                "create(address,address[],uint256[],uint256[],uint256,bool)": "infinite",
                "createSmartPool(address,address,(string,string,address[],uint256[],uint256[],uint256),(uint256,uint256,uint256),(bool,bool,bool,bool,bool,bool))": "infinite",
                "decreaseWeight(address,address,uint256,uint256)": "infinite",
                "finalize(address)": "infinite",
                "increaseWeight(address,address,uint256,uint256)": "infinite",
                "joinPool(address,uint256,uint256[])": "infinite",
                "joinSmartPool(address,uint256,uint256[])": "infinite",
                "joinswapExternAmountIn(address,address,uint256,uint256)": "infinite",
                "removeToken(address,address,uint256)": "infinite",
                "removeWhitelistedLiquidityProvider(address,address)": "infinite",
                "setCap(address,uint256)": "infinite",
                "setController(address,address)": "infinite",
                "setPublicSwap(address,bool)": "infinite",
                "setSwapFee(address,uint256)": "infinite",
                "setTokens(address,address[],uint256[],uint256[])": "infinite",
                "updateWeightsGradually(address,uint256[],uint256,uint256)": "infinite",
                "whitelistLiquidityProvider(address,address)": "infinite"
              },
              "internal": {
                "_join(contract AbstractPool,address[] memory,uint256,uint256[] memory)": "infinite",
                "_safeApprove(contract ERC20,address,uint256)": "infinite"
              }
            },
            "methodIdentifiers": {
              "applyAddToken(address,address,uint256)": "c037f39c",
              "commitAddToken(address,address,uint256,uint256)": "9fbbf3ba",
              "create(address,address[],uint256[],uint256[],uint256,bool)": "1a78a275",
              "createSmartPool(address,address,(string,string,address[],uint256[],uint256[],uint256),(uint256,uint256,uint256),(bool,bool,bool,bool,bool,bool))": "c152e579",
              "decreaseWeight(address,address,uint256,uint256)": "674f8d8e",
              "finalize(address)": "4ef39b75",
              "increaseWeight(address,address,uint256,uint256)": "81bd5cd7",
              "joinPool(address,uint256,uint256[])": "8a5c57df",
              "joinSmartPool(address,uint256,uint256[])": "2c91a591",
              "joinswapExternAmountIn(address,address,uint256,uint256)": "c1762b15",
              "removeToken(address,address,uint256)": "84f3859b",
              "removeWhitelistedLiquidityProvider(address,address)": "a7f28da7",
              "setCap(address,uint256)": "80ad2cf3",
              "setController(address,address)": "7b7d6c68",
              "setPublicSwap(address,bool)": "1eccc185",
              "setSwapFee(address,uint256)": "991991c7",
              "setTokens(address,address[],uint256[],uint256[])": "e0d945bf",
              "updateWeightsGradually(address,uint256[],uint256,uint256)": "9c11bd17",
              "whitelistLiquidityProvider(address,address)": "333fbeef"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract ConfigurableRightsPool\",\"name\":\"crp\",\"type\":\"address\"},{\"internalType\":\"contract ERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmountIn\",\"type\":\"uint256\"}],\"name\":\"applyAddToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ConfigurableRightsPool\",\"name\":\"crp\",\"type\":\"address\"},{\"internalType\":\"contract ERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"denormalizedWeight\",\"type\":\"uint256\"}],\"name\":\"commitAddToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract BFactory\",\"name\":\"factory\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"balances\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"weights\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"swapFee\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"finalize\",\"type\":\"bool\"}],\"name\":\"create\",\"outputs\":[{\"internalType\":\"contract BPool\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract CRPFactory\",\"name\":\"factory\",\"type\":\"address\"},{\"internalType\":\"contract BFactory\",\"name\":\"kFactory\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"poolTokenSymbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"poolTokenName\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"constituentTokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"tokenBalances\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"tokenWeights\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"swapFee\",\"type\":\"uint256\"}],\"internalType\":\"struct ConfigurableRightsPool.PoolParams\",\"name\":\"poolParams\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minimumWeightChangeBlockPeriod\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"addTokenTimeLockInBlocks\",\"type\":\"uint256\"}],\"internalType\":\"struct ConfigurableRightsPool.CrpParams\",\"name\":\"crpParams\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"canPauseSwapping\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"canChangeSwapFee\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"canChangeWeights\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"canAddRemoveTokens\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"canWhitelistLPs\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"canChangeCap\",\"type\":\"bool\"}],\"internalType\":\"struct RightsManager.Rights\",\"name\":\"rights\",\"type\":\"tuple\"}],\"name\":\"createSmartPool\",\"outputs\":[{\"internalType\":\"contract ConfigurableRightsPool\",\"name\":\"crp\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ConfigurableRightsPool\",\"name\":\"crp\",\"type\":\"address\"},{\"internalType\":\"contract ERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"newWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"poolAmountIn\",\"type\":\"uint256\"}],\"name\":\"decreaseWeight\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract BPool\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"finalize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ConfigurableRightsPool\",\"name\":\"crp\",\"type\":\"address\"},{\"internalType\":\"contract ERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"newWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmountIn\",\"type\":\"uint256\"}],\"name\":\"increaseWeight\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract BPool\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"poolAmountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"maxAmountsIn\",\"type\":\"uint256[]\"}],\"name\":\"joinPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ConfigurableRightsPool\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"poolAmountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"maxAmountsIn\",\"type\":\"uint256[]\"}],\"name\":\"joinSmartPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract AbstractPool\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"contract ERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPoolAmountOut\",\"type\":\"uint256\"}],\"name\":\"joinswapExternAmountIn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ConfigurableRightsPool\",\"name\":\"crp\",\"type\":\"address\"},{\"internalType\":\"contract ERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"poolAmountIn\",\"type\":\"uint256\"}],\"name\":\"removeToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ConfigurableRightsPool\",\"name\":\"crp\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"}],\"name\":\"removeWhitelistedLiquidityProvider\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ConfigurableRightsPool\",\"name\":\"crp\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"newCap\",\"type\":\"uint256\"}],\"name\":\"setCap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract AbstractPool\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newController\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract AbstractPool\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"publicSwap\",\"type\":\"bool\"}],\"name\":\"setPublicSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract AbstractPool\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"newFee\",\"type\":\"uint256\"}],\"name\":\"setSwapFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract BPool\",\"name\":\"pool\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"balances\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"denorms\",\"type\":\"uint256[]\"}],\"name\":\"setTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ConfigurableRightsPool\",\"name\":\"crp\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"newWeights\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"startBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endBlock\",\"type\":\"uint256\"}],\"name\":\"updateWeightsGradually\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ConfigurableRightsPool\",\"name\":\"crp\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"}],\"name\":\"whitelistLiquidityProvider\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BActions.sol\":\"BActions\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/BActions.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\npragma solidity 0.6.12;\\n\\npragma experimental ABIEncoderV2;\\n\\nlibrary RightsManager {\\n    struct Rights {\\n        bool canPauseSwapping;\\n        bool canChangeSwapFee;\\n        bool canChangeWeights;\\n        bool canAddRemoveTokens;\\n        bool canWhitelistLPs;\\n        bool canChangeCap;\\n    }\\n}\\n\\nabstract contract ERC20 {\\n    function approve(address spender, uint amount) external virtual returns (bool);\\n    function transfer(address dst, uint amt) external virtual returns (bool);\\n    function transferFrom(address sender, address recipient, uint amount) external virtual returns (bool);\\n    function balanceOf(address whom) external view virtual returns (uint);\\n    function allowance(address, address) external view virtual returns (uint);\\n}\\n\\nabstract contract BuniOwnable {\\n    function setController(address controller) external virtual;\\n}\\n\\nabstract contract AbstractPool is ERC20, BuniOwnable {\\n    function setSwapFee(uint swapFee) external virtual;\\n    function setPublicSwap(bool public_) external virtual;\\n\\n    function joinPool(uint poolAmountOut, uint[] calldata maxAmountsIn) external virtual;\\n    function joinswapExternAmountIn(\\n        address tokenIn, uint tokenAmountIn, uint minPoolAmountOut\\n    ) external virtual returns (uint poolAmountOut);\\n}\\n\\nabstract contract BPool is AbstractPool {\\n    function finalize() external virtual;\\n    function bind(address token, uint balance, uint denorm) external virtual;\\n    function rebind(address token, uint balance, uint denorm) external virtual;\\n    function unbind(address token) external virtual;\\n    function isBound(address t) external view virtual returns (bool);\\n    function getCurrentTokens() external view virtual returns (address[] memory);\\n    function getFinalTokens() external view virtual returns(address[] memory);\\n    function getBalance(address token) external view virtual returns (uint);\\n}\\n\\nabstract contract BFactory {\\n    function newBPool() external virtual returns (BPool);\\n}\\n\\nabstract contract ConfigurableRightsPool is AbstractPool {\\n    struct PoolParams {\\n        string poolTokenSymbol;\\n        string poolTokenName;\\n        address[] constituentTokens;\\n        uint[] tokenBalances;\\n        uint[] tokenWeights;\\n        uint swapFee;\\n    }\\n\\n    struct CrpParams {\\n        uint initialSupply;\\n        uint minimumWeightChangeBlockPeriod;\\n        uint addTokenTimeLockInBlocks;\\n    }\\n\\n    function createPool(\\n        uint initialSupply, uint minimumWeightChangeBlockPeriod, uint addTokenTimeLockInBlocks\\n    ) external virtual;\\n    function createPool(uint initialSupply) external virtual;\\n    function setCap(uint newCap) external virtual;\\n    function updateWeight(address token, uint newWeight) external virtual;\\n    function updateWeightsGradually(\\n        uint[] calldata newWeights, uint startBlock, uint endBlock\\n    ) external virtual;\\n    function commitAddToken(address token, uint balance, uint denormalizedWeight) external virtual;\\n    function applyAddToken() external virtual;\\n    function removeToken(address token) external virtual;\\n    function whitelistLiquidityProvider(address provider) external virtual;\\n    function removeWhitelistedLiquidityProvider(address provider) external virtual;\\n    function bPool() external view virtual returns (BPool);\\n}\\n\\nabstract contract CRPFactory {\\n    function newCrp(\\n        address factoryAddress,\\n        ConfigurableRightsPool.PoolParams calldata params,\\n        RightsManager.Rights calldata rights\\n    ) external virtual returns (ConfigurableRightsPool);\\n}\\n/********************************** WARNING **********************************/\\n//                                                                           //\\n// This contract is only meant to be used in conjunction with ds-proxy.      //\\n// Calling this contract directly will lead to loss of funds.                //\\n//                                                                           //\\n/********************************** WARNING **********************************/\\n\\ncontract BActions {\\n\\n    // --- Pool Creation ---\\n\\n    function create(\\n        BFactory factory,\\n        address[] calldata tokens,\\n        uint[] calldata balances,\\n        uint[] calldata weights,\\n        uint swapFee,\\n        bool finalize\\n    ) external returns (BPool pool) {\\n        require(tokens.length == balances.length, \\\"ERR_LENGTH_MISMATCH\\\");\\n        require(tokens.length == weights.length, \\\"ERR_LENGTH_MISMATCH\\\");\\n\\n        pool = factory.newBPool();\\n        pool.setSwapFee(swapFee);\\n\\n        for (uint i = 0; i < tokens.length; i++) {\\n            ERC20 token = ERC20(tokens[i]);\\n            require(token.transferFrom(msg.sender, address(this), balances[i]), \\\"ERR_TRANSFER_FAILED\\\");\\n            _safeApprove(token, address(pool), balances[i]);\\n            pool.bind(tokens[i], balances[i], weights[i]);\\n        }\\n\\n        if (finalize) {\\n            pool.finalize();\\n            require(pool.transfer(msg.sender, pool.balanceOf(address(this))), \\\"ERR_TRANSFER_FAILED\\\");\\n        } else {\\n            pool.setPublicSwap(true);\\n        }\\n    }\\n\\n    function createSmartPool(\\n        CRPFactory factory,\\n        BFactory kFactory,\\n        ConfigurableRightsPool.PoolParams calldata poolParams,\\n        ConfigurableRightsPool.CrpParams calldata crpParams,\\n        RightsManager.Rights calldata rights\\n    ) external returns (ConfigurableRightsPool crp) {\\n        require(\\n            poolParams.constituentTokens.length == poolParams.tokenBalances.length,\\n            \\\"ERR_LENGTH_MISMATCH\\\"\\n        );\\n        require(\\n            poolParams.constituentTokens.length == poolParams.tokenWeights.length,\\n            \\\"ERR_LENGTH_MISMATCH\\\"\\n        );\\n\\n        crp = factory.newCrp(\\n            address(kFactory),\\n            poolParams,\\n            rights\\n        );\\n\\n        for (uint i = 0; i < poolParams.constituentTokens.length; i++) {\\n            ERC20 token = ERC20(poolParams.constituentTokens[i]);\\n            require(\\n                token.transferFrom(msg.sender, address(this), poolParams.tokenBalances[i]),\\n                \\\"ERR_TRANSFER_FAILED\\\"\\n            );\\n            _safeApprove(token, address(crp), poolParams.tokenBalances[i]);\\n        }\\n\\n        crp.createPool(\\n            crpParams.initialSupply,\\n            crpParams.minimumWeightChangeBlockPeriod,\\n            crpParams.addTokenTimeLockInBlocks\\n        );\\n        require(crp.transfer(msg.sender, crpParams.initialSupply), \\\"ERR_TRANSFER_FAILED\\\");\\n        // DSProxy instance keeps pool ownership to enable management\\n    }\\n\\n    // --- Joins ---\\n\\n    function joinPool(\\n        BPool pool,\\n        uint poolAmountOut,\\n        uint[] calldata maxAmountsIn\\n    ) external {\\n        address[] memory tokens = pool.getFinalTokens();\\n        _join(pool, tokens, poolAmountOut, maxAmountsIn);\\n    }\\n\\n    function joinSmartPool(\\n        ConfigurableRightsPool pool,\\n        uint poolAmountOut,\\n        uint[] calldata maxAmountsIn\\n    ) external {\\n        address[] memory tokens = pool.bPool().getCurrentTokens();\\n        _join(pool, tokens, poolAmountOut, maxAmountsIn);\\n    }\\n\\n    function joinswapExternAmountIn(\\n        AbstractPool pool,\\n        ERC20 token,\\n        uint tokenAmountIn,\\n        uint minPoolAmountOut\\n    ) external {\\n        require(token.transferFrom(msg.sender, address(this), tokenAmountIn), \\\"ERR_TRANSFER_FAILED\\\");\\n        _safeApprove(token, address(pool), tokenAmountIn);\\n        uint poolAmountOut = pool.joinswapExternAmountIn(address(token), tokenAmountIn, minPoolAmountOut);\\n        require(pool.transfer(msg.sender, poolAmountOut), \\\"ERR_TRANSFER_FAILED\\\");\\n    }\\n\\n    // --- Pool management (common) ---\\n\\n    function setPublicSwap(AbstractPool pool, bool publicSwap) external {\\n        pool.setPublicSwap(publicSwap);\\n    }\\n\\n    function setSwapFee(AbstractPool pool, uint newFee) external {\\n        pool.setSwapFee(newFee);\\n    }\\n\\n    function setController(AbstractPool pool, address newController) external {\\n        pool.setController(newController);\\n    }\\n\\n    // --- Private pool management ---\\n\\n    function setTokens(\\n        BPool pool,\\n        address[] calldata tokens,\\n        uint[] calldata balances,\\n        uint[] calldata denorms\\n    ) external {\\n        require(tokens.length == balances.length, \\\"ERR_LENGTH_MISMATCH\\\");\\n        require(tokens.length == denorms.length, \\\"ERR_LENGTH_MISMATCH\\\");\\n\\n        for (uint i = 0; i < tokens.length; i++) {\\n            ERC20 token = ERC20(tokens[i]);\\n            if (pool.isBound(tokens[i])) {\\n                if (balances[i] > pool.getBalance(tokens[i])) {\\n                    require(\\n                        token.transferFrom(msg.sender, address(this), balances[i] - pool.getBalance(tokens[i])),\\n                        \\\"ERR_TRANSFER_FAILED\\\"\\n                    );\\n                    _safeApprove(token, address(pool), balances[i] - pool.getBalance(tokens[i]));\\n                }\\n                if (balances[i] > 10**6) {\\n                    pool.rebind(tokens[i], balances[i], denorms[i]);\\n                } else {\\n                    pool.unbind(tokens[i]);\\n                }\\n\\n            } else {\\n                require(token.transferFrom(msg.sender, address(this), balances[i]), \\\"ERR_TRANSFER_FAILED\\\");\\n                _safeApprove(token, address(pool), balances[i]);\\n                pool.bind(tokens[i], balances[i], denorms[i]);\\n            }\\n\\n            if (token.balanceOf(address(this)) > 0) {\\n                require(token.transfer(msg.sender, token.balanceOf(address(this))), \\\"ERR_TRANSFER_FAILED\\\");\\n            }\\n\\n        }\\n    }\\n\\n    function finalize(BPool pool) external {\\n        pool.finalize();\\n        require(pool.transfer(msg.sender, pool.balanceOf(address(this))), \\\"ERR_TRANSFER_FAILED\\\");\\n    }\\n\\n    // --- Smart pool management ---\\n\\n    function increaseWeight(\\n        ConfigurableRightsPool crp,\\n        ERC20 token,\\n        uint newWeight,\\n        uint tokenAmountIn\\n    ) external {\\n        require(token.transferFrom(msg.sender, address(this), tokenAmountIn), \\\"ERR_TRANSFER_FAILED\\\");\\n        _safeApprove(token, address(crp), tokenAmountIn);\\n        crp.updateWeight(address(token), newWeight);\\n        require(crp.transfer(msg.sender, crp.balanceOf(address(this))), \\\"ERR_TRANSFER_FAILED\\\");\\n    }\\n\\n    function decreaseWeight(\\n        ConfigurableRightsPool crp,\\n        ERC20 token,\\n        uint newWeight,\\n        uint poolAmountIn\\n    ) external {\\n        require(crp.transferFrom(msg.sender, address(this), poolAmountIn), \\\"ERR_TRANSFER_FAILED\\\");\\n        crp.updateWeight(address(token), newWeight);\\n        require(token.transfer(msg.sender, token.balanceOf(address(this))), \\\"ERR_TRANSFER_FAILED\\\");\\n    }\\n\\n    function updateWeightsGradually(\\n        ConfigurableRightsPool crp,\\n        uint[] calldata newWeights,\\n        uint startBlock,\\n        uint endBlock\\n    ) external {\\n        crp.updateWeightsGradually(newWeights, startBlock, endBlock);\\n    }\\n\\n    function setCap(\\n        ConfigurableRightsPool crp,\\n        uint newCap\\n    ) external {\\n        crp.setCap(newCap);\\n    }\\n\\n    function commitAddToken(\\n        ConfigurableRightsPool crp,\\n        ERC20 token,\\n        uint balance,\\n        uint denormalizedWeight\\n    ) external {\\n        crp.commitAddToken(address(token), balance, denormalizedWeight);\\n    }\\n\\n    function applyAddToken(\\n        ConfigurableRightsPool crp,\\n        ERC20 token,\\n        uint tokenAmountIn\\n    ) external {\\n        require(token.transferFrom(msg.sender, address(this), tokenAmountIn), \\\"ERR_TRANSFER_FAILED\\\");\\n        _safeApprove(token, address(crp), tokenAmountIn);\\n        crp.applyAddToken();\\n        require(crp.transfer(msg.sender, crp.balanceOf(address(this))), \\\"ERR_TRANSFER_FAILED\\\");\\n    }\\n\\n    function removeToken(\\n        ConfigurableRightsPool crp,\\n        ERC20 token,\\n        uint poolAmountIn\\n    ) external {\\n        require(crp.transferFrom(msg.sender, address(this), poolAmountIn), \\\"ERR_TRANSFER_FAILED\\\");\\n        crp.removeToken(address(token));\\n        require(token.transfer(msg.sender, token.balanceOf(address(this))), \\\"ERR_TRANSFER_FAILED\\\");\\n    }\\n\\n    function whitelistLiquidityProvider(\\n        ConfigurableRightsPool crp,\\n        address provider\\n    ) external {\\n        crp.whitelistLiquidityProvider(provider);\\n    }\\n\\n    function removeWhitelistedLiquidityProvider(\\n        ConfigurableRightsPool crp,\\n        address provider\\n    ) external {\\n        crp.removeWhitelistedLiquidityProvider(provider);\\n    }\\n\\n    // --- Internals ---\\n\\n    function _safeApprove(ERC20 token, address spender, uint amount) internal {\\n        if (token.allowance(address(this), spender) > 0) {\\n            token.approve(spender, 0);\\n        }\\n        token.approve(spender, amount);\\n    }\\n\\n    function _join(\\n        AbstractPool pool,\\n        address[] memory tokens,\\n        uint poolAmountOut,\\n        uint[] memory maxAmountsIn\\n    ) internal {\\n        require(maxAmountsIn.length == tokens.length, \\\"ERR_LENGTH_MISMATCH\\\");\\n\\n        for (uint i = 0; i < tokens.length; i++) {\\n            ERC20 token = ERC20(tokens[i]);\\n            require(token.transferFrom(msg.sender, address(this), maxAmountsIn[i]), \\\"ERR_TRANSFER_FAILED\\\");\\n            _safeApprove(token, address(pool), maxAmountsIn[i]);\\n        }\\n        pool.joinPool(poolAmountOut, maxAmountsIn);\\n        for (uint i = 0; i < tokens.length; i++) {\\n            ERC20 token = ERC20(tokens[i]);\\n            if (token.balanceOf(address(this)) > 0) {\\n                require(token.transfer(msg.sender, token.balanceOf(address(this))), \\\"ERR_TRANSFER_FAILED\\\");\\n            }\\n        }\\n        require(pool.transfer(msg.sender, pool.balanceOf(address(this))), \\\"ERR_TRANSFER_FAILED\\\");\\n    }\\n}\\n\",\"keccak256\":\"0xb7ab283093b39140440e6f2ec01f607a14558a05aa1ae54b1459d0c2df6b96c3\",\"license\":\"GPL-3.0-or-later\"}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        },
        "BFactory": {
          "abi": [
            {
              "inputs": [],
              "name": "newBPool",
              "outputs": [
                {
                  "internalType": "contract BPool",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "devdoc": {
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "evm": {
            "bytecode": {
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "methodIdentifiers": {
              "newBPool()": "d556c5dc"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"newBPool\",\"outputs\":[{\"internalType\":\"contract BPool\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BActions.sol\":\"BFactory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/BActions.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\npragma solidity 0.6.12;\\n\\npragma experimental ABIEncoderV2;\\n\\nlibrary RightsManager {\\n    struct Rights {\\n        bool canPauseSwapping;\\n        bool canChangeSwapFee;\\n        bool canChangeWeights;\\n        bool canAddRemoveTokens;\\n        bool canWhitelistLPs;\\n        bool canChangeCap;\\n    }\\n}\\n\\nabstract contract ERC20 {\\n    function approve(address spender, uint amount) external virtual returns (bool);\\n    function transfer(address dst, uint amt) external virtual returns (bool);\\n    function transferFrom(address sender, address recipient, uint amount) external virtual returns (bool);\\n    function balanceOf(address whom) external view virtual returns (uint);\\n    function allowance(address, address) external view virtual returns (uint);\\n}\\n\\nabstract contract BuniOwnable {\\n    function setController(address controller) external virtual;\\n}\\n\\nabstract contract AbstractPool is ERC20, BuniOwnable {\\n    function setSwapFee(uint swapFee) external virtual;\\n    function setPublicSwap(bool public_) external virtual;\\n\\n    function joinPool(uint poolAmountOut, uint[] calldata maxAmountsIn) external virtual;\\n    function joinswapExternAmountIn(\\n        address tokenIn, uint tokenAmountIn, uint minPoolAmountOut\\n    ) external virtual returns (uint poolAmountOut);\\n}\\n\\nabstract contract BPool is AbstractPool {\\n    function finalize() external virtual;\\n    function bind(address token, uint balance, uint denorm) external virtual;\\n    function rebind(address token, uint balance, uint denorm) external virtual;\\n    function unbind(address token) external virtual;\\n    function isBound(address t) external view virtual returns (bool);\\n    function getCurrentTokens() external view virtual returns (address[] memory);\\n    function getFinalTokens() external view virtual returns(address[] memory);\\n    function getBalance(address token) external view virtual returns (uint);\\n}\\n\\nabstract contract BFactory {\\n    function newBPool() external virtual returns (BPool);\\n}\\n\\nabstract contract ConfigurableRightsPool is AbstractPool {\\n    struct PoolParams {\\n        string poolTokenSymbol;\\n        string poolTokenName;\\n        address[] constituentTokens;\\n        uint[] tokenBalances;\\n        uint[] tokenWeights;\\n        uint swapFee;\\n    }\\n\\n    struct CrpParams {\\n        uint initialSupply;\\n        uint minimumWeightChangeBlockPeriod;\\n        uint addTokenTimeLockInBlocks;\\n    }\\n\\n    function createPool(\\n        uint initialSupply, uint minimumWeightChangeBlockPeriod, uint addTokenTimeLockInBlocks\\n    ) external virtual;\\n    function createPool(uint initialSupply) external virtual;\\n    function setCap(uint newCap) external virtual;\\n    function updateWeight(address token, uint newWeight) external virtual;\\n    function updateWeightsGradually(\\n        uint[] calldata newWeights, uint startBlock, uint endBlock\\n    ) external virtual;\\n    function commitAddToken(address token, uint balance, uint denormalizedWeight) external virtual;\\n    function applyAddToken() external virtual;\\n    function removeToken(address token) external virtual;\\n    function whitelistLiquidityProvider(address provider) external virtual;\\n    function removeWhitelistedLiquidityProvider(address provider) external virtual;\\n    function bPool() external view virtual returns (BPool);\\n}\\n\\nabstract contract CRPFactory {\\n    function newCrp(\\n        address factoryAddress,\\n        ConfigurableRightsPool.PoolParams calldata params,\\n        RightsManager.Rights calldata rights\\n    ) external virtual returns (ConfigurableRightsPool);\\n}\\n/********************************** WARNING **********************************/\\n//                                                                           //\\n// This contract is only meant to be used in conjunction with ds-proxy.      //\\n// Calling this contract directly will lead to loss of funds.                //\\n//                                                                           //\\n/********************************** WARNING **********************************/\\n\\ncontract BActions {\\n\\n    // --- Pool Creation ---\\n\\n    function create(\\n        BFactory factory,\\n        address[] calldata tokens,\\n        uint[] calldata balances,\\n        uint[] calldata weights,\\n        uint swapFee,\\n        bool finalize\\n    ) external returns (BPool pool) {\\n        require(tokens.length == balances.length, \\\"ERR_LENGTH_MISMATCH\\\");\\n        require(tokens.length == weights.length, \\\"ERR_LENGTH_MISMATCH\\\");\\n\\n        pool = factory.newBPool();\\n        pool.setSwapFee(swapFee);\\n\\n        for (uint i = 0; i < tokens.length; i++) {\\n            ERC20 token = ERC20(tokens[i]);\\n            require(token.transferFrom(msg.sender, address(this), balances[i]), \\\"ERR_TRANSFER_FAILED\\\");\\n            _safeApprove(token, address(pool), balances[i]);\\n            pool.bind(tokens[i], balances[i], weights[i]);\\n        }\\n\\n        if (finalize) {\\n            pool.finalize();\\n            require(pool.transfer(msg.sender, pool.balanceOf(address(this))), \\\"ERR_TRANSFER_FAILED\\\");\\n        } else {\\n            pool.setPublicSwap(true);\\n        }\\n    }\\n\\n    function createSmartPool(\\n        CRPFactory factory,\\n        BFactory kFactory,\\n        ConfigurableRightsPool.PoolParams calldata poolParams,\\n        ConfigurableRightsPool.CrpParams calldata crpParams,\\n        RightsManager.Rights calldata rights\\n    ) external returns (ConfigurableRightsPool crp) {\\n        require(\\n            poolParams.constituentTokens.length == poolParams.tokenBalances.length,\\n            \\\"ERR_LENGTH_MISMATCH\\\"\\n        );\\n        require(\\n            poolParams.constituentTokens.length == poolParams.tokenWeights.length,\\n            \\\"ERR_LENGTH_MISMATCH\\\"\\n        );\\n\\n        crp = factory.newCrp(\\n            address(kFactory),\\n            poolParams,\\n            rights\\n        );\\n\\n        for (uint i = 0; i < poolParams.constituentTokens.length; i++) {\\n            ERC20 token = ERC20(poolParams.constituentTokens[i]);\\n            require(\\n                token.transferFrom(msg.sender, address(this), poolParams.tokenBalances[i]),\\n                \\\"ERR_TRANSFER_FAILED\\\"\\n            );\\n            _safeApprove(token, address(crp), poolParams.tokenBalances[i]);\\n        }\\n\\n        crp.createPool(\\n            crpParams.initialSupply,\\n            crpParams.minimumWeightChangeBlockPeriod,\\n            crpParams.addTokenTimeLockInBlocks\\n        );\\n        require(crp.transfer(msg.sender, crpParams.initialSupply), \\\"ERR_TRANSFER_FAILED\\\");\\n        // DSProxy instance keeps pool ownership to enable management\\n    }\\n\\n    // --- Joins ---\\n\\n    function joinPool(\\n        BPool pool,\\n        uint poolAmountOut,\\n        uint[] calldata maxAmountsIn\\n    ) external {\\n        address[] memory tokens = pool.getFinalTokens();\\n        _join(pool, tokens, poolAmountOut, maxAmountsIn);\\n    }\\n\\n    function joinSmartPool(\\n        ConfigurableRightsPool pool,\\n        uint poolAmountOut,\\n        uint[] calldata maxAmountsIn\\n    ) external {\\n        address[] memory tokens = pool.bPool().getCurrentTokens();\\n        _join(pool, tokens, poolAmountOut, maxAmountsIn);\\n    }\\n\\n    function joinswapExternAmountIn(\\n        AbstractPool pool,\\n        ERC20 token,\\n        uint tokenAmountIn,\\n        uint minPoolAmountOut\\n    ) external {\\n        require(token.transferFrom(msg.sender, address(this), tokenAmountIn), \\\"ERR_TRANSFER_FAILED\\\");\\n        _safeApprove(token, address(pool), tokenAmountIn);\\n        uint poolAmountOut = pool.joinswapExternAmountIn(address(token), tokenAmountIn, minPoolAmountOut);\\n        require(pool.transfer(msg.sender, poolAmountOut), \\\"ERR_TRANSFER_FAILED\\\");\\n    }\\n\\n    // --- Pool management (common) ---\\n\\n    function setPublicSwap(AbstractPool pool, bool publicSwap) external {\\n        pool.setPublicSwap(publicSwap);\\n    }\\n\\n    function setSwapFee(AbstractPool pool, uint newFee) external {\\n        pool.setSwapFee(newFee);\\n    }\\n\\n    function setController(AbstractPool pool, address newController) external {\\n        pool.setController(newController);\\n    }\\n\\n    // --- Private pool management ---\\n\\n    function setTokens(\\n        BPool pool,\\n        address[] calldata tokens,\\n        uint[] calldata balances,\\n        uint[] calldata denorms\\n    ) external {\\n        require(tokens.length == balances.length, \\\"ERR_LENGTH_MISMATCH\\\");\\n        require(tokens.length == denorms.length, \\\"ERR_LENGTH_MISMATCH\\\");\\n\\n        for (uint i = 0; i < tokens.length; i++) {\\n            ERC20 token = ERC20(tokens[i]);\\n            if (pool.isBound(tokens[i])) {\\n                if (balances[i] > pool.getBalance(tokens[i])) {\\n                    require(\\n                        token.transferFrom(msg.sender, address(this), balances[i] - pool.getBalance(tokens[i])),\\n                        \\\"ERR_TRANSFER_FAILED\\\"\\n                    );\\n                    _safeApprove(token, address(pool), balances[i] - pool.getBalance(tokens[i]));\\n                }\\n                if (balances[i] > 10**6) {\\n                    pool.rebind(tokens[i], balances[i], denorms[i]);\\n                } else {\\n                    pool.unbind(tokens[i]);\\n                }\\n\\n            } else {\\n                require(token.transferFrom(msg.sender, address(this), balances[i]), \\\"ERR_TRANSFER_FAILED\\\");\\n                _safeApprove(token, address(pool), balances[i]);\\n                pool.bind(tokens[i], balances[i], denorms[i]);\\n            }\\n\\n            if (token.balanceOf(address(this)) > 0) {\\n                require(token.transfer(msg.sender, token.balanceOf(address(this))), \\\"ERR_TRANSFER_FAILED\\\");\\n            }\\n\\n        }\\n    }\\n\\n    function finalize(BPool pool) external {\\n        pool.finalize();\\n        require(pool.transfer(msg.sender, pool.balanceOf(address(this))), \\\"ERR_TRANSFER_FAILED\\\");\\n    }\\n\\n    // --- Smart pool management ---\\n\\n    function increaseWeight(\\n        ConfigurableRightsPool crp,\\n        ERC20 token,\\n        uint newWeight,\\n        uint tokenAmountIn\\n    ) external {\\n        require(token.transferFrom(msg.sender, address(this), tokenAmountIn), \\\"ERR_TRANSFER_FAILED\\\");\\n        _safeApprove(token, address(crp), tokenAmountIn);\\n        crp.updateWeight(address(token), newWeight);\\n        require(crp.transfer(msg.sender, crp.balanceOf(address(this))), \\\"ERR_TRANSFER_FAILED\\\");\\n    }\\n\\n    function decreaseWeight(\\n        ConfigurableRightsPool crp,\\n        ERC20 token,\\n        uint newWeight,\\n        uint poolAmountIn\\n    ) external {\\n        require(crp.transferFrom(msg.sender, address(this), poolAmountIn), \\\"ERR_TRANSFER_FAILED\\\");\\n        crp.updateWeight(address(token), newWeight);\\n        require(token.transfer(msg.sender, token.balanceOf(address(this))), \\\"ERR_TRANSFER_FAILED\\\");\\n    }\\n\\n    function updateWeightsGradually(\\n        ConfigurableRightsPool crp,\\n        uint[] calldata newWeights,\\n        uint startBlock,\\n        uint endBlock\\n    ) external {\\n        crp.updateWeightsGradually(newWeights, startBlock, endBlock);\\n    }\\n\\n    function setCap(\\n        ConfigurableRightsPool crp,\\n        uint newCap\\n    ) external {\\n        crp.setCap(newCap);\\n    }\\n\\n    function commitAddToken(\\n        ConfigurableRightsPool crp,\\n        ERC20 token,\\n        uint balance,\\n        uint denormalizedWeight\\n    ) external {\\n        crp.commitAddToken(address(token), balance, denormalizedWeight);\\n    }\\n\\n    function applyAddToken(\\n        ConfigurableRightsPool crp,\\n        ERC20 token,\\n        uint tokenAmountIn\\n    ) external {\\n        require(token.transferFrom(msg.sender, address(this), tokenAmountIn), \\\"ERR_TRANSFER_FAILED\\\");\\n        _safeApprove(token, address(crp), tokenAmountIn);\\n        crp.applyAddToken();\\n        require(crp.transfer(msg.sender, crp.balanceOf(address(this))), \\\"ERR_TRANSFER_FAILED\\\");\\n    }\\n\\n    function removeToken(\\n        ConfigurableRightsPool crp,\\n        ERC20 token,\\n        uint poolAmountIn\\n    ) external {\\n        require(crp.transferFrom(msg.sender, address(this), poolAmountIn), \\\"ERR_TRANSFER_FAILED\\\");\\n        crp.removeToken(address(token));\\n        require(token.transfer(msg.sender, token.balanceOf(address(this))), \\\"ERR_TRANSFER_FAILED\\\");\\n    }\\n\\n    function whitelistLiquidityProvider(\\n        ConfigurableRightsPool crp,\\n        address provider\\n    ) external {\\n        crp.whitelistLiquidityProvider(provider);\\n    }\\n\\n    function removeWhitelistedLiquidityProvider(\\n        ConfigurableRightsPool crp,\\n        address provider\\n    ) external {\\n        crp.removeWhitelistedLiquidityProvider(provider);\\n    }\\n\\n    // --- Internals ---\\n\\n    function _safeApprove(ERC20 token, address spender, uint amount) internal {\\n        if (token.allowance(address(this), spender) > 0) {\\n            token.approve(spender, 0);\\n        }\\n        token.approve(spender, amount);\\n    }\\n\\n    function _join(\\n        AbstractPool pool,\\n        address[] memory tokens,\\n        uint poolAmountOut,\\n        uint[] memory maxAmountsIn\\n    ) internal {\\n        require(maxAmountsIn.length == tokens.length, \\\"ERR_LENGTH_MISMATCH\\\");\\n\\n        for (uint i = 0; i < tokens.length; i++) {\\n            ERC20 token = ERC20(tokens[i]);\\n            require(token.transferFrom(msg.sender, address(this), maxAmountsIn[i]), \\\"ERR_TRANSFER_FAILED\\\");\\n            _safeApprove(token, address(pool), maxAmountsIn[i]);\\n        }\\n        pool.joinPool(poolAmountOut, maxAmountsIn);\\n        for (uint i = 0; i < tokens.length; i++) {\\n            ERC20 token = ERC20(tokens[i]);\\n            if (token.balanceOf(address(this)) > 0) {\\n                require(token.transfer(msg.sender, token.balanceOf(address(this))), \\\"ERR_TRANSFER_FAILED\\\");\\n            }\\n        }\\n        require(pool.transfer(msg.sender, pool.balanceOf(address(this))), \\\"ERR_TRANSFER_FAILED\\\");\\n    }\\n}\\n\",\"keccak256\":\"0xb7ab283093b39140440e6f2ec01f607a14558a05aa1ae54b1459d0c2df6b96c3\",\"license\":\"GPL-3.0-or-later\"}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        },
        "BPool": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "whom",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "denorm",
                  "type": "uint256"
                }
              ],
              "name": "bind",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "finalize",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                }
              ],
              "name": "getBalance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getCurrentTokens",
              "outputs": [
                {
                  "internalType": "address[]",
                  "name": "",
                  "type": "address[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getFinalTokens",
              "outputs": [
                {
                  "internalType": "address[]",
                  "name": "",
                  "type": "address[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "t",
                  "type": "address"
                }
              ],
              "name": "isBound",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "poolAmountOut",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256[]",
                  "name": "maxAmountsIn",
                  "type": "uint256[]"
                }
              ],
              "name": "joinPool",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "tokenIn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenAmountIn",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minPoolAmountOut",
                  "type": "uint256"
                }
              ],
              "name": "joinswapExternAmountIn",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "poolAmountOut",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "denorm",
                  "type": "uint256"
                }
              ],
              "name": "rebind",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "controller",
                  "type": "address"
                }
              ],
              "name": "setController",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bool",
                  "name": "public_",
                  "type": "bool"
                }
              ],
              "name": "setPublicSwap",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "swapFee",
                  "type": "uint256"
                }
              ],
              "name": "setSwapFee",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "dst",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amt",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                }
              ],
              "name": "unbind",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "devdoc": {
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "evm": {
            "bytecode": {
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "bind(address,uint256,uint256)": "e4e1e538",
              "finalize()": "4bb278f3",
              "getBalance(address)": "f8b2cb4f",
              "getCurrentTokens()": "cc77828d",
              "getFinalTokens()": "be3bbd2e",
              "isBound(address)": "2f37b624",
              "joinPool(uint256,uint256[])": "4f69c0d4",
              "joinswapExternAmountIn(address,uint256,uint256)": "5db34277",
              "rebind(address,uint256,uint256)": "3fdddaa2",
              "setController(address)": "92eefe9b",
              "setPublicSwap(bool)": "49b59552",
              "setSwapFee(uint256)": "34e19907",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd",
              "unbind(address)": "cf5e7bd3"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"whom\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"denorm\",\"type\":\"uint256\"}],\"name\":\"bind\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"finalize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentTokens\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFinalTokens\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"t\",\"type\":\"address\"}],\"name\":\"isBound\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"poolAmountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"maxAmountsIn\",\"type\":\"uint256[]\"}],\"name\":\"joinPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPoolAmountOut\",\"type\":\"uint256\"}],\"name\":\"joinswapExternAmountIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"poolAmountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"denorm\",\"type\":\"uint256\"}],\"name\":\"rebind\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"controller\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"public_\",\"type\":\"bool\"}],\"name\":\"setPublicSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"swapFee\",\"type\":\"uint256\"}],\"name\":\"setSwapFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amt\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"unbind\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BActions.sol\":\"BPool\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/BActions.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\npragma solidity 0.6.12;\\n\\npragma experimental ABIEncoderV2;\\n\\nlibrary RightsManager {\\n    struct Rights {\\n        bool canPauseSwapping;\\n        bool canChangeSwapFee;\\n        bool canChangeWeights;\\n        bool canAddRemoveTokens;\\n        bool canWhitelistLPs;\\n        bool canChangeCap;\\n    }\\n}\\n\\nabstract contract ERC20 {\\n    function approve(address spender, uint amount) external virtual returns (bool);\\n    function transfer(address dst, uint amt) external virtual returns (bool);\\n    function transferFrom(address sender, address recipient, uint amount) external virtual returns (bool);\\n    function balanceOf(address whom) external view virtual returns (uint);\\n    function allowance(address, address) external view virtual returns (uint);\\n}\\n\\nabstract contract BuniOwnable {\\n    function setController(address controller) external virtual;\\n}\\n\\nabstract contract AbstractPool is ERC20, BuniOwnable {\\n    function setSwapFee(uint swapFee) external virtual;\\n    function setPublicSwap(bool public_) external virtual;\\n\\n    function joinPool(uint poolAmountOut, uint[] calldata maxAmountsIn) external virtual;\\n    function joinswapExternAmountIn(\\n        address tokenIn, uint tokenAmountIn, uint minPoolAmountOut\\n    ) external virtual returns (uint poolAmountOut);\\n}\\n\\nabstract contract BPool is AbstractPool {\\n    function finalize() external virtual;\\n    function bind(address token, uint balance, uint denorm) external virtual;\\n    function rebind(address token, uint balance, uint denorm) external virtual;\\n    function unbind(address token) external virtual;\\n    function isBound(address t) external view virtual returns (bool);\\n    function getCurrentTokens() external view virtual returns (address[] memory);\\n    function getFinalTokens() external view virtual returns(address[] memory);\\n    function getBalance(address token) external view virtual returns (uint);\\n}\\n\\nabstract contract BFactory {\\n    function newBPool() external virtual returns (BPool);\\n}\\n\\nabstract contract ConfigurableRightsPool is AbstractPool {\\n    struct PoolParams {\\n        string poolTokenSymbol;\\n        string poolTokenName;\\n        address[] constituentTokens;\\n        uint[] tokenBalances;\\n        uint[] tokenWeights;\\n        uint swapFee;\\n    }\\n\\n    struct CrpParams {\\n        uint initialSupply;\\n        uint minimumWeightChangeBlockPeriod;\\n        uint addTokenTimeLockInBlocks;\\n    }\\n\\n    function createPool(\\n        uint initialSupply, uint minimumWeightChangeBlockPeriod, uint addTokenTimeLockInBlocks\\n    ) external virtual;\\n    function createPool(uint initialSupply) external virtual;\\n    function setCap(uint newCap) external virtual;\\n    function updateWeight(address token, uint newWeight) external virtual;\\n    function updateWeightsGradually(\\n        uint[] calldata newWeights, uint startBlock, uint endBlock\\n    ) external virtual;\\n    function commitAddToken(address token, uint balance, uint denormalizedWeight) external virtual;\\n    function applyAddToken() external virtual;\\n    function removeToken(address token) external virtual;\\n    function whitelistLiquidityProvider(address provider) external virtual;\\n    function removeWhitelistedLiquidityProvider(address provider) external virtual;\\n    function bPool() external view virtual returns (BPool);\\n}\\n\\nabstract contract CRPFactory {\\n    function newCrp(\\n        address factoryAddress,\\n        ConfigurableRightsPool.PoolParams calldata params,\\n        RightsManager.Rights calldata rights\\n    ) external virtual returns (ConfigurableRightsPool);\\n}\\n/********************************** WARNING **********************************/\\n//                                                                           //\\n// This contract is only meant to be used in conjunction with ds-proxy.      //\\n// Calling this contract directly will lead to loss of funds.                //\\n//                                                                           //\\n/********************************** WARNING **********************************/\\n\\ncontract BActions {\\n\\n    // --- Pool Creation ---\\n\\n    function create(\\n        BFactory factory,\\n        address[] calldata tokens,\\n        uint[] calldata balances,\\n        uint[] calldata weights,\\n        uint swapFee,\\n        bool finalize\\n    ) external returns (BPool pool) {\\n        require(tokens.length == balances.length, \\\"ERR_LENGTH_MISMATCH\\\");\\n        require(tokens.length == weights.length, \\\"ERR_LENGTH_MISMATCH\\\");\\n\\n        pool = factory.newBPool();\\n        pool.setSwapFee(swapFee);\\n\\n        for (uint i = 0; i < tokens.length; i++) {\\n            ERC20 token = ERC20(tokens[i]);\\n            require(token.transferFrom(msg.sender, address(this), balances[i]), \\\"ERR_TRANSFER_FAILED\\\");\\n            _safeApprove(token, address(pool), balances[i]);\\n            pool.bind(tokens[i], balances[i], weights[i]);\\n        }\\n\\n        if (finalize) {\\n            pool.finalize();\\n            require(pool.transfer(msg.sender, pool.balanceOf(address(this))), \\\"ERR_TRANSFER_FAILED\\\");\\n        } else {\\n            pool.setPublicSwap(true);\\n        }\\n    }\\n\\n    function createSmartPool(\\n        CRPFactory factory,\\n        BFactory kFactory,\\n        ConfigurableRightsPool.PoolParams calldata poolParams,\\n        ConfigurableRightsPool.CrpParams calldata crpParams,\\n        RightsManager.Rights calldata rights\\n    ) external returns (ConfigurableRightsPool crp) {\\n        require(\\n            poolParams.constituentTokens.length == poolParams.tokenBalances.length,\\n            \\\"ERR_LENGTH_MISMATCH\\\"\\n        );\\n        require(\\n            poolParams.constituentTokens.length == poolParams.tokenWeights.length,\\n            \\\"ERR_LENGTH_MISMATCH\\\"\\n        );\\n\\n        crp = factory.newCrp(\\n            address(kFactory),\\n            poolParams,\\n            rights\\n        );\\n\\n        for (uint i = 0; i < poolParams.constituentTokens.length; i++) {\\n            ERC20 token = ERC20(poolParams.constituentTokens[i]);\\n            require(\\n                token.transferFrom(msg.sender, address(this), poolParams.tokenBalances[i]),\\n                \\\"ERR_TRANSFER_FAILED\\\"\\n            );\\n            _safeApprove(token, address(crp), poolParams.tokenBalances[i]);\\n        }\\n\\n        crp.createPool(\\n            crpParams.initialSupply,\\n            crpParams.minimumWeightChangeBlockPeriod,\\n            crpParams.addTokenTimeLockInBlocks\\n        );\\n        require(crp.transfer(msg.sender, crpParams.initialSupply), \\\"ERR_TRANSFER_FAILED\\\");\\n        // DSProxy instance keeps pool ownership to enable management\\n    }\\n\\n    // --- Joins ---\\n\\n    function joinPool(\\n        BPool pool,\\n        uint poolAmountOut,\\n        uint[] calldata maxAmountsIn\\n    ) external {\\n        address[] memory tokens = pool.getFinalTokens();\\n        _join(pool, tokens, poolAmountOut, maxAmountsIn);\\n    }\\n\\n    function joinSmartPool(\\n        ConfigurableRightsPool pool,\\n        uint poolAmountOut,\\n        uint[] calldata maxAmountsIn\\n    ) external {\\n        address[] memory tokens = pool.bPool().getCurrentTokens();\\n        _join(pool, tokens, poolAmountOut, maxAmountsIn);\\n    }\\n\\n    function joinswapExternAmountIn(\\n        AbstractPool pool,\\n        ERC20 token,\\n        uint tokenAmountIn,\\n        uint minPoolAmountOut\\n    ) external {\\n        require(token.transferFrom(msg.sender, address(this), tokenAmountIn), \\\"ERR_TRANSFER_FAILED\\\");\\n        _safeApprove(token, address(pool), tokenAmountIn);\\n        uint poolAmountOut = pool.joinswapExternAmountIn(address(token), tokenAmountIn, minPoolAmountOut);\\n        require(pool.transfer(msg.sender, poolAmountOut), \\\"ERR_TRANSFER_FAILED\\\");\\n    }\\n\\n    // --- Pool management (common) ---\\n\\n    function setPublicSwap(AbstractPool pool, bool publicSwap) external {\\n        pool.setPublicSwap(publicSwap);\\n    }\\n\\n    function setSwapFee(AbstractPool pool, uint newFee) external {\\n        pool.setSwapFee(newFee);\\n    }\\n\\n    function setController(AbstractPool pool, address newController) external {\\n        pool.setController(newController);\\n    }\\n\\n    // --- Private pool management ---\\n\\n    function setTokens(\\n        BPool pool,\\n        address[] calldata tokens,\\n        uint[] calldata balances,\\n        uint[] calldata denorms\\n    ) external {\\n        require(tokens.length == balances.length, \\\"ERR_LENGTH_MISMATCH\\\");\\n        require(tokens.length == denorms.length, \\\"ERR_LENGTH_MISMATCH\\\");\\n\\n        for (uint i = 0; i < tokens.length; i++) {\\n            ERC20 token = ERC20(tokens[i]);\\n            if (pool.isBound(tokens[i])) {\\n                if (balances[i] > pool.getBalance(tokens[i])) {\\n                    require(\\n                        token.transferFrom(msg.sender, address(this), balances[i] - pool.getBalance(tokens[i])),\\n                        \\\"ERR_TRANSFER_FAILED\\\"\\n                    );\\n                    _safeApprove(token, address(pool), balances[i] - pool.getBalance(tokens[i]));\\n                }\\n                if (balances[i] > 10**6) {\\n                    pool.rebind(tokens[i], balances[i], denorms[i]);\\n                } else {\\n                    pool.unbind(tokens[i]);\\n                }\\n\\n            } else {\\n                require(token.transferFrom(msg.sender, address(this), balances[i]), \\\"ERR_TRANSFER_FAILED\\\");\\n                _safeApprove(token, address(pool), balances[i]);\\n                pool.bind(tokens[i], balances[i], denorms[i]);\\n            }\\n\\n            if (token.balanceOf(address(this)) > 0) {\\n                require(token.transfer(msg.sender, token.balanceOf(address(this))), \\\"ERR_TRANSFER_FAILED\\\");\\n            }\\n\\n        }\\n    }\\n\\n    function finalize(BPool pool) external {\\n        pool.finalize();\\n        require(pool.transfer(msg.sender, pool.balanceOf(address(this))), \\\"ERR_TRANSFER_FAILED\\\");\\n    }\\n\\n    // --- Smart pool management ---\\n\\n    function increaseWeight(\\n        ConfigurableRightsPool crp,\\n        ERC20 token,\\n        uint newWeight,\\n        uint tokenAmountIn\\n    ) external {\\n        require(token.transferFrom(msg.sender, address(this), tokenAmountIn), \\\"ERR_TRANSFER_FAILED\\\");\\n        _safeApprove(token, address(crp), tokenAmountIn);\\n        crp.updateWeight(address(token), newWeight);\\n        require(crp.transfer(msg.sender, crp.balanceOf(address(this))), \\\"ERR_TRANSFER_FAILED\\\");\\n    }\\n\\n    function decreaseWeight(\\n        ConfigurableRightsPool crp,\\n        ERC20 token,\\n        uint newWeight,\\n        uint poolAmountIn\\n    ) external {\\n        require(crp.transferFrom(msg.sender, address(this), poolAmountIn), \\\"ERR_TRANSFER_FAILED\\\");\\n        crp.updateWeight(address(token), newWeight);\\n        require(token.transfer(msg.sender, token.balanceOf(address(this))), \\\"ERR_TRANSFER_FAILED\\\");\\n    }\\n\\n    function updateWeightsGradually(\\n        ConfigurableRightsPool crp,\\n        uint[] calldata newWeights,\\n        uint startBlock,\\n        uint endBlock\\n    ) external {\\n        crp.updateWeightsGradually(newWeights, startBlock, endBlock);\\n    }\\n\\n    function setCap(\\n        ConfigurableRightsPool crp,\\n        uint newCap\\n    ) external {\\n        crp.setCap(newCap);\\n    }\\n\\n    function commitAddToken(\\n        ConfigurableRightsPool crp,\\n        ERC20 token,\\n        uint balance,\\n        uint denormalizedWeight\\n    ) external {\\n        crp.commitAddToken(address(token), balance, denormalizedWeight);\\n    }\\n\\n    function applyAddToken(\\n        ConfigurableRightsPool crp,\\n        ERC20 token,\\n        uint tokenAmountIn\\n    ) external {\\n        require(token.transferFrom(msg.sender, address(this), tokenAmountIn), \\\"ERR_TRANSFER_FAILED\\\");\\n        _safeApprove(token, address(crp), tokenAmountIn);\\n        crp.applyAddToken();\\n        require(crp.transfer(msg.sender, crp.balanceOf(address(this))), \\\"ERR_TRANSFER_FAILED\\\");\\n    }\\n\\n    function removeToken(\\n        ConfigurableRightsPool crp,\\n        ERC20 token,\\n        uint poolAmountIn\\n    ) external {\\n        require(crp.transferFrom(msg.sender, address(this), poolAmountIn), \\\"ERR_TRANSFER_FAILED\\\");\\n        crp.removeToken(address(token));\\n        require(token.transfer(msg.sender, token.balanceOf(address(this))), \\\"ERR_TRANSFER_FAILED\\\");\\n    }\\n\\n    function whitelistLiquidityProvider(\\n        ConfigurableRightsPool crp,\\n        address provider\\n    ) external {\\n        crp.whitelistLiquidityProvider(provider);\\n    }\\n\\n    function removeWhitelistedLiquidityProvider(\\n        ConfigurableRightsPool crp,\\n        address provider\\n    ) external {\\n        crp.removeWhitelistedLiquidityProvider(provider);\\n    }\\n\\n    // --- Internals ---\\n\\n    function _safeApprove(ERC20 token, address spender, uint amount) internal {\\n        if (token.allowance(address(this), spender) > 0) {\\n            token.approve(spender, 0);\\n        }\\n        token.approve(spender, amount);\\n    }\\n\\n    function _join(\\n        AbstractPool pool,\\n        address[] memory tokens,\\n        uint poolAmountOut,\\n        uint[] memory maxAmountsIn\\n    ) internal {\\n        require(maxAmountsIn.length == tokens.length, \\\"ERR_LENGTH_MISMATCH\\\");\\n\\n        for (uint i = 0; i < tokens.length; i++) {\\n            ERC20 token = ERC20(tokens[i]);\\n            require(token.transferFrom(msg.sender, address(this), maxAmountsIn[i]), \\\"ERR_TRANSFER_FAILED\\\");\\n            _safeApprove(token, address(pool), maxAmountsIn[i]);\\n        }\\n        pool.joinPool(poolAmountOut, maxAmountsIn);\\n        for (uint i = 0; i < tokens.length; i++) {\\n            ERC20 token = ERC20(tokens[i]);\\n            if (token.balanceOf(address(this)) > 0) {\\n                require(token.transfer(msg.sender, token.balanceOf(address(this))), \\\"ERR_TRANSFER_FAILED\\\");\\n            }\\n        }\\n        require(pool.transfer(msg.sender, pool.balanceOf(address(this))), \\\"ERR_TRANSFER_FAILED\\\");\\n    }\\n}\\n\",\"keccak256\":\"0xb7ab283093b39140440e6f2ec01f607a14558a05aa1ae54b1459d0c2df6b96c3\",\"license\":\"GPL-3.0-or-later\"}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        },
        "BuniOwnable": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "controller",
                  "type": "address"
                }
              ],
              "name": "setController",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "devdoc": {
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "evm": {
            "bytecode": {
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "methodIdentifiers": {
              "setController(address)": "92eefe9b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"controller\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BActions.sol\":\"BuniOwnable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/BActions.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\npragma solidity 0.6.12;\\n\\npragma experimental ABIEncoderV2;\\n\\nlibrary RightsManager {\\n    struct Rights {\\n        bool canPauseSwapping;\\n        bool canChangeSwapFee;\\n        bool canChangeWeights;\\n        bool canAddRemoveTokens;\\n        bool canWhitelistLPs;\\n        bool canChangeCap;\\n    }\\n}\\n\\nabstract contract ERC20 {\\n    function approve(address spender, uint amount) external virtual returns (bool);\\n    function transfer(address dst, uint amt) external virtual returns (bool);\\n    function transferFrom(address sender, address recipient, uint amount) external virtual returns (bool);\\n    function balanceOf(address whom) external view virtual returns (uint);\\n    function allowance(address, address) external view virtual returns (uint);\\n}\\n\\nabstract contract BuniOwnable {\\n    function setController(address controller) external virtual;\\n}\\n\\nabstract contract AbstractPool is ERC20, BuniOwnable {\\n    function setSwapFee(uint swapFee) external virtual;\\n    function setPublicSwap(bool public_) external virtual;\\n\\n    function joinPool(uint poolAmountOut, uint[] calldata maxAmountsIn) external virtual;\\n    function joinswapExternAmountIn(\\n        address tokenIn, uint tokenAmountIn, uint minPoolAmountOut\\n    ) external virtual returns (uint poolAmountOut);\\n}\\n\\nabstract contract BPool is AbstractPool {\\n    function finalize() external virtual;\\n    function bind(address token, uint balance, uint denorm) external virtual;\\n    function rebind(address token, uint balance, uint denorm) external virtual;\\n    function unbind(address token) external virtual;\\n    function isBound(address t) external view virtual returns (bool);\\n    function getCurrentTokens() external view virtual returns (address[] memory);\\n    function getFinalTokens() external view virtual returns(address[] memory);\\n    function getBalance(address token) external view virtual returns (uint);\\n}\\n\\nabstract contract BFactory {\\n    function newBPool() external virtual returns (BPool);\\n}\\n\\nabstract contract ConfigurableRightsPool is AbstractPool {\\n    struct PoolParams {\\n        string poolTokenSymbol;\\n        string poolTokenName;\\n        address[] constituentTokens;\\n        uint[] tokenBalances;\\n        uint[] tokenWeights;\\n        uint swapFee;\\n    }\\n\\n    struct CrpParams {\\n        uint initialSupply;\\n        uint minimumWeightChangeBlockPeriod;\\n        uint addTokenTimeLockInBlocks;\\n    }\\n\\n    function createPool(\\n        uint initialSupply, uint minimumWeightChangeBlockPeriod, uint addTokenTimeLockInBlocks\\n    ) external virtual;\\n    function createPool(uint initialSupply) external virtual;\\n    function setCap(uint newCap) external virtual;\\n    function updateWeight(address token, uint newWeight) external virtual;\\n    function updateWeightsGradually(\\n        uint[] calldata newWeights, uint startBlock, uint endBlock\\n    ) external virtual;\\n    function commitAddToken(address token, uint balance, uint denormalizedWeight) external virtual;\\n    function applyAddToken() external virtual;\\n    function removeToken(address token) external virtual;\\n    function whitelistLiquidityProvider(address provider) external virtual;\\n    function removeWhitelistedLiquidityProvider(address provider) external virtual;\\n    function bPool() external view virtual returns (BPool);\\n}\\n\\nabstract contract CRPFactory {\\n    function newCrp(\\n        address factoryAddress,\\n        ConfigurableRightsPool.PoolParams calldata params,\\n        RightsManager.Rights calldata rights\\n    ) external virtual returns (ConfigurableRightsPool);\\n}\\n/********************************** WARNING **********************************/\\n//                                                                           //\\n// This contract is only meant to be used in conjunction with ds-proxy.      //\\n// Calling this contract directly will lead to loss of funds.                //\\n//                                                                           //\\n/********************************** WARNING **********************************/\\n\\ncontract BActions {\\n\\n    // --- Pool Creation ---\\n\\n    function create(\\n        BFactory factory,\\n        address[] calldata tokens,\\n        uint[] calldata balances,\\n        uint[] calldata weights,\\n        uint swapFee,\\n        bool finalize\\n    ) external returns (BPool pool) {\\n        require(tokens.length == balances.length, \\\"ERR_LENGTH_MISMATCH\\\");\\n        require(tokens.length == weights.length, \\\"ERR_LENGTH_MISMATCH\\\");\\n\\n        pool = factory.newBPool();\\n        pool.setSwapFee(swapFee);\\n\\n        for (uint i = 0; i < tokens.length; i++) {\\n            ERC20 token = ERC20(tokens[i]);\\n            require(token.transferFrom(msg.sender, address(this), balances[i]), \\\"ERR_TRANSFER_FAILED\\\");\\n            _safeApprove(token, address(pool), balances[i]);\\n            pool.bind(tokens[i], balances[i], weights[i]);\\n        }\\n\\n        if (finalize) {\\n            pool.finalize();\\n            require(pool.transfer(msg.sender, pool.balanceOf(address(this))), \\\"ERR_TRANSFER_FAILED\\\");\\n        } else {\\n            pool.setPublicSwap(true);\\n        }\\n    }\\n\\n    function createSmartPool(\\n        CRPFactory factory,\\n        BFactory kFactory,\\n        ConfigurableRightsPool.PoolParams calldata poolParams,\\n        ConfigurableRightsPool.CrpParams calldata crpParams,\\n        RightsManager.Rights calldata rights\\n    ) external returns (ConfigurableRightsPool crp) {\\n        require(\\n            poolParams.constituentTokens.length == poolParams.tokenBalances.length,\\n            \\\"ERR_LENGTH_MISMATCH\\\"\\n        );\\n        require(\\n            poolParams.constituentTokens.length == poolParams.tokenWeights.length,\\n            \\\"ERR_LENGTH_MISMATCH\\\"\\n        );\\n\\n        crp = factory.newCrp(\\n            address(kFactory),\\n            poolParams,\\n            rights\\n        );\\n\\n        for (uint i = 0; i < poolParams.constituentTokens.length; i++) {\\n            ERC20 token = ERC20(poolParams.constituentTokens[i]);\\n            require(\\n                token.transferFrom(msg.sender, address(this), poolParams.tokenBalances[i]),\\n                \\\"ERR_TRANSFER_FAILED\\\"\\n            );\\n            _safeApprove(token, address(crp), poolParams.tokenBalances[i]);\\n        }\\n\\n        crp.createPool(\\n            crpParams.initialSupply,\\n            crpParams.minimumWeightChangeBlockPeriod,\\n            crpParams.addTokenTimeLockInBlocks\\n        );\\n        require(crp.transfer(msg.sender, crpParams.initialSupply), \\\"ERR_TRANSFER_FAILED\\\");\\n        // DSProxy instance keeps pool ownership to enable management\\n    }\\n\\n    // --- Joins ---\\n\\n    function joinPool(\\n        BPool pool,\\n        uint poolAmountOut,\\n        uint[] calldata maxAmountsIn\\n    ) external {\\n        address[] memory tokens = pool.getFinalTokens();\\n        _join(pool, tokens, poolAmountOut, maxAmountsIn);\\n    }\\n\\n    function joinSmartPool(\\n        ConfigurableRightsPool pool,\\n        uint poolAmountOut,\\n        uint[] calldata maxAmountsIn\\n    ) external {\\n        address[] memory tokens = pool.bPool().getCurrentTokens();\\n        _join(pool, tokens, poolAmountOut, maxAmountsIn);\\n    }\\n\\n    function joinswapExternAmountIn(\\n        AbstractPool pool,\\n        ERC20 token,\\n        uint tokenAmountIn,\\n        uint minPoolAmountOut\\n    ) external {\\n        require(token.transferFrom(msg.sender, address(this), tokenAmountIn), \\\"ERR_TRANSFER_FAILED\\\");\\n        _safeApprove(token, address(pool), tokenAmountIn);\\n        uint poolAmountOut = pool.joinswapExternAmountIn(address(token), tokenAmountIn, minPoolAmountOut);\\n        require(pool.transfer(msg.sender, poolAmountOut), \\\"ERR_TRANSFER_FAILED\\\");\\n    }\\n\\n    // --- Pool management (common) ---\\n\\n    function setPublicSwap(AbstractPool pool, bool publicSwap) external {\\n        pool.setPublicSwap(publicSwap);\\n    }\\n\\n    function setSwapFee(AbstractPool pool, uint newFee) external {\\n        pool.setSwapFee(newFee);\\n    }\\n\\n    function setController(AbstractPool pool, address newController) external {\\n        pool.setController(newController);\\n    }\\n\\n    // --- Private pool management ---\\n\\n    function setTokens(\\n        BPool pool,\\n        address[] calldata tokens,\\n        uint[] calldata balances,\\n        uint[] calldata denorms\\n    ) external {\\n        require(tokens.length == balances.length, \\\"ERR_LENGTH_MISMATCH\\\");\\n        require(tokens.length == denorms.length, \\\"ERR_LENGTH_MISMATCH\\\");\\n\\n        for (uint i = 0; i < tokens.length; i++) {\\n            ERC20 token = ERC20(tokens[i]);\\n            if (pool.isBound(tokens[i])) {\\n                if (balances[i] > pool.getBalance(tokens[i])) {\\n                    require(\\n                        token.transferFrom(msg.sender, address(this), balances[i] - pool.getBalance(tokens[i])),\\n                        \\\"ERR_TRANSFER_FAILED\\\"\\n                    );\\n                    _safeApprove(token, address(pool), balances[i] - pool.getBalance(tokens[i]));\\n                }\\n                if (balances[i] > 10**6) {\\n                    pool.rebind(tokens[i], balances[i], denorms[i]);\\n                } else {\\n                    pool.unbind(tokens[i]);\\n                }\\n\\n            } else {\\n                require(token.transferFrom(msg.sender, address(this), balances[i]), \\\"ERR_TRANSFER_FAILED\\\");\\n                _safeApprove(token, address(pool), balances[i]);\\n                pool.bind(tokens[i], balances[i], denorms[i]);\\n            }\\n\\n            if (token.balanceOf(address(this)) > 0) {\\n                require(token.transfer(msg.sender, token.balanceOf(address(this))), \\\"ERR_TRANSFER_FAILED\\\");\\n            }\\n\\n        }\\n    }\\n\\n    function finalize(BPool pool) external {\\n        pool.finalize();\\n        require(pool.transfer(msg.sender, pool.balanceOf(address(this))), \\\"ERR_TRANSFER_FAILED\\\");\\n    }\\n\\n    // --- Smart pool management ---\\n\\n    function increaseWeight(\\n        ConfigurableRightsPool crp,\\n        ERC20 token,\\n        uint newWeight,\\n        uint tokenAmountIn\\n    ) external {\\n        require(token.transferFrom(msg.sender, address(this), tokenAmountIn), \\\"ERR_TRANSFER_FAILED\\\");\\n        _safeApprove(token, address(crp), tokenAmountIn);\\n        crp.updateWeight(address(token), newWeight);\\n        require(crp.transfer(msg.sender, crp.balanceOf(address(this))), \\\"ERR_TRANSFER_FAILED\\\");\\n    }\\n\\n    function decreaseWeight(\\n        ConfigurableRightsPool crp,\\n        ERC20 token,\\n        uint newWeight,\\n        uint poolAmountIn\\n    ) external {\\n        require(crp.transferFrom(msg.sender, address(this), poolAmountIn), \\\"ERR_TRANSFER_FAILED\\\");\\n        crp.updateWeight(address(token), newWeight);\\n        require(token.transfer(msg.sender, token.balanceOf(address(this))), \\\"ERR_TRANSFER_FAILED\\\");\\n    }\\n\\n    function updateWeightsGradually(\\n        ConfigurableRightsPool crp,\\n        uint[] calldata newWeights,\\n        uint startBlock,\\n        uint endBlock\\n    ) external {\\n        crp.updateWeightsGradually(newWeights, startBlock, endBlock);\\n    }\\n\\n    function setCap(\\n        ConfigurableRightsPool crp,\\n        uint newCap\\n    ) external {\\n        crp.setCap(newCap);\\n    }\\n\\n    function commitAddToken(\\n        ConfigurableRightsPool crp,\\n        ERC20 token,\\n        uint balance,\\n        uint denormalizedWeight\\n    ) external {\\n        crp.commitAddToken(address(token), balance, denormalizedWeight);\\n    }\\n\\n    function applyAddToken(\\n        ConfigurableRightsPool crp,\\n        ERC20 token,\\n        uint tokenAmountIn\\n    ) external {\\n        require(token.transferFrom(msg.sender, address(this), tokenAmountIn), \\\"ERR_TRANSFER_FAILED\\\");\\n        _safeApprove(token, address(crp), tokenAmountIn);\\n        crp.applyAddToken();\\n        require(crp.transfer(msg.sender, crp.balanceOf(address(this))), \\\"ERR_TRANSFER_FAILED\\\");\\n    }\\n\\n    function removeToken(\\n        ConfigurableRightsPool crp,\\n        ERC20 token,\\n        uint poolAmountIn\\n    ) external {\\n        require(crp.transferFrom(msg.sender, address(this), poolAmountIn), \\\"ERR_TRANSFER_FAILED\\\");\\n        crp.removeToken(address(token));\\n        require(token.transfer(msg.sender, token.balanceOf(address(this))), \\\"ERR_TRANSFER_FAILED\\\");\\n    }\\n\\n    function whitelistLiquidityProvider(\\n        ConfigurableRightsPool crp,\\n        address provider\\n    ) external {\\n        crp.whitelistLiquidityProvider(provider);\\n    }\\n\\n    function removeWhitelistedLiquidityProvider(\\n        ConfigurableRightsPool crp,\\n        address provider\\n    ) external {\\n        crp.removeWhitelistedLiquidityProvider(provider);\\n    }\\n\\n    // --- Internals ---\\n\\n    function _safeApprove(ERC20 token, address spender, uint amount) internal {\\n        if (token.allowance(address(this), spender) > 0) {\\n            token.approve(spender, 0);\\n        }\\n        token.approve(spender, amount);\\n    }\\n\\n    function _join(\\n        AbstractPool pool,\\n        address[] memory tokens,\\n        uint poolAmountOut,\\n        uint[] memory maxAmountsIn\\n    ) internal {\\n        require(maxAmountsIn.length == tokens.length, \\\"ERR_LENGTH_MISMATCH\\\");\\n\\n        for (uint i = 0; i < tokens.length; i++) {\\n            ERC20 token = ERC20(tokens[i]);\\n            require(token.transferFrom(msg.sender, address(this), maxAmountsIn[i]), \\\"ERR_TRANSFER_FAILED\\\");\\n            _safeApprove(token, address(pool), maxAmountsIn[i]);\\n        }\\n        pool.joinPool(poolAmountOut, maxAmountsIn);\\n        for (uint i = 0; i < tokens.length; i++) {\\n            ERC20 token = ERC20(tokens[i]);\\n            if (token.balanceOf(address(this)) > 0) {\\n                require(token.transfer(msg.sender, token.balanceOf(address(this))), \\\"ERR_TRANSFER_FAILED\\\");\\n            }\\n        }\\n        require(pool.transfer(msg.sender, pool.balanceOf(address(this))), \\\"ERR_TRANSFER_FAILED\\\");\\n    }\\n}\\n\",\"keccak256\":\"0xb7ab283093b39140440e6f2ec01f607a14558a05aa1ae54b1459d0c2df6b96c3\",\"license\":\"GPL-3.0-or-later\"}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        },
        "CRPFactory": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "factoryAddress",
                  "type": "address"
                },
                {
                  "components": [
                    {
                      "internalType": "string",
                      "name": "poolTokenSymbol",
                      "type": "string"
                    },
                    {
                      "internalType": "string",
                      "name": "poolTokenName",
                      "type": "string"
                    },
                    {
                      "internalType": "address[]",
                      "name": "constituentTokens",
                      "type": "address[]"
                    },
                    {
                      "internalType": "uint256[]",
                      "name": "tokenBalances",
                      "type": "uint256[]"
                    },
                    {
                      "internalType": "uint256[]",
                      "name": "tokenWeights",
                      "type": "uint256[]"
                    },
                    {
                      "internalType": "uint256",
                      "name": "swapFee",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct ConfigurableRightsPool.PoolParams",
                  "name": "params",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "bool",
                      "name": "canPauseSwapping",
                      "type": "bool"
                    },
                    {
                      "internalType": "bool",
                      "name": "canChangeSwapFee",
                      "type": "bool"
                    },
                    {
                      "internalType": "bool",
                      "name": "canChangeWeights",
                      "type": "bool"
                    },
                    {
                      "internalType": "bool",
                      "name": "canAddRemoveTokens",
                      "type": "bool"
                    },
                    {
                      "internalType": "bool",
                      "name": "canWhitelistLPs",
                      "type": "bool"
                    },
                    {
                      "internalType": "bool",
                      "name": "canChangeCap",
                      "type": "bool"
                    }
                  ],
                  "internalType": "struct RightsManager.Rights",
                  "name": "rights",
                  "type": "tuple"
                }
              ],
              "name": "newCrp",
              "outputs": [
                {
                  "internalType": "contract ConfigurableRightsPool",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "devdoc": {
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "evm": {
            "bytecode": {
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "methodIdentifiers": {
              "newCrp(address,(string,string,address[],uint256[],uint256[],uint256),(bool,bool,bool,bool,bool,bool))": "4420002b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"factoryAddress\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"poolTokenSymbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"poolTokenName\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"constituentTokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"tokenBalances\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"tokenWeights\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"swapFee\",\"type\":\"uint256\"}],\"internalType\":\"struct ConfigurableRightsPool.PoolParams\",\"name\":\"params\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"canPauseSwapping\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"canChangeSwapFee\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"canChangeWeights\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"canAddRemoveTokens\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"canWhitelistLPs\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"canChangeCap\",\"type\":\"bool\"}],\"internalType\":\"struct RightsManager.Rights\",\"name\":\"rights\",\"type\":\"tuple\"}],\"name\":\"newCrp\",\"outputs\":[{\"internalType\":\"contract ConfigurableRightsPool\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BActions.sol\":\"CRPFactory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/BActions.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\npragma solidity 0.6.12;\\n\\npragma experimental ABIEncoderV2;\\n\\nlibrary RightsManager {\\n    struct Rights {\\n        bool canPauseSwapping;\\n        bool canChangeSwapFee;\\n        bool canChangeWeights;\\n        bool canAddRemoveTokens;\\n        bool canWhitelistLPs;\\n        bool canChangeCap;\\n    }\\n}\\n\\nabstract contract ERC20 {\\n    function approve(address spender, uint amount) external virtual returns (bool);\\n    function transfer(address dst, uint amt) external virtual returns (bool);\\n    function transferFrom(address sender, address recipient, uint amount) external virtual returns (bool);\\n    function balanceOf(address whom) external view virtual returns (uint);\\n    function allowance(address, address) external view virtual returns (uint);\\n}\\n\\nabstract contract BuniOwnable {\\n    function setController(address controller) external virtual;\\n}\\n\\nabstract contract AbstractPool is ERC20, BuniOwnable {\\n    function setSwapFee(uint swapFee) external virtual;\\n    function setPublicSwap(bool public_) external virtual;\\n\\n    function joinPool(uint poolAmountOut, uint[] calldata maxAmountsIn) external virtual;\\n    function joinswapExternAmountIn(\\n        address tokenIn, uint tokenAmountIn, uint minPoolAmountOut\\n    ) external virtual returns (uint poolAmountOut);\\n}\\n\\nabstract contract BPool is AbstractPool {\\n    function finalize() external virtual;\\n    function bind(address token, uint balance, uint denorm) external virtual;\\n    function rebind(address token, uint balance, uint denorm) external virtual;\\n    function unbind(address token) external virtual;\\n    function isBound(address t) external view virtual returns (bool);\\n    function getCurrentTokens() external view virtual returns (address[] memory);\\n    function getFinalTokens() external view virtual returns(address[] memory);\\n    function getBalance(address token) external view virtual returns (uint);\\n}\\n\\nabstract contract BFactory {\\n    function newBPool() external virtual returns (BPool);\\n}\\n\\nabstract contract ConfigurableRightsPool is AbstractPool {\\n    struct PoolParams {\\n        string poolTokenSymbol;\\n        string poolTokenName;\\n        address[] constituentTokens;\\n        uint[] tokenBalances;\\n        uint[] tokenWeights;\\n        uint swapFee;\\n    }\\n\\n    struct CrpParams {\\n        uint initialSupply;\\n        uint minimumWeightChangeBlockPeriod;\\n        uint addTokenTimeLockInBlocks;\\n    }\\n\\n    function createPool(\\n        uint initialSupply, uint minimumWeightChangeBlockPeriod, uint addTokenTimeLockInBlocks\\n    ) external virtual;\\n    function createPool(uint initialSupply) external virtual;\\n    function setCap(uint newCap) external virtual;\\n    function updateWeight(address token, uint newWeight) external virtual;\\n    function updateWeightsGradually(\\n        uint[] calldata newWeights, uint startBlock, uint endBlock\\n    ) external virtual;\\n    function commitAddToken(address token, uint balance, uint denormalizedWeight) external virtual;\\n    function applyAddToken() external virtual;\\n    function removeToken(address token) external virtual;\\n    function whitelistLiquidityProvider(address provider) external virtual;\\n    function removeWhitelistedLiquidityProvider(address provider) external virtual;\\n    function bPool() external view virtual returns (BPool);\\n}\\n\\nabstract contract CRPFactory {\\n    function newCrp(\\n        address factoryAddress,\\n        ConfigurableRightsPool.PoolParams calldata params,\\n        RightsManager.Rights calldata rights\\n    ) external virtual returns (ConfigurableRightsPool);\\n}\\n/********************************** WARNING **********************************/\\n//                                                                           //\\n// This contract is only meant to be used in conjunction with ds-proxy.      //\\n// Calling this contract directly will lead to loss of funds.                //\\n//                                                                           //\\n/********************************** WARNING **********************************/\\n\\ncontract BActions {\\n\\n    // --- Pool Creation ---\\n\\n    function create(\\n        BFactory factory,\\n        address[] calldata tokens,\\n        uint[] calldata balances,\\n        uint[] calldata weights,\\n        uint swapFee,\\n        bool finalize\\n    ) external returns (BPool pool) {\\n        require(tokens.length == balances.length, \\\"ERR_LENGTH_MISMATCH\\\");\\n        require(tokens.length == weights.length, \\\"ERR_LENGTH_MISMATCH\\\");\\n\\n        pool = factory.newBPool();\\n        pool.setSwapFee(swapFee);\\n\\n        for (uint i = 0; i < tokens.length; i++) {\\n            ERC20 token = ERC20(tokens[i]);\\n            require(token.transferFrom(msg.sender, address(this), balances[i]), \\\"ERR_TRANSFER_FAILED\\\");\\n            _safeApprove(token, address(pool), balances[i]);\\n            pool.bind(tokens[i], balances[i], weights[i]);\\n        }\\n\\n        if (finalize) {\\n            pool.finalize();\\n            require(pool.transfer(msg.sender, pool.balanceOf(address(this))), \\\"ERR_TRANSFER_FAILED\\\");\\n        } else {\\n            pool.setPublicSwap(true);\\n        }\\n    }\\n\\n    function createSmartPool(\\n        CRPFactory factory,\\n        BFactory kFactory,\\n        ConfigurableRightsPool.PoolParams calldata poolParams,\\n        ConfigurableRightsPool.CrpParams calldata crpParams,\\n        RightsManager.Rights calldata rights\\n    ) external returns (ConfigurableRightsPool crp) {\\n        require(\\n            poolParams.constituentTokens.length == poolParams.tokenBalances.length,\\n            \\\"ERR_LENGTH_MISMATCH\\\"\\n        );\\n        require(\\n            poolParams.constituentTokens.length == poolParams.tokenWeights.length,\\n            \\\"ERR_LENGTH_MISMATCH\\\"\\n        );\\n\\n        crp = factory.newCrp(\\n            address(kFactory),\\n            poolParams,\\n            rights\\n        );\\n\\n        for (uint i = 0; i < poolParams.constituentTokens.length; i++) {\\n            ERC20 token = ERC20(poolParams.constituentTokens[i]);\\n            require(\\n                token.transferFrom(msg.sender, address(this), poolParams.tokenBalances[i]),\\n                \\\"ERR_TRANSFER_FAILED\\\"\\n            );\\n            _safeApprove(token, address(crp), poolParams.tokenBalances[i]);\\n        }\\n\\n        crp.createPool(\\n            crpParams.initialSupply,\\n            crpParams.minimumWeightChangeBlockPeriod,\\n            crpParams.addTokenTimeLockInBlocks\\n        );\\n        require(crp.transfer(msg.sender, crpParams.initialSupply), \\\"ERR_TRANSFER_FAILED\\\");\\n        // DSProxy instance keeps pool ownership to enable management\\n    }\\n\\n    // --- Joins ---\\n\\n    function joinPool(\\n        BPool pool,\\n        uint poolAmountOut,\\n        uint[] calldata maxAmountsIn\\n    ) external {\\n        address[] memory tokens = pool.getFinalTokens();\\n        _join(pool, tokens, poolAmountOut, maxAmountsIn);\\n    }\\n\\n    function joinSmartPool(\\n        ConfigurableRightsPool pool,\\n        uint poolAmountOut,\\n        uint[] calldata maxAmountsIn\\n    ) external {\\n        address[] memory tokens = pool.bPool().getCurrentTokens();\\n        _join(pool, tokens, poolAmountOut, maxAmountsIn);\\n    }\\n\\n    function joinswapExternAmountIn(\\n        AbstractPool pool,\\n        ERC20 token,\\n        uint tokenAmountIn,\\n        uint minPoolAmountOut\\n    ) external {\\n        require(token.transferFrom(msg.sender, address(this), tokenAmountIn), \\\"ERR_TRANSFER_FAILED\\\");\\n        _safeApprove(token, address(pool), tokenAmountIn);\\n        uint poolAmountOut = pool.joinswapExternAmountIn(address(token), tokenAmountIn, minPoolAmountOut);\\n        require(pool.transfer(msg.sender, poolAmountOut), \\\"ERR_TRANSFER_FAILED\\\");\\n    }\\n\\n    // --- Pool management (common) ---\\n\\n    function setPublicSwap(AbstractPool pool, bool publicSwap) external {\\n        pool.setPublicSwap(publicSwap);\\n    }\\n\\n    function setSwapFee(AbstractPool pool, uint newFee) external {\\n        pool.setSwapFee(newFee);\\n    }\\n\\n    function setController(AbstractPool pool, address newController) external {\\n        pool.setController(newController);\\n    }\\n\\n    // --- Private pool management ---\\n\\n    function setTokens(\\n        BPool pool,\\n        address[] calldata tokens,\\n        uint[] calldata balances,\\n        uint[] calldata denorms\\n    ) external {\\n        require(tokens.length == balances.length, \\\"ERR_LENGTH_MISMATCH\\\");\\n        require(tokens.length == denorms.length, \\\"ERR_LENGTH_MISMATCH\\\");\\n\\n        for (uint i = 0; i < tokens.length; i++) {\\n            ERC20 token = ERC20(tokens[i]);\\n            if (pool.isBound(tokens[i])) {\\n                if (balances[i] > pool.getBalance(tokens[i])) {\\n                    require(\\n                        token.transferFrom(msg.sender, address(this), balances[i] - pool.getBalance(tokens[i])),\\n                        \\\"ERR_TRANSFER_FAILED\\\"\\n                    );\\n                    _safeApprove(token, address(pool), balances[i] - pool.getBalance(tokens[i]));\\n                }\\n                if (balances[i] > 10**6) {\\n                    pool.rebind(tokens[i], balances[i], denorms[i]);\\n                } else {\\n                    pool.unbind(tokens[i]);\\n                }\\n\\n            } else {\\n                require(token.transferFrom(msg.sender, address(this), balances[i]), \\\"ERR_TRANSFER_FAILED\\\");\\n                _safeApprove(token, address(pool), balances[i]);\\n                pool.bind(tokens[i], balances[i], denorms[i]);\\n            }\\n\\n            if (token.balanceOf(address(this)) > 0) {\\n                require(token.transfer(msg.sender, token.balanceOf(address(this))), \\\"ERR_TRANSFER_FAILED\\\");\\n            }\\n\\n        }\\n    }\\n\\n    function finalize(BPool pool) external {\\n        pool.finalize();\\n        require(pool.transfer(msg.sender, pool.balanceOf(address(this))), \\\"ERR_TRANSFER_FAILED\\\");\\n    }\\n\\n    // --- Smart pool management ---\\n\\n    function increaseWeight(\\n        ConfigurableRightsPool crp,\\n        ERC20 token,\\n        uint newWeight,\\n        uint tokenAmountIn\\n    ) external {\\n        require(token.transferFrom(msg.sender, address(this), tokenAmountIn), \\\"ERR_TRANSFER_FAILED\\\");\\n        _safeApprove(token, address(crp), tokenAmountIn);\\n        crp.updateWeight(address(token), newWeight);\\n        require(crp.transfer(msg.sender, crp.balanceOf(address(this))), \\\"ERR_TRANSFER_FAILED\\\");\\n    }\\n\\n    function decreaseWeight(\\n        ConfigurableRightsPool crp,\\n        ERC20 token,\\n        uint newWeight,\\n        uint poolAmountIn\\n    ) external {\\n        require(crp.transferFrom(msg.sender, address(this), poolAmountIn), \\\"ERR_TRANSFER_FAILED\\\");\\n        crp.updateWeight(address(token), newWeight);\\n        require(token.transfer(msg.sender, token.balanceOf(address(this))), \\\"ERR_TRANSFER_FAILED\\\");\\n    }\\n\\n    function updateWeightsGradually(\\n        ConfigurableRightsPool crp,\\n        uint[] calldata newWeights,\\n        uint startBlock,\\n        uint endBlock\\n    ) external {\\n        crp.updateWeightsGradually(newWeights, startBlock, endBlock);\\n    }\\n\\n    function setCap(\\n        ConfigurableRightsPool crp,\\n        uint newCap\\n    ) external {\\n        crp.setCap(newCap);\\n    }\\n\\n    function commitAddToken(\\n        ConfigurableRightsPool crp,\\n        ERC20 token,\\n        uint balance,\\n        uint denormalizedWeight\\n    ) external {\\n        crp.commitAddToken(address(token), balance, denormalizedWeight);\\n    }\\n\\n    function applyAddToken(\\n        ConfigurableRightsPool crp,\\n        ERC20 token,\\n        uint tokenAmountIn\\n    ) external {\\n        require(token.transferFrom(msg.sender, address(this), tokenAmountIn), \\\"ERR_TRANSFER_FAILED\\\");\\n        _safeApprove(token, address(crp), tokenAmountIn);\\n        crp.applyAddToken();\\n        require(crp.transfer(msg.sender, crp.balanceOf(address(this))), \\\"ERR_TRANSFER_FAILED\\\");\\n    }\\n\\n    function removeToken(\\n        ConfigurableRightsPool crp,\\n        ERC20 token,\\n        uint poolAmountIn\\n    ) external {\\n        require(crp.transferFrom(msg.sender, address(this), poolAmountIn), \\\"ERR_TRANSFER_FAILED\\\");\\n        crp.removeToken(address(token));\\n        require(token.transfer(msg.sender, token.balanceOf(address(this))), \\\"ERR_TRANSFER_FAILED\\\");\\n    }\\n\\n    function whitelistLiquidityProvider(\\n        ConfigurableRightsPool crp,\\n        address provider\\n    ) external {\\n        crp.whitelistLiquidityProvider(provider);\\n    }\\n\\n    function removeWhitelistedLiquidityProvider(\\n        ConfigurableRightsPool crp,\\n        address provider\\n    ) external {\\n        crp.removeWhitelistedLiquidityProvider(provider);\\n    }\\n\\n    // --- Internals ---\\n\\n    function _safeApprove(ERC20 token, address spender, uint amount) internal {\\n        if (token.allowance(address(this), spender) > 0) {\\n            token.approve(spender, 0);\\n        }\\n        token.approve(spender, amount);\\n    }\\n\\n    function _join(\\n        AbstractPool pool,\\n        address[] memory tokens,\\n        uint poolAmountOut,\\n        uint[] memory maxAmountsIn\\n    ) internal {\\n        require(maxAmountsIn.length == tokens.length, \\\"ERR_LENGTH_MISMATCH\\\");\\n\\n        for (uint i = 0; i < tokens.length; i++) {\\n            ERC20 token = ERC20(tokens[i]);\\n            require(token.transferFrom(msg.sender, address(this), maxAmountsIn[i]), \\\"ERR_TRANSFER_FAILED\\\");\\n            _safeApprove(token, address(pool), maxAmountsIn[i]);\\n        }\\n        pool.joinPool(poolAmountOut, maxAmountsIn);\\n        for (uint i = 0; i < tokens.length; i++) {\\n            ERC20 token = ERC20(tokens[i]);\\n            if (token.balanceOf(address(this)) > 0) {\\n                require(token.transfer(msg.sender, token.balanceOf(address(this))), \\\"ERR_TRANSFER_FAILED\\\");\\n            }\\n        }\\n        require(pool.transfer(msg.sender, pool.balanceOf(address(this))), \\\"ERR_TRANSFER_FAILED\\\");\\n    }\\n}\\n\",\"keccak256\":\"0xb7ab283093b39140440e6f2ec01f607a14558a05aa1ae54b1459d0c2df6b96c3\",\"license\":\"GPL-3.0-or-later\"}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        },
        "ConfigurableRightsPool": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "applyAddToken",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "bPool",
              "outputs": [
                {
                  "internalType": "contract BPool",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "whom",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "denormalizedWeight",
                  "type": "uint256"
                }
              ],
              "name": "commitAddToken",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "initialSupply",
                  "type": "uint256"
                }
              ],
              "name": "createPool",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "initialSupply",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minimumWeightChangeBlockPeriod",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "addTokenTimeLockInBlocks",
                  "type": "uint256"
                }
              ],
              "name": "createPool",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "poolAmountOut",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256[]",
                  "name": "maxAmountsIn",
                  "type": "uint256[]"
                }
              ],
              "name": "joinPool",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "tokenIn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenAmountIn",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "minPoolAmountOut",
                  "type": "uint256"
                }
              ],
              "name": "joinswapExternAmountIn",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "poolAmountOut",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                }
              ],
              "name": "removeToken",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "provider",
                  "type": "address"
                }
              ],
              "name": "removeWhitelistedLiquidityProvider",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "newCap",
                  "type": "uint256"
                }
              ],
              "name": "setCap",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "controller",
                  "type": "address"
                }
              ],
              "name": "setController",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bool",
                  "name": "public_",
                  "type": "bool"
                }
              ],
              "name": "setPublicSwap",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "swapFee",
                  "type": "uint256"
                }
              ],
              "name": "setSwapFee",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "dst",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amt",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "newWeight",
                  "type": "uint256"
                }
              ],
              "name": "updateWeight",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256[]",
                  "name": "newWeights",
                  "type": "uint256[]"
                },
                {
                  "internalType": "uint256",
                  "name": "startBlock",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endBlock",
                  "type": "uint256"
                }
              ],
              "name": "updateWeightsGradually",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "provider",
                  "type": "address"
                }
              ],
              "name": "whitelistLiquidityProvider",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "devdoc": {
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "evm": {
            "bytecode": {
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "applyAddToken()": "c275d81b",
              "approve(address,uint256)": "095ea7b3",
              "bPool()": "b64ef17b",
              "balanceOf(address)": "70a08231",
              "commitAddToken(address,uint256,uint256)": "4c20d209",
              "createPool(uint256)": "8259e6a0",
              "createPool(uint256,uint256,uint256)": "c3391d27",
              "joinPool(uint256,uint256[])": "4f69c0d4",
              "joinswapExternAmountIn(address,uint256,uint256)": "5db34277",
              "removeToken(address)": "5fa7b584",
              "removeWhitelistedLiquidityProvider(address)": "e2762d4b",
              "setCap(uint256)": "47786d37",
              "setController(address)": "92eefe9b",
              "setPublicSwap(bool)": "49b59552",
              "setSwapFee(uint256)": "34e19907",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd",
              "updateWeight(address,uint256)": "9776e94b",
              "updateWeightsGradually(uint256[],uint256,uint256)": "246bc19b",
              "whitelistLiquidityProvider(address)": "c83a1c2d"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"applyAddToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bPool\",\"outputs\":[{\"internalType\":\"contract BPool\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"whom\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"denormalizedWeight\",\"type\":\"uint256\"}],\"name\":\"commitAddToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"}],\"name\":\"createPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minimumWeightChangeBlockPeriod\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"addTokenTimeLockInBlocks\",\"type\":\"uint256\"}],\"name\":\"createPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"poolAmountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"maxAmountsIn\",\"type\":\"uint256[]\"}],\"name\":\"joinPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minPoolAmountOut\",\"type\":\"uint256\"}],\"name\":\"joinswapExternAmountIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"poolAmountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"removeToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"}],\"name\":\"removeWhitelistedLiquidityProvider\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newCap\",\"type\":\"uint256\"}],\"name\":\"setCap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"controller\",\"type\":\"address\"}],\"name\":\"setController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"public_\",\"type\":\"bool\"}],\"name\":\"setPublicSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"swapFee\",\"type\":\"uint256\"}],\"name\":\"setSwapFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amt\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"newWeight\",\"type\":\"uint256\"}],\"name\":\"updateWeight\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"newWeights\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"startBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endBlock\",\"type\":\"uint256\"}],\"name\":\"updateWeightsGradually\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"}],\"name\":\"whitelistLiquidityProvider\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BActions.sol\":\"ConfigurableRightsPool\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/BActions.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\npragma solidity 0.6.12;\\n\\npragma experimental ABIEncoderV2;\\n\\nlibrary RightsManager {\\n    struct Rights {\\n        bool canPauseSwapping;\\n        bool canChangeSwapFee;\\n        bool canChangeWeights;\\n        bool canAddRemoveTokens;\\n        bool canWhitelistLPs;\\n        bool canChangeCap;\\n    }\\n}\\n\\nabstract contract ERC20 {\\n    function approve(address spender, uint amount) external virtual returns (bool);\\n    function transfer(address dst, uint amt) external virtual returns (bool);\\n    function transferFrom(address sender, address recipient, uint amount) external virtual returns (bool);\\n    function balanceOf(address whom) external view virtual returns (uint);\\n    function allowance(address, address) external view virtual returns (uint);\\n}\\n\\nabstract contract BuniOwnable {\\n    function setController(address controller) external virtual;\\n}\\n\\nabstract contract AbstractPool is ERC20, BuniOwnable {\\n    function setSwapFee(uint swapFee) external virtual;\\n    function setPublicSwap(bool public_) external virtual;\\n\\n    function joinPool(uint poolAmountOut, uint[] calldata maxAmountsIn) external virtual;\\n    function joinswapExternAmountIn(\\n        address tokenIn, uint tokenAmountIn, uint minPoolAmountOut\\n    ) external virtual returns (uint poolAmountOut);\\n}\\n\\nabstract contract BPool is AbstractPool {\\n    function finalize() external virtual;\\n    function bind(address token, uint balance, uint denorm) external virtual;\\n    function rebind(address token, uint balance, uint denorm) external virtual;\\n    function unbind(address token) external virtual;\\n    function isBound(address t) external view virtual returns (bool);\\n    function getCurrentTokens() external view virtual returns (address[] memory);\\n    function getFinalTokens() external view virtual returns(address[] memory);\\n    function getBalance(address token) external view virtual returns (uint);\\n}\\n\\nabstract contract BFactory {\\n    function newBPool() external virtual returns (BPool);\\n}\\n\\nabstract contract ConfigurableRightsPool is AbstractPool {\\n    struct PoolParams {\\n        string poolTokenSymbol;\\n        string poolTokenName;\\n        address[] constituentTokens;\\n        uint[] tokenBalances;\\n        uint[] tokenWeights;\\n        uint swapFee;\\n    }\\n\\n    struct CrpParams {\\n        uint initialSupply;\\n        uint minimumWeightChangeBlockPeriod;\\n        uint addTokenTimeLockInBlocks;\\n    }\\n\\n    function createPool(\\n        uint initialSupply, uint minimumWeightChangeBlockPeriod, uint addTokenTimeLockInBlocks\\n    ) external virtual;\\n    function createPool(uint initialSupply) external virtual;\\n    function setCap(uint newCap) external virtual;\\n    function updateWeight(address token, uint newWeight) external virtual;\\n    function updateWeightsGradually(\\n        uint[] calldata newWeights, uint startBlock, uint endBlock\\n    ) external virtual;\\n    function commitAddToken(address token, uint balance, uint denormalizedWeight) external virtual;\\n    function applyAddToken() external virtual;\\n    function removeToken(address token) external virtual;\\n    function whitelistLiquidityProvider(address provider) external virtual;\\n    function removeWhitelistedLiquidityProvider(address provider) external virtual;\\n    function bPool() external view virtual returns (BPool);\\n}\\n\\nabstract contract CRPFactory {\\n    function newCrp(\\n        address factoryAddress,\\n        ConfigurableRightsPool.PoolParams calldata params,\\n        RightsManager.Rights calldata rights\\n    ) external virtual returns (ConfigurableRightsPool);\\n}\\n/********************************** WARNING **********************************/\\n//                                                                           //\\n// This contract is only meant to be used in conjunction with ds-proxy.      //\\n// Calling this contract directly will lead to loss of funds.                //\\n//                                                                           //\\n/********************************** WARNING **********************************/\\n\\ncontract BActions {\\n\\n    // --- Pool Creation ---\\n\\n    function create(\\n        BFactory factory,\\n        address[] calldata tokens,\\n        uint[] calldata balances,\\n        uint[] calldata weights,\\n        uint swapFee,\\n        bool finalize\\n    ) external returns (BPool pool) {\\n        require(tokens.length == balances.length, \\\"ERR_LENGTH_MISMATCH\\\");\\n        require(tokens.length == weights.length, \\\"ERR_LENGTH_MISMATCH\\\");\\n\\n        pool = factory.newBPool();\\n        pool.setSwapFee(swapFee);\\n\\n        for (uint i = 0; i < tokens.length; i++) {\\n            ERC20 token = ERC20(tokens[i]);\\n            require(token.transferFrom(msg.sender, address(this), balances[i]), \\\"ERR_TRANSFER_FAILED\\\");\\n            _safeApprove(token, address(pool), balances[i]);\\n            pool.bind(tokens[i], balances[i], weights[i]);\\n        }\\n\\n        if (finalize) {\\n            pool.finalize();\\n            require(pool.transfer(msg.sender, pool.balanceOf(address(this))), \\\"ERR_TRANSFER_FAILED\\\");\\n        } else {\\n            pool.setPublicSwap(true);\\n        }\\n    }\\n\\n    function createSmartPool(\\n        CRPFactory factory,\\n        BFactory kFactory,\\n        ConfigurableRightsPool.PoolParams calldata poolParams,\\n        ConfigurableRightsPool.CrpParams calldata crpParams,\\n        RightsManager.Rights calldata rights\\n    ) external returns (ConfigurableRightsPool crp) {\\n        require(\\n            poolParams.constituentTokens.length == poolParams.tokenBalances.length,\\n            \\\"ERR_LENGTH_MISMATCH\\\"\\n        );\\n        require(\\n            poolParams.constituentTokens.length == poolParams.tokenWeights.length,\\n            \\\"ERR_LENGTH_MISMATCH\\\"\\n        );\\n\\n        crp = factory.newCrp(\\n            address(kFactory),\\n            poolParams,\\n            rights\\n        );\\n\\n        for (uint i = 0; i < poolParams.constituentTokens.length; i++) {\\n            ERC20 token = ERC20(poolParams.constituentTokens[i]);\\n            require(\\n                token.transferFrom(msg.sender, address(this), poolParams.tokenBalances[i]),\\n                \\\"ERR_TRANSFER_FAILED\\\"\\n            );\\n            _safeApprove(token, address(crp), poolParams.tokenBalances[i]);\\n        }\\n\\n        crp.createPool(\\n            crpParams.initialSupply,\\n            crpParams.minimumWeightChangeBlockPeriod,\\n            crpParams.addTokenTimeLockInBlocks\\n        );\\n        require(crp.transfer(msg.sender, crpParams.initialSupply), \\\"ERR_TRANSFER_FAILED\\\");\\n        // DSProxy instance keeps pool ownership to enable management\\n    }\\n\\n    // --- Joins ---\\n\\n    function joinPool(\\n        BPool pool,\\n        uint poolAmountOut,\\n        uint[] calldata maxAmountsIn\\n    ) external {\\n        address[] memory tokens = pool.getFinalTokens();\\n        _join(pool, tokens, poolAmountOut, maxAmountsIn);\\n    }\\n\\n    function joinSmartPool(\\n        ConfigurableRightsPool pool,\\n        uint poolAmountOut,\\n        uint[] calldata maxAmountsIn\\n    ) external {\\n        address[] memory tokens = pool.bPool().getCurrentTokens();\\n        _join(pool, tokens, poolAmountOut, maxAmountsIn);\\n    }\\n\\n    function joinswapExternAmountIn(\\n        AbstractPool pool,\\n        ERC20 token,\\n        uint tokenAmountIn,\\n        uint minPoolAmountOut\\n    ) external {\\n        require(token.transferFrom(msg.sender, address(this), tokenAmountIn), \\\"ERR_TRANSFER_FAILED\\\");\\n        _safeApprove(token, address(pool), tokenAmountIn);\\n        uint poolAmountOut = pool.joinswapExternAmountIn(address(token), tokenAmountIn, minPoolAmountOut);\\n        require(pool.transfer(msg.sender, poolAmountOut), \\\"ERR_TRANSFER_FAILED\\\");\\n    }\\n\\n    // --- Pool management (common) ---\\n\\n    function setPublicSwap(AbstractPool pool, bool publicSwap) external {\\n        pool.setPublicSwap(publicSwap);\\n    }\\n\\n    function setSwapFee(AbstractPool pool, uint newFee) external {\\n        pool.setSwapFee(newFee);\\n    }\\n\\n    function setController(AbstractPool pool, address newController) external {\\n        pool.setController(newController);\\n    }\\n\\n    // --- Private pool management ---\\n\\n    function setTokens(\\n        BPool pool,\\n        address[] calldata tokens,\\n        uint[] calldata balances,\\n        uint[] calldata denorms\\n    ) external {\\n        require(tokens.length == balances.length, \\\"ERR_LENGTH_MISMATCH\\\");\\n        require(tokens.length == denorms.length, \\\"ERR_LENGTH_MISMATCH\\\");\\n\\n        for (uint i = 0; i < tokens.length; i++) {\\n            ERC20 token = ERC20(tokens[i]);\\n            if (pool.isBound(tokens[i])) {\\n                if (balances[i] > pool.getBalance(tokens[i])) {\\n                    require(\\n                        token.transferFrom(msg.sender, address(this), balances[i] - pool.getBalance(tokens[i])),\\n                        \\\"ERR_TRANSFER_FAILED\\\"\\n                    );\\n                    _safeApprove(token, address(pool), balances[i] - pool.getBalance(tokens[i]));\\n                }\\n                if (balances[i] > 10**6) {\\n                    pool.rebind(tokens[i], balances[i], denorms[i]);\\n                } else {\\n                    pool.unbind(tokens[i]);\\n                }\\n\\n            } else {\\n                require(token.transferFrom(msg.sender, address(this), balances[i]), \\\"ERR_TRANSFER_FAILED\\\");\\n                _safeApprove(token, address(pool), balances[i]);\\n                pool.bind(tokens[i], balances[i], denorms[i]);\\n            }\\n\\n            if (token.balanceOf(address(this)) > 0) {\\n                require(token.transfer(msg.sender, token.balanceOf(address(this))), \\\"ERR_TRANSFER_FAILED\\\");\\n            }\\n\\n        }\\n    }\\n\\n    function finalize(BPool pool) external {\\n        pool.finalize();\\n        require(pool.transfer(msg.sender, pool.balanceOf(address(this))), \\\"ERR_TRANSFER_FAILED\\\");\\n    }\\n\\n    // --- Smart pool management ---\\n\\n    function increaseWeight(\\n        ConfigurableRightsPool crp,\\n        ERC20 token,\\n        uint newWeight,\\n        uint tokenAmountIn\\n    ) external {\\n        require(token.transferFrom(msg.sender, address(this), tokenAmountIn), \\\"ERR_TRANSFER_FAILED\\\");\\n        _safeApprove(token, address(crp), tokenAmountIn);\\n        crp.updateWeight(address(token), newWeight);\\n        require(crp.transfer(msg.sender, crp.balanceOf(address(this))), \\\"ERR_TRANSFER_FAILED\\\");\\n    }\\n\\n    function decreaseWeight(\\n        ConfigurableRightsPool crp,\\n        ERC20 token,\\n        uint newWeight,\\n        uint poolAmountIn\\n    ) external {\\n        require(crp.transferFrom(msg.sender, address(this), poolAmountIn), \\\"ERR_TRANSFER_FAILED\\\");\\n        crp.updateWeight(address(token), newWeight);\\n        require(token.transfer(msg.sender, token.balanceOf(address(this))), \\\"ERR_TRANSFER_FAILED\\\");\\n    }\\n\\n    function updateWeightsGradually(\\n        ConfigurableRightsPool crp,\\n        uint[] calldata newWeights,\\n        uint startBlock,\\n        uint endBlock\\n    ) external {\\n        crp.updateWeightsGradually(newWeights, startBlock, endBlock);\\n    }\\n\\n    function setCap(\\n        ConfigurableRightsPool crp,\\n        uint newCap\\n    ) external {\\n        crp.setCap(newCap);\\n    }\\n\\n    function commitAddToken(\\n        ConfigurableRightsPool crp,\\n        ERC20 token,\\n        uint balance,\\n        uint denormalizedWeight\\n    ) external {\\n        crp.commitAddToken(address(token), balance, denormalizedWeight);\\n    }\\n\\n    function applyAddToken(\\n        ConfigurableRightsPool crp,\\n        ERC20 token,\\n        uint tokenAmountIn\\n    ) external {\\n        require(token.transferFrom(msg.sender, address(this), tokenAmountIn), \\\"ERR_TRANSFER_FAILED\\\");\\n        _safeApprove(token, address(crp), tokenAmountIn);\\n        crp.applyAddToken();\\n        require(crp.transfer(msg.sender, crp.balanceOf(address(this))), \\\"ERR_TRANSFER_FAILED\\\");\\n    }\\n\\n    function removeToken(\\n        ConfigurableRightsPool crp,\\n        ERC20 token,\\n        uint poolAmountIn\\n    ) external {\\n        require(crp.transferFrom(msg.sender, address(this), poolAmountIn), \\\"ERR_TRANSFER_FAILED\\\");\\n        crp.removeToken(address(token));\\n        require(token.transfer(msg.sender, token.balanceOf(address(this))), \\\"ERR_TRANSFER_FAILED\\\");\\n    }\\n\\n    function whitelistLiquidityProvider(\\n        ConfigurableRightsPool crp,\\n        address provider\\n    ) external {\\n        crp.whitelistLiquidityProvider(provider);\\n    }\\n\\n    function removeWhitelistedLiquidityProvider(\\n        ConfigurableRightsPool crp,\\n        address provider\\n    ) external {\\n        crp.removeWhitelistedLiquidityProvider(provider);\\n    }\\n\\n    // --- Internals ---\\n\\n    function _safeApprove(ERC20 token, address spender, uint amount) internal {\\n        if (token.allowance(address(this), spender) > 0) {\\n            token.approve(spender, 0);\\n        }\\n        token.approve(spender, amount);\\n    }\\n\\n    function _join(\\n        AbstractPool pool,\\n        address[] memory tokens,\\n        uint poolAmountOut,\\n        uint[] memory maxAmountsIn\\n    ) internal {\\n        require(maxAmountsIn.length == tokens.length, \\\"ERR_LENGTH_MISMATCH\\\");\\n\\n        for (uint i = 0; i < tokens.length; i++) {\\n            ERC20 token = ERC20(tokens[i]);\\n            require(token.transferFrom(msg.sender, address(this), maxAmountsIn[i]), \\\"ERR_TRANSFER_FAILED\\\");\\n            _safeApprove(token, address(pool), maxAmountsIn[i]);\\n        }\\n        pool.joinPool(poolAmountOut, maxAmountsIn);\\n        for (uint i = 0; i < tokens.length; i++) {\\n            ERC20 token = ERC20(tokens[i]);\\n            if (token.balanceOf(address(this)) > 0) {\\n                require(token.transfer(msg.sender, token.balanceOf(address(this))), \\\"ERR_TRANSFER_FAILED\\\");\\n            }\\n        }\\n        require(pool.transfer(msg.sender, pool.balanceOf(address(this))), \\\"ERR_TRANSFER_FAILED\\\");\\n    }\\n}\\n\",\"keccak256\":\"0xb7ab283093b39140440e6f2ec01f607a14558a05aa1ae54b1459d0c2df6b96c3\",\"license\":\"GPL-3.0-or-later\"}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        },
        "ERC20": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "whom",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "dst",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amt",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "devdoc": {
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "evm": {
            "bytecode": {
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"whom\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amt\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BActions.sol\":\"ERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/BActions.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\npragma solidity 0.6.12;\\n\\npragma experimental ABIEncoderV2;\\n\\nlibrary RightsManager {\\n    struct Rights {\\n        bool canPauseSwapping;\\n        bool canChangeSwapFee;\\n        bool canChangeWeights;\\n        bool canAddRemoveTokens;\\n        bool canWhitelistLPs;\\n        bool canChangeCap;\\n    }\\n}\\n\\nabstract contract ERC20 {\\n    function approve(address spender, uint amount) external virtual returns (bool);\\n    function transfer(address dst, uint amt) external virtual returns (bool);\\n    function transferFrom(address sender, address recipient, uint amount) external virtual returns (bool);\\n    function balanceOf(address whom) external view virtual returns (uint);\\n    function allowance(address, address) external view virtual returns (uint);\\n}\\n\\nabstract contract BuniOwnable {\\n    function setController(address controller) external virtual;\\n}\\n\\nabstract contract AbstractPool is ERC20, BuniOwnable {\\n    function setSwapFee(uint swapFee) external virtual;\\n    function setPublicSwap(bool public_) external virtual;\\n\\n    function joinPool(uint poolAmountOut, uint[] calldata maxAmountsIn) external virtual;\\n    function joinswapExternAmountIn(\\n        address tokenIn, uint tokenAmountIn, uint minPoolAmountOut\\n    ) external virtual returns (uint poolAmountOut);\\n}\\n\\nabstract contract BPool is AbstractPool {\\n    function finalize() external virtual;\\n    function bind(address token, uint balance, uint denorm) external virtual;\\n    function rebind(address token, uint balance, uint denorm) external virtual;\\n    function unbind(address token) external virtual;\\n    function isBound(address t) external view virtual returns (bool);\\n    function getCurrentTokens() external view virtual returns (address[] memory);\\n    function getFinalTokens() external view virtual returns(address[] memory);\\n    function getBalance(address token) external view virtual returns (uint);\\n}\\n\\nabstract contract BFactory {\\n    function newBPool() external virtual returns (BPool);\\n}\\n\\nabstract contract ConfigurableRightsPool is AbstractPool {\\n    struct PoolParams {\\n        string poolTokenSymbol;\\n        string poolTokenName;\\n        address[] constituentTokens;\\n        uint[] tokenBalances;\\n        uint[] tokenWeights;\\n        uint swapFee;\\n    }\\n\\n    struct CrpParams {\\n        uint initialSupply;\\n        uint minimumWeightChangeBlockPeriod;\\n        uint addTokenTimeLockInBlocks;\\n    }\\n\\n    function createPool(\\n        uint initialSupply, uint minimumWeightChangeBlockPeriod, uint addTokenTimeLockInBlocks\\n    ) external virtual;\\n    function createPool(uint initialSupply) external virtual;\\n    function setCap(uint newCap) external virtual;\\n    function updateWeight(address token, uint newWeight) external virtual;\\n    function updateWeightsGradually(\\n        uint[] calldata newWeights, uint startBlock, uint endBlock\\n    ) external virtual;\\n    function commitAddToken(address token, uint balance, uint denormalizedWeight) external virtual;\\n    function applyAddToken() external virtual;\\n    function removeToken(address token) external virtual;\\n    function whitelistLiquidityProvider(address provider) external virtual;\\n    function removeWhitelistedLiquidityProvider(address provider) external virtual;\\n    function bPool() external view virtual returns (BPool);\\n}\\n\\nabstract contract CRPFactory {\\n    function newCrp(\\n        address factoryAddress,\\n        ConfigurableRightsPool.PoolParams calldata params,\\n        RightsManager.Rights calldata rights\\n    ) external virtual returns (ConfigurableRightsPool);\\n}\\n/********************************** WARNING **********************************/\\n//                                                                           //\\n// This contract is only meant to be used in conjunction with ds-proxy.      //\\n// Calling this contract directly will lead to loss of funds.                //\\n//                                                                           //\\n/********************************** WARNING **********************************/\\n\\ncontract BActions {\\n\\n    // --- Pool Creation ---\\n\\n    function create(\\n        BFactory factory,\\n        address[] calldata tokens,\\n        uint[] calldata balances,\\n        uint[] calldata weights,\\n        uint swapFee,\\n        bool finalize\\n    ) external returns (BPool pool) {\\n        require(tokens.length == balances.length, \\\"ERR_LENGTH_MISMATCH\\\");\\n        require(tokens.length == weights.length, \\\"ERR_LENGTH_MISMATCH\\\");\\n\\n        pool = factory.newBPool();\\n        pool.setSwapFee(swapFee);\\n\\n        for (uint i = 0; i < tokens.length; i++) {\\n            ERC20 token = ERC20(tokens[i]);\\n            require(token.transferFrom(msg.sender, address(this), balances[i]), \\\"ERR_TRANSFER_FAILED\\\");\\n            _safeApprove(token, address(pool), balances[i]);\\n            pool.bind(tokens[i], balances[i], weights[i]);\\n        }\\n\\n        if (finalize) {\\n            pool.finalize();\\n            require(pool.transfer(msg.sender, pool.balanceOf(address(this))), \\\"ERR_TRANSFER_FAILED\\\");\\n        } else {\\n            pool.setPublicSwap(true);\\n        }\\n    }\\n\\n    function createSmartPool(\\n        CRPFactory factory,\\n        BFactory kFactory,\\n        ConfigurableRightsPool.PoolParams calldata poolParams,\\n        ConfigurableRightsPool.CrpParams calldata crpParams,\\n        RightsManager.Rights calldata rights\\n    ) external returns (ConfigurableRightsPool crp) {\\n        require(\\n            poolParams.constituentTokens.length == poolParams.tokenBalances.length,\\n            \\\"ERR_LENGTH_MISMATCH\\\"\\n        );\\n        require(\\n            poolParams.constituentTokens.length == poolParams.tokenWeights.length,\\n            \\\"ERR_LENGTH_MISMATCH\\\"\\n        );\\n\\n        crp = factory.newCrp(\\n            address(kFactory),\\n            poolParams,\\n            rights\\n        );\\n\\n        for (uint i = 0; i < poolParams.constituentTokens.length; i++) {\\n            ERC20 token = ERC20(poolParams.constituentTokens[i]);\\n            require(\\n                token.transferFrom(msg.sender, address(this), poolParams.tokenBalances[i]),\\n                \\\"ERR_TRANSFER_FAILED\\\"\\n            );\\n            _safeApprove(token, address(crp), poolParams.tokenBalances[i]);\\n        }\\n\\n        crp.createPool(\\n            crpParams.initialSupply,\\n            crpParams.minimumWeightChangeBlockPeriod,\\n            crpParams.addTokenTimeLockInBlocks\\n        );\\n        require(crp.transfer(msg.sender, crpParams.initialSupply), \\\"ERR_TRANSFER_FAILED\\\");\\n        // DSProxy instance keeps pool ownership to enable management\\n    }\\n\\n    // --- Joins ---\\n\\n    function joinPool(\\n        BPool pool,\\n        uint poolAmountOut,\\n        uint[] calldata maxAmountsIn\\n    ) external {\\n        address[] memory tokens = pool.getFinalTokens();\\n        _join(pool, tokens, poolAmountOut, maxAmountsIn);\\n    }\\n\\n    function joinSmartPool(\\n        ConfigurableRightsPool pool,\\n        uint poolAmountOut,\\n        uint[] calldata maxAmountsIn\\n    ) external {\\n        address[] memory tokens = pool.bPool().getCurrentTokens();\\n        _join(pool, tokens, poolAmountOut, maxAmountsIn);\\n    }\\n\\n    function joinswapExternAmountIn(\\n        AbstractPool pool,\\n        ERC20 token,\\n        uint tokenAmountIn,\\n        uint minPoolAmountOut\\n    ) external {\\n        require(token.transferFrom(msg.sender, address(this), tokenAmountIn), \\\"ERR_TRANSFER_FAILED\\\");\\n        _safeApprove(token, address(pool), tokenAmountIn);\\n        uint poolAmountOut = pool.joinswapExternAmountIn(address(token), tokenAmountIn, minPoolAmountOut);\\n        require(pool.transfer(msg.sender, poolAmountOut), \\\"ERR_TRANSFER_FAILED\\\");\\n    }\\n\\n    // --- Pool management (common) ---\\n\\n    function setPublicSwap(AbstractPool pool, bool publicSwap) external {\\n        pool.setPublicSwap(publicSwap);\\n    }\\n\\n    function setSwapFee(AbstractPool pool, uint newFee) external {\\n        pool.setSwapFee(newFee);\\n    }\\n\\n    function setController(AbstractPool pool, address newController) external {\\n        pool.setController(newController);\\n    }\\n\\n    // --- Private pool management ---\\n\\n    function setTokens(\\n        BPool pool,\\n        address[] calldata tokens,\\n        uint[] calldata balances,\\n        uint[] calldata denorms\\n    ) external {\\n        require(tokens.length == balances.length, \\\"ERR_LENGTH_MISMATCH\\\");\\n        require(tokens.length == denorms.length, \\\"ERR_LENGTH_MISMATCH\\\");\\n\\n        for (uint i = 0; i < tokens.length; i++) {\\n            ERC20 token = ERC20(tokens[i]);\\n            if (pool.isBound(tokens[i])) {\\n                if (balances[i] > pool.getBalance(tokens[i])) {\\n                    require(\\n                        token.transferFrom(msg.sender, address(this), balances[i] - pool.getBalance(tokens[i])),\\n                        \\\"ERR_TRANSFER_FAILED\\\"\\n                    );\\n                    _safeApprove(token, address(pool), balances[i] - pool.getBalance(tokens[i]));\\n                }\\n                if (balances[i] > 10**6) {\\n                    pool.rebind(tokens[i], balances[i], denorms[i]);\\n                } else {\\n                    pool.unbind(tokens[i]);\\n                }\\n\\n            } else {\\n                require(token.transferFrom(msg.sender, address(this), balances[i]), \\\"ERR_TRANSFER_FAILED\\\");\\n                _safeApprove(token, address(pool), balances[i]);\\n                pool.bind(tokens[i], balances[i], denorms[i]);\\n            }\\n\\n            if (token.balanceOf(address(this)) > 0) {\\n                require(token.transfer(msg.sender, token.balanceOf(address(this))), \\\"ERR_TRANSFER_FAILED\\\");\\n            }\\n\\n        }\\n    }\\n\\n    function finalize(BPool pool) external {\\n        pool.finalize();\\n        require(pool.transfer(msg.sender, pool.balanceOf(address(this))), \\\"ERR_TRANSFER_FAILED\\\");\\n    }\\n\\n    // --- Smart pool management ---\\n\\n    function increaseWeight(\\n        ConfigurableRightsPool crp,\\n        ERC20 token,\\n        uint newWeight,\\n        uint tokenAmountIn\\n    ) external {\\n        require(token.transferFrom(msg.sender, address(this), tokenAmountIn), \\\"ERR_TRANSFER_FAILED\\\");\\n        _safeApprove(token, address(crp), tokenAmountIn);\\n        crp.updateWeight(address(token), newWeight);\\n        require(crp.transfer(msg.sender, crp.balanceOf(address(this))), \\\"ERR_TRANSFER_FAILED\\\");\\n    }\\n\\n    function decreaseWeight(\\n        ConfigurableRightsPool crp,\\n        ERC20 token,\\n        uint newWeight,\\n        uint poolAmountIn\\n    ) external {\\n        require(crp.transferFrom(msg.sender, address(this), poolAmountIn), \\\"ERR_TRANSFER_FAILED\\\");\\n        crp.updateWeight(address(token), newWeight);\\n        require(token.transfer(msg.sender, token.balanceOf(address(this))), \\\"ERR_TRANSFER_FAILED\\\");\\n    }\\n\\n    function updateWeightsGradually(\\n        ConfigurableRightsPool crp,\\n        uint[] calldata newWeights,\\n        uint startBlock,\\n        uint endBlock\\n    ) external {\\n        crp.updateWeightsGradually(newWeights, startBlock, endBlock);\\n    }\\n\\n    function setCap(\\n        ConfigurableRightsPool crp,\\n        uint newCap\\n    ) external {\\n        crp.setCap(newCap);\\n    }\\n\\n    function commitAddToken(\\n        ConfigurableRightsPool crp,\\n        ERC20 token,\\n        uint balance,\\n        uint denormalizedWeight\\n    ) external {\\n        crp.commitAddToken(address(token), balance, denormalizedWeight);\\n    }\\n\\n    function applyAddToken(\\n        ConfigurableRightsPool crp,\\n        ERC20 token,\\n        uint tokenAmountIn\\n    ) external {\\n        require(token.transferFrom(msg.sender, address(this), tokenAmountIn), \\\"ERR_TRANSFER_FAILED\\\");\\n        _safeApprove(token, address(crp), tokenAmountIn);\\n        crp.applyAddToken();\\n        require(crp.transfer(msg.sender, crp.balanceOf(address(this))), \\\"ERR_TRANSFER_FAILED\\\");\\n    }\\n\\n    function removeToken(\\n        ConfigurableRightsPool crp,\\n        ERC20 token,\\n        uint poolAmountIn\\n    ) external {\\n        require(crp.transferFrom(msg.sender, address(this), poolAmountIn), \\\"ERR_TRANSFER_FAILED\\\");\\n        crp.removeToken(address(token));\\n        require(token.transfer(msg.sender, token.balanceOf(address(this))), \\\"ERR_TRANSFER_FAILED\\\");\\n    }\\n\\n    function whitelistLiquidityProvider(\\n        ConfigurableRightsPool crp,\\n        address provider\\n    ) external {\\n        crp.whitelistLiquidityProvider(provider);\\n    }\\n\\n    function removeWhitelistedLiquidityProvider(\\n        ConfigurableRightsPool crp,\\n        address provider\\n    ) external {\\n        crp.removeWhitelistedLiquidityProvider(provider);\\n    }\\n\\n    // --- Internals ---\\n\\n    function _safeApprove(ERC20 token, address spender, uint amount) internal {\\n        if (token.allowance(address(this), spender) > 0) {\\n            token.approve(spender, 0);\\n        }\\n        token.approve(spender, amount);\\n    }\\n\\n    function _join(\\n        AbstractPool pool,\\n        address[] memory tokens,\\n        uint poolAmountOut,\\n        uint[] memory maxAmountsIn\\n    ) internal {\\n        require(maxAmountsIn.length == tokens.length, \\\"ERR_LENGTH_MISMATCH\\\");\\n\\n        for (uint i = 0; i < tokens.length; i++) {\\n            ERC20 token = ERC20(tokens[i]);\\n            require(token.transferFrom(msg.sender, address(this), maxAmountsIn[i]), \\\"ERR_TRANSFER_FAILED\\\");\\n            _safeApprove(token, address(pool), maxAmountsIn[i]);\\n        }\\n        pool.joinPool(poolAmountOut, maxAmountsIn);\\n        for (uint i = 0; i < tokens.length; i++) {\\n            ERC20 token = ERC20(tokens[i]);\\n            if (token.balanceOf(address(this)) > 0) {\\n                require(token.transfer(msg.sender, token.balanceOf(address(this))), \\\"ERR_TRANSFER_FAILED\\\");\\n            }\\n        }\\n        require(pool.transfer(msg.sender, pool.balanceOf(address(this))), \\\"ERR_TRANSFER_FAILED\\\");\\n    }\\n}\\n\",\"keccak256\":\"0xb7ab283093b39140440e6f2ec01f607a14558a05aa1ae54b1459d0c2df6b96c3\",\"license\":\"GPL-3.0-or-later\"}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        },
        "RightsManager": {
          "abi": [],
          "devdoc": {
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "evm": {
            "bytecode": {
              "linkReferences": {},
              "object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b0934a5df6d5d95d2c86fd25c4bbd9fc4fddc7b96a4cc6b5b987ab8fe0d93caf64736f6c634300060c0033",
              "opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB0 SWAP4 0x4A 0x5D 0xF6 0xD5 0xD9 0x5D 0x2C DUP7 REVERT 0x25 0xC4 0xBB 0xD9 0xFC 0x4F 0xDD 0xC7 0xB9 PUSH11 0x4CC6B5B987AB8FE0D93CAF PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
              "sourceMap": "105:234:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "immutableReferences": {},
              "linkReferences": {},
              "object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b0934a5df6d5d95d2c86fd25c4bbd9fc4fddc7b96a4cc6b5b987ab8fe0d93caf64736f6c634300060c0033",
              "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB0 SWAP4 0x4A 0x5D 0xF6 0xD5 0xD9 0x5D 0x2C DUP7 REVERT 0x25 0xC4 0xBB 0xD9 0xFC 0x4F 0xDD 0xC7 0xB9 PUSH11 0x4CC6B5B987AB8FE0D93CAF PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
              "sourceMap": "105:234:0:-:0;;;;;;;;"
            },
            "gasEstimates": {
              "creation": {
                "codeDepositCost": "17200",
                "executionCost": "97",
                "totalCost": "17297"
              }
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BActions.sol\":\"RightsManager\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/BActions.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-or-later\\npragma solidity 0.6.12;\\n\\npragma experimental ABIEncoderV2;\\n\\nlibrary RightsManager {\\n    struct Rights {\\n        bool canPauseSwapping;\\n        bool canChangeSwapFee;\\n        bool canChangeWeights;\\n        bool canAddRemoveTokens;\\n        bool canWhitelistLPs;\\n        bool canChangeCap;\\n    }\\n}\\n\\nabstract contract ERC20 {\\n    function approve(address spender, uint amount) external virtual returns (bool);\\n    function transfer(address dst, uint amt) external virtual returns (bool);\\n    function transferFrom(address sender, address recipient, uint amount) external virtual returns (bool);\\n    function balanceOf(address whom) external view virtual returns (uint);\\n    function allowance(address, address) external view virtual returns (uint);\\n}\\n\\nabstract contract BuniOwnable {\\n    function setController(address controller) external virtual;\\n}\\n\\nabstract contract AbstractPool is ERC20, BuniOwnable {\\n    function setSwapFee(uint swapFee) external virtual;\\n    function setPublicSwap(bool public_) external virtual;\\n\\n    function joinPool(uint poolAmountOut, uint[] calldata maxAmountsIn) external virtual;\\n    function joinswapExternAmountIn(\\n        address tokenIn, uint tokenAmountIn, uint minPoolAmountOut\\n    ) external virtual returns (uint poolAmountOut);\\n}\\n\\nabstract contract BPool is AbstractPool {\\n    function finalize() external virtual;\\n    function bind(address token, uint balance, uint denorm) external virtual;\\n    function rebind(address token, uint balance, uint denorm) external virtual;\\n    function unbind(address token) external virtual;\\n    function isBound(address t) external view virtual returns (bool);\\n    function getCurrentTokens() external view virtual returns (address[] memory);\\n    function getFinalTokens() external view virtual returns(address[] memory);\\n    function getBalance(address token) external view virtual returns (uint);\\n}\\n\\nabstract contract BFactory {\\n    function newBPool() external virtual returns (BPool);\\n}\\n\\nabstract contract ConfigurableRightsPool is AbstractPool {\\n    struct PoolParams {\\n        string poolTokenSymbol;\\n        string poolTokenName;\\n        address[] constituentTokens;\\n        uint[] tokenBalances;\\n        uint[] tokenWeights;\\n        uint swapFee;\\n    }\\n\\n    struct CrpParams {\\n        uint initialSupply;\\n        uint minimumWeightChangeBlockPeriod;\\n        uint addTokenTimeLockInBlocks;\\n    }\\n\\n    function createPool(\\n        uint initialSupply, uint minimumWeightChangeBlockPeriod, uint addTokenTimeLockInBlocks\\n    ) external virtual;\\n    function createPool(uint initialSupply) external virtual;\\n    function setCap(uint newCap) external virtual;\\n    function updateWeight(address token, uint newWeight) external virtual;\\n    function updateWeightsGradually(\\n        uint[] calldata newWeights, uint startBlock, uint endBlock\\n    ) external virtual;\\n    function commitAddToken(address token, uint balance, uint denormalizedWeight) external virtual;\\n    function applyAddToken() external virtual;\\n    function removeToken(address token) external virtual;\\n    function whitelistLiquidityProvider(address provider) external virtual;\\n    function removeWhitelistedLiquidityProvider(address provider) external virtual;\\n    function bPool() external view virtual returns (BPool);\\n}\\n\\nabstract contract CRPFactory {\\n    function newCrp(\\n        address factoryAddress,\\n        ConfigurableRightsPool.PoolParams calldata params,\\n        RightsManager.Rights calldata rights\\n    ) external virtual returns (ConfigurableRightsPool);\\n}\\n/********************************** WARNING **********************************/\\n//                                                                           //\\n// This contract is only meant to be used in conjunction with ds-proxy.      //\\n// Calling this contract directly will lead to loss of funds.                //\\n//                                                                           //\\n/********************************** WARNING **********************************/\\n\\ncontract BActions {\\n\\n    // --- Pool Creation ---\\n\\n    function create(\\n        BFactory factory,\\n        address[] calldata tokens,\\n        uint[] calldata balances,\\n        uint[] calldata weights,\\n        uint swapFee,\\n        bool finalize\\n    ) external returns (BPool pool) {\\n        require(tokens.length == balances.length, \\\"ERR_LENGTH_MISMATCH\\\");\\n        require(tokens.length == weights.length, \\\"ERR_LENGTH_MISMATCH\\\");\\n\\n        pool = factory.newBPool();\\n        pool.setSwapFee(swapFee);\\n\\n        for (uint i = 0; i < tokens.length; i++) {\\n            ERC20 token = ERC20(tokens[i]);\\n            require(token.transferFrom(msg.sender, address(this), balances[i]), \\\"ERR_TRANSFER_FAILED\\\");\\n            _safeApprove(token, address(pool), balances[i]);\\n            pool.bind(tokens[i], balances[i], weights[i]);\\n        }\\n\\n        if (finalize) {\\n            pool.finalize();\\n            require(pool.transfer(msg.sender, pool.balanceOf(address(this))), \\\"ERR_TRANSFER_FAILED\\\");\\n        } else {\\n            pool.setPublicSwap(true);\\n        }\\n    }\\n\\n    function createSmartPool(\\n        CRPFactory factory,\\n        BFactory kFactory,\\n        ConfigurableRightsPool.PoolParams calldata poolParams,\\n        ConfigurableRightsPool.CrpParams calldata crpParams,\\n        RightsManager.Rights calldata rights\\n    ) external returns (ConfigurableRightsPool crp) {\\n        require(\\n            poolParams.constituentTokens.length == poolParams.tokenBalances.length,\\n            \\\"ERR_LENGTH_MISMATCH\\\"\\n        );\\n        require(\\n            poolParams.constituentTokens.length == poolParams.tokenWeights.length,\\n            \\\"ERR_LENGTH_MISMATCH\\\"\\n        );\\n\\n        crp = factory.newCrp(\\n            address(kFactory),\\n            poolParams,\\n            rights\\n        );\\n\\n        for (uint i = 0; i < poolParams.constituentTokens.length; i++) {\\n            ERC20 token = ERC20(poolParams.constituentTokens[i]);\\n            require(\\n                token.transferFrom(msg.sender, address(this), poolParams.tokenBalances[i]),\\n                \\\"ERR_TRANSFER_FAILED\\\"\\n            );\\n            _safeApprove(token, address(crp), poolParams.tokenBalances[i]);\\n        }\\n\\n        crp.createPool(\\n            crpParams.initialSupply,\\n            crpParams.minimumWeightChangeBlockPeriod,\\n            crpParams.addTokenTimeLockInBlocks\\n        );\\n        require(crp.transfer(msg.sender, crpParams.initialSupply), \\\"ERR_TRANSFER_FAILED\\\");\\n        // DSProxy instance keeps pool ownership to enable management\\n    }\\n\\n    // --- Joins ---\\n\\n    function joinPool(\\n        BPool pool,\\n        uint poolAmountOut,\\n        uint[] calldata maxAmountsIn\\n    ) external {\\n        address[] memory tokens = pool.getFinalTokens();\\n        _join(pool, tokens, poolAmountOut, maxAmountsIn);\\n    }\\n\\n    function joinSmartPool(\\n        ConfigurableRightsPool pool,\\n        uint poolAmountOut,\\n        uint[] calldata maxAmountsIn\\n    ) external {\\n        address[] memory tokens = pool.bPool().getCurrentTokens();\\n        _join(pool, tokens, poolAmountOut, maxAmountsIn);\\n    }\\n\\n    function joinswapExternAmountIn(\\n        AbstractPool pool,\\n        ERC20 token,\\n        uint tokenAmountIn,\\n        uint minPoolAmountOut\\n    ) external {\\n        require(token.transferFrom(msg.sender, address(this), tokenAmountIn), \\\"ERR_TRANSFER_FAILED\\\");\\n        _safeApprove(token, address(pool), tokenAmountIn);\\n        uint poolAmountOut = pool.joinswapExternAmountIn(address(token), tokenAmountIn, minPoolAmountOut);\\n        require(pool.transfer(msg.sender, poolAmountOut), \\\"ERR_TRANSFER_FAILED\\\");\\n    }\\n\\n    // --- Pool management (common) ---\\n\\n    function setPublicSwap(AbstractPool pool, bool publicSwap) external {\\n        pool.setPublicSwap(publicSwap);\\n    }\\n\\n    function setSwapFee(AbstractPool pool, uint newFee) external {\\n        pool.setSwapFee(newFee);\\n    }\\n\\n    function setController(AbstractPool pool, address newController) external {\\n        pool.setController(newController);\\n    }\\n\\n    // --- Private pool management ---\\n\\n    function setTokens(\\n        BPool pool,\\n        address[] calldata tokens,\\n        uint[] calldata balances,\\n        uint[] calldata denorms\\n    ) external {\\n        require(tokens.length == balances.length, \\\"ERR_LENGTH_MISMATCH\\\");\\n        require(tokens.length == denorms.length, \\\"ERR_LENGTH_MISMATCH\\\");\\n\\n        for (uint i = 0; i < tokens.length; i++) {\\n            ERC20 token = ERC20(tokens[i]);\\n            if (pool.isBound(tokens[i])) {\\n                if (balances[i] > pool.getBalance(tokens[i])) {\\n                    require(\\n                        token.transferFrom(msg.sender, address(this), balances[i] - pool.getBalance(tokens[i])),\\n                        \\\"ERR_TRANSFER_FAILED\\\"\\n                    );\\n                    _safeApprove(token, address(pool), balances[i] - pool.getBalance(tokens[i]));\\n                }\\n                if (balances[i] > 10**6) {\\n                    pool.rebind(tokens[i], balances[i], denorms[i]);\\n                } else {\\n                    pool.unbind(tokens[i]);\\n                }\\n\\n            } else {\\n                require(token.transferFrom(msg.sender, address(this), balances[i]), \\\"ERR_TRANSFER_FAILED\\\");\\n                _safeApprove(token, address(pool), balances[i]);\\n                pool.bind(tokens[i], balances[i], denorms[i]);\\n            }\\n\\n            if (token.balanceOf(address(this)) > 0) {\\n                require(token.transfer(msg.sender, token.balanceOf(address(this))), \\\"ERR_TRANSFER_FAILED\\\");\\n            }\\n\\n        }\\n    }\\n\\n    function finalize(BPool pool) external {\\n        pool.finalize();\\n        require(pool.transfer(msg.sender, pool.balanceOf(address(this))), \\\"ERR_TRANSFER_FAILED\\\");\\n    }\\n\\n    // --- Smart pool management ---\\n\\n    function increaseWeight(\\n        ConfigurableRightsPool crp,\\n        ERC20 token,\\n        uint newWeight,\\n        uint tokenAmountIn\\n    ) external {\\n        require(token.transferFrom(msg.sender, address(this), tokenAmountIn), \\\"ERR_TRANSFER_FAILED\\\");\\n        _safeApprove(token, address(crp), tokenAmountIn);\\n        crp.updateWeight(address(token), newWeight);\\n        require(crp.transfer(msg.sender, crp.balanceOf(address(this))), \\\"ERR_TRANSFER_FAILED\\\");\\n    }\\n\\n    function decreaseWeight(\\n        ConfigurableRightsPool crp,\\n        ERC20 token,\\n        uint newWeight,\\n        uint poolAmountIn\\n    ) external {\\n        require(crp.transferFrom(msg.sender, address(this), poolAmountIn), \\\"ERR_TRANSFER_FAILED\\\");\\n        crp.updateWeight(address(token), newWeight);\\n        require(token.transfer(msg.sender, token.balanceOf(address(this))), \\\"ERR_TRANSFER_FAILED\\\");\\n    }\\n\\n    function updateWeightsGradually(\\n        ConfigurableRightsPool crp,\\n        uint[] calldata newWeights,\\n        uint startBlock,\\n        uint endBlock\\n    ) external {\\n        crp.updateWeightsGradually(newWeights, startBlock, endBlock);\\n    }\\n\\n    function setCap(\\n        ConfigurableRightsPool crp,\\n        uint newCap\\n    ) external {\\n        crp.setCap(newCap);\\n    }\\n\\n    function commitAddToken(\\n        ConfigurableRightsPool crp,\\n        ERC20 token,\\n        uint balance,\\n        uint denormalizedWeight\\n    ) external {\\n        crp.commitAddToken(address(token), balance, denormalizedWeight);\\n    }\\n\\n    function applyAddToken(\\n        ConfigurableRightsPool crp,\\n        ERC20 token,\\n        uint tokenAmountIn\\n    ) external {\\n        require(token.transferFrom(msg.sender, address(this), tokenAmountIn), \\\"ERR_TRANSFER_FAILED\\\");\\n        _safeApprove(token, address(crp), tokenAmountIn);\\n        crp.applyAddToken();\\n        require(crp.transfer(msg.sender, crp.balanceOf(address(this))), \\\"ERR_TRANSFER_FAILED\\\");\\n    }\\n\\n    function removeToken(\\n        ConfigurableRightsPool crp,\\n        ERC20 token,\\n        uint poolAmountIn\\n    ) external {\\n        require(crp.transferFrom(msg.sender, address(this), poolAmountIn), \\\"ERR_TRANSFER_FAILED\\\");\\n        crp.removeToken(address(token));\\n        require(token.transfer(msg.sender, token.balanceOf(address(this))), \\\"ERR_TRANSFER_FAILED\\\");\\n    }\\n\\n    function whitelistLiquidityProvider(\\n        ConfigurableRightsPool crp,\\n        address provider\\n    ) external {\\n        crp.whitelistLiquidityProvider(provider);\\n    }\\n\\n    function removeWhitelistedLiquidityProvider(\\n        ConfigurableRightsPool crp,\\n        address provider\\n    ) external {\\n        crp.removeWhitelistedLiquidityProvider(provider);\\n    }\\n\\n    // --- Internals ---\\n\\n    function _safeApprove(ERC20 token, address spender, uint amount) internal {\\n        if (token.allowance(address(this), spender) > 0) {\\n            token.approve(spender, 0);\\n        }\\n        token.approve(spender, amount);\\n    }\\n\\n    function _join(\\n        AbstractPool pool,\\n        address[] memory tokens,\\n        uint poolAmountOut,\\n        uint[] memory maxAmountsIn\\n    ) internal {\\n        require(maxAmountsIn.length == tokens.length, \\\"ERR_LENGTH_MISMATCH\\\");\\n\\n        for (uint i = 0; i < tokens.length; i++) {\\n            ERC20 token = ERC20(tokens[i]);\\n            require(token.transferFrom(msg.sender, address(this), maxAmountsIn[i]), \\\"ERR_TRANSFER_FAILED\\\");\\n            _safeApprove(token, address(pool), maxAmountsIn[i]);\\n        }\\n        pool.joinPool(poolAmountOut, maxAmountsIn);\\n        for (uint i = 0; i < tokens.length; i++) {\\n            ERC20 token = ERC20(tokens[i]);\\n            if (token.balanceOf(address(this)) > 0) {\\n                require(token.transfer(msg.sender, token.balanceOf(address(this))), \\\"ERR_TRANSFER_FAILED\\\");\\n            }\\n        }\\n        require(pool.transfer(msg.sender, pool.balanceOf(address(this))), \\\"ERR_TRANSFER_FAILED\\\");\\n    }\\n}\\n\",\"keccak256\":\"0xb7ab283093b39140440e6f2ec01f607a14558a05aa1ae54b1459d0c2df6b96c3\",\"license\":\"GPL-3.0-or-later\"}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        }
      }
    },
    "sources": {
      "contracts/BActions.sol": {
        "ast": {
          "absolutePath": "contracts/BActions.sol",
          "exportedSymbols": {
            "AbstractPool": [
              102
            ],
            "BActions": [
              1416
            ],
            "BFactory": [
              163
            ],
            "BPool": [
              157
            ],
            "BuniOwnable": [
              68
            ],
            "CRPFactory": [
              269
            ],
            "ConfigurableRightsPool": [
              257
            ],
            "ERC20": [
              62
            ],
            "RightsManager": [
              16
            ]
          },
          "id": 1417,
          "license": "GPL-3.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "0.6",
                ".12"
              ],
              "nodeType": "PragmaDirective",
              "src": "45:23:0"
            },
            {
              "id": 2,
              "literals": [
                "experimental",
                "ABIEncoderV2"
              ],
              "nodeType": "PragmaDirective",
              "src": "70:33:0"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "library",
              "documentation": null,
              "fullyImplemented": true,
              "id": 16,
              "linearizedBaseContracts": [
                16
              ],
              "name": "RightsManager",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "canonicalName": "RightsManager.Rights",
                  "id": 15,
                  "members": [
                    {
                      "constant": false,
                      "id": 4,
                      "mutability": "mutable",
                      "name": "canPauseSwapping",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 15,
                      "src": "157:21:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 3,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "157:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 6,
                      "mutability": "mutable",
                      "name": "canChangeSwapFee",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 15,
                      "src": "188:21:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 5,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "188:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 8,
                      "mutability": "mutable",
                      "name": "canChangeWeights",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 15,
                      "src": "219:21:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 7,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "219:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 10,
                      "mutability": "mutable",
                      "name": "canAddRemoveTokens",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 15,
                      "src": "250:23:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 9,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "250:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 12,
                      "mutability": "mutable",
                      "name": "canWhitelistLPs",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 15,
                      "src": "283:20:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 11,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "283:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 14,
                      "mutability": "mutable",
                      "name": "canChangeCap",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 15,
                      "src": "313:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 13,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "313:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "name": "Rights",
                  "nodeType": "StructDefinition",
                  "scope": 16,
                  "src": "133:204:0",
                  "visibility": "public"
                }
              ],
              "scope": 1417,
              "src": "105:234:0"
            },
            {
              "abstract": true,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": null,
              "fullyImplemented": false,
              "id": 62,
              "linearizedBaseContracts": [
                62
              ],
              "name": "ERC20",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "095ea7b3",
                  "id": 25,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 21,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 18,
                        "mutability": "mutable",
                        "name": "spender",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 25,
                        "src": "388:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 17,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "388:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 20,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 25,
                        "src": "405:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 19,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "405:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "387:30:0"
                  },
                  "returnParameters": {
                    "id": 24,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 23,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 25,
                        "src": "444:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 22,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "444:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "443:6:0"
                  },
                  "scope": 62,
                  "src": "371:79:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "a9059cbb",
                  "id": 34,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 30,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 27,
                        "mutability": "mutable",
                        "name": "dst",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 34,
                        "src": "473:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 26,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "473:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 29,
                        "mutability": "mutable",
                        "name": "amt",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 34,
                        "src": "486:8:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 28,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "486:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "472:23:0"
                  },
                  "returnParameters": {
                    "id": 33,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 32,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 34,
                        "src": "522:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 31,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "522:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "521:6:0"
                  },
                  "scope": 62,
                  "src": "455:73:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "23b872dd",
                  "id": 45,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 41,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 36,
                        "mutability": "mutable",
                        "name": "sender",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 45,
                        "src": "555:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 35,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "555:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 38,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 45,
                        "src": "571:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 37,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "571:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 40,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 45,
                        "src": "590:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 39,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "590:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "554:48:0"
                  },
                  "returnParameters": {
                    "id": 44,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 43,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 45,
                        "src": "629:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 42,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "629:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "628:6:0"
                  },
                  "scope": 62,
                  "src": "533:102:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "70a08231",
                  "id": 52,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 48,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 47,
                        "mutability": "mutable",
                        "name": "whom",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 52,
                        "src": "659:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 46,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "659:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "658:14:0"
                  },
                  "returnParameters": {
                    "id": 51,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 50,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 52,
                        "src": "704:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 49,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "704:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "703:6:0"
                  },
                  "scope": 62,
                  "src": "640:70:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "dd62ed3e",
                  "id": 61,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 57,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 54,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 61,
                        "src": "734:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 53,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "734:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 56,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 61,
                        "src": "743:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 55,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "743:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "733:18:0"
                  },
                  "returnParameters": {
                    "id": 60,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 59,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 61,
                        "src": "783:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 58,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "783:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "782:6:0"
                  },
                  "scope": 62,
                  "src": "715:74:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "external"
                }
              ],
              "scope": 1417,
              "src": "341:450:0"
            },
            {
              "abstract": true,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": null,
              "fullyImplemented": false,
              "id": 68,
              "linearizedBaseContracts": [
                68
              ],
              "name": "BuniOwnable",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "92eefe9b",
                  "id": 67,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setController",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 65,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 64,
                        "mutability": "mutable",
                        "name": "controller",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 67,
                        "src": "852:18:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 63,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "852:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "851:20:0"
                  },
                  "returnParameters": {
                    "id": 66,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "888:0:0"
                  },
                  "scope": 68,
                  "src": "829:60:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "external"
                }
              ],
              "scope": 1417,
              "src": "793:98:0"
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "arguments": null,
                  "baseName": {
                    "contractScope": null,
                    "id": 69,
                    "name": "ERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 62,
                    "src": "927:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$62",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 70,
                  "nodeType": "InheritanceSpecifier",
                  "src": "927:5:0"
                },
                {
                  "arguments": null,
                  "baseName": {
                    "contractScope": null,
                    "id": 71,
                    "name": "BuniOwnable",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 68,
                    "src": "934:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BuniOwnable_$68",
                      "typeString": "contract BuniOwnable"
                    }
                  },
                  "id": 72,
                  "nodeType": "InheritanceSpecifier",
                  "src": "934:11:0"
                }
              ],
              "contractDependencies": [
                62,
                68
              ],
              "contractKind": "contract",
              "documentation": null,
              "fullyImplemented": false,
              "id": 102,
              "linearizedBaseContracts": [
                102,
                68,
                62
              ],
              "name": "AbstractPool",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "34e19907",
                  "id": 77,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setSwapFee",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 75,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 74,
                        "mutability": "mutable",
                        "name": "swapFee",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 77,
                        "src": "972:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 73,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "972:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "971:14:0"
                  },
                  "returnParameters": {
                    "id": 76,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1002:0:0"
                  },
                  "scope": 102,
                  "src": "952:51:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "49b59552",
                  "id": 82,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setPublicSwap",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 80,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 79,
                        "mutability": "mutable",
                        "name": "public_",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 82,
                        "src": "1031:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 78,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1031:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "1030:14:0"
                  },
                  "returnParameters": {
                    "id": 81,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1061:0:0"
                  },
                  "scope": 102,
                  "src": "1008:54:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "4f69c0d4",
                  "id": 90,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "joinPool",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 88,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 84,
                        "mutability": "mutable",
                        "name": "poolAmountOut",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 90,
                        "src": "1086:18:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 83,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1086:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 87,
                        "mutability": "mutable",
                        "name": "maxAmountsIn",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 90,
                        "src": "1106:28:0",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 85,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "1106:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 86,
                          "length": null,
                          "nodeType": "ArrayTypeName",
                          "src": "1106:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "1085:50:0"
                  },
                  "returnParameters": {
                    "id": 89,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1152:0:0"
                  },
                  "scope": 102,
                  "src": "1068:85:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "5db34277",
                  "id": 101,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "joinswapExternAmountIn",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 97,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 92,
                        "mutability": "mutable",
                        "name": "tokenIn",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 101,
                        "src": "1199:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 91,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1199:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 94,
                        "mutability": "mutable",
                        "name": "tokenAmountIn",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 101,
                        "src": "1216:18:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 93,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1216:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 96,
                        "mutability": "mutable",
                        "name": "minPoolAmountOut",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 101,
                        "src": "1236:21:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 95,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1236:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "1189:74:0"
                  },
                  "returnParameters": {
                    "id": 100,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 99,
                        "mutability": "mutable",
                        "name": "poolAmountOut",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 101,
                        "src": "1290:18:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 98,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1290:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "1289:20:0"
                  },
                  "scope": 102,
                  "src": "1158:152:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "external"
                }
              ],
              "scope": 1417,
              "src": "893:419:0"
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "arguments": null,
                  "baseName": {
                    "contractScope": null,
                    "id": 103,
                    "name": "AbstractPool",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 102,
                    "src": "1341:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AbstractPool_$102",
                      "typeString": "contract AbstractPool"
                    }
                  },
                  "id": 104,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1341:12:0"
                }
              ],
              "contractDependencies": [
                62,
                68,
                102
              ],
              "contractKind": "contract",
              "documentation": null,
              "fullyImplemented": false,
              "id": 157,
              "linearizedBaseContracts": [
                157,
                102,
                68,
                62
              ],
              "name": "BPool",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "4bb278f3",
                  "id": 107,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "finalize",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 105,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1377:2:0"
                  },
                  "returnParameters": {
                    "id": 106,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1396:0:0"
                  },
                  "scope": 157,
                  "src": "1360:37:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "e4e1e538",
                  "id": 116,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "bind",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 114,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 109,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 116,
                        "src": "1416:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 108,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1416:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 111,
                        "mutability": "mutable",
                        "name": "balance",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 116,
                        "src": "1431:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 110,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1431:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 113,
                        "mutability": "mutable",
                        "name": "denorm",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 116,
                        "src": "1445:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 112,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1445:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "1415:42:0"
                  },
                  "returnParameters": {
                    "id": 115,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1474:0:0"
                  },
                  "scope": 157,
                  "src": "1402:73:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "3fdddaa2",
                  "id": 125,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "rebind",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 123,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 118,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 125,
                        "src": "1496:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 117,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1496:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 120,
                        "mutability": "mutable",
                        "name": "balance",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 125,
                        "src": "1511:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 119,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1511:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 122,
                        "mutability": "mutable",
                        "name": "denorm",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 125,
                        "src": "1525:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 121,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1525:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "1495:42:0"
                  },
                  "returnParameters": {
                    "id": 124,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1554:0:0"
                  },
                  "scope": 157,
                  "src": "1480:75:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "cf5e7bd3",
                  "id": 130,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "unbind",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 128,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 127,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 130,
                        "src": "1576:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 126,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1576:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "1575:15:0"
                  },
                  "returnParameters": {
                    "id": 129,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1607:0:0"
                  },
                  "scope": 157,
                  "src": "1560:48:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "2f37b624",
                  "id": 137,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isBound",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 133,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 132,
                        "mutability": "mutable",
                        "name": "t",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 137,
                        "src": "1630:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 131,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1630:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "1629:11:0"
                  },
                  "returnParameters": {
                    "id": 136,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 135,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 137,
                        "src": "1672:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 134,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1672:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "1671:6:0"
                  },
                  "scope": 157,
                  "src": "1613:65:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "cc77828d",
                  "id": 143,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getCurrentTokens",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 138,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1708:2:0"
                  },
                  "returnParameters": {
                    "id": 142,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 141,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 143,
                        "src": "1742:16:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 139,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1742:7:0",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 140,
                          "length": null,
                          "nodeType": "ArrayTypeName",
                          "src": "1742:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "1741:18:0"
                  },
                  "scope": 157,
                  "src": "1683:77:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "be3bbd2e",
                  "id": 149,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getFinalTokens",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 144,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1788:2:0"
                  },
                  "returnParameters": {
                    "id": 148,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 147,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 149,
                        "src": "1821:16:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 145,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1821:7:0",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 146,
                          "length": null,
                          "nodeType": "ArrayTypeName",
                          "src": "1821:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "1820:18:0"
                  },
                  "scope": 157,
                  "src": "1765:74:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "f8b2cb4f",
                  "id": 156,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getBalance",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 152,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 151,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 156,
                        "src": "1864:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 150,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1864:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "1863:15:0"
                  },
                  "returnParameters": {
                    "id": 155,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 154,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 156,
                        "src": "1910:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 153,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1910:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "1909:6:0"
                  },
                  "scope": 157,
                  "src": "1844:72:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "external"
                }
              ],
              "scope": 1417,
              "src": "1314:604:0"
            },
            {
              "abstract": true,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": null,
              "fullyImplemented": false,
              "id": 163,
              "linearizedBaseContracts": [
                163
              ],
              "name": "BFactory",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "d556c5dc",
                  "id": 162,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "newBPool",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 158,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1970:2:0"
                  },
                  "returnParameters": {
                    "id": 161,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 160,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 162,
                        "src": "1999:5:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BPool_$157",
                          "typeString": "contract BPool"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 159,
                          "name": "BPool",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 157,
                          "src": "1999:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BPool_$157",
                            "typeString": "contract BPool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "1998:7:0"
                  },
                  "scope": 163,
                  "src": "1953:53:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "external"
                }
              ],
              "scope": 1417,
              "src": "1920:88:0"
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "arguments": null,
                  "baseName": {
                    "contractScope": null,
                    "id": 164,
                    "name": "AbstractPool",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 102,
                    "src": "2054:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AbstractPool_$102",
                      "typeString": "contract AbstractPool"
                    }
                  },
                  "id": 165,
                  "nodeType": "InheritanceSpecifier",
                  "src": "2054:12:0"
                }
              ],
              "contractDependencies": [
                62,
                68,
                102
              ],
              "contractKind": "contract",
              "documentation": null,
              "fullyImplemented": false,
              "id": 257,
              "linearizedBaseContracts": [
                257,
                102,
                68,
                62
              ],
              "name": "ConfigurableRightsPool",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "canonicalName": "ConfigurableRightsPool.PoolParams",
                  "id": 181,
                  "members": [
                    {
                      "constant": false,
                      "id": 167,
                      "mutability": "mutable",
                      "name": "poolTokenSymbol",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 181,
                      "src": "2101:22:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 166,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "2101:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 169,
                      "mutability": "mutable",
                      "name": "poolTokenName",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 181,
                      "src": "2133:20:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 168,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "2133:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 172,
                      "mutability": "mutable",
                      "name": "constituentTokens",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 181,
                      "src": "2163:27:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 170,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2163:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 171,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "2163:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 175,
                      "mutability": "mutable",
                      "name": "tokenBalances",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 181,
                      "src": "2200:20:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 173,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2200:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 174,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "2200:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 178,
                      "mutability": "mutable",
                      "name": "tokenWeights",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 181,
                      "src": "2230:19:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 176,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2230:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 177,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "2230:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 180,
                      "mutability": "mutable",
                      "name": "swapFee",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 181,
                      "src": "2259:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 179,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2259:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "name": "PoolParams",
                  "nodeType": "StructDefinition",
                  "scope": 257,
                  "src": "2073:205:0",
                  "visibility": "public"
                },
                {
                  "canonicalName": "ConfigurableRightsPool.CrpParams",
                  "id": 188,
                  "members": [
                    {
                      "constant": false,
                      "id": 183,
                      "mutability": "mutable",
                      "name": "initialSupply",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 188,
                      "src": "2311:18:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 182,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2311:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 185,
                      "mutability": "mutable",
                      "name": "minimumWeightChangeBlockPeriod",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 188,
                      "src": "2339:35:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 184,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2339:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 187,
                      "mutability": "mutable",
                      "name": "addTokenTimeLockInBlocks",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 188,
                      "src": "2384:29:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 186,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2384:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "name": "CrpParams",
                  "nodeType": "StructDefinition",
                  "scope": 257,
                  "src": "2284:136:0",
                  "visibility": "public"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "c3391d27",
                  "id": 197,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "createPool",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 195,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 190,
                        "mutability": "mutable",
                        "name": "initialSupply",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 197,
                        "src": "2455:18:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 189,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2455:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 192,
                        "mutability": "mutable",
                        "name": "minimumWeightChangeBlockPeriod",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 197,
                        "src": "2475:35:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 191,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2475:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 194,
                        "mutability": "mutable",
                        "name": "addTokenTimeLockInBlocks",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 197,
                        "src": "2512:29:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 193,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2512:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "2445:102:0"
                  },
                  "returnParameters": {
                    "id": 196,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2564:0:0"
                  },
                  "scope": 257,
                  "src": "2426:139:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "8259e6a0",
                  "id": 202,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "createPool",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 200,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 199,
                        "mutability": "mutable",
                        "name": "initialSupply",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 202,
                        "src": "2590:18:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 198,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2590:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "2589:20:0"
                  },
                  "returnParameters": {
                    "id": 201,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2626:0:0"
                  },
                  "scope": 257,
                  "src": "2570:57:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "47786d37",
                  "id": 207,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setCap",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 205,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 204,
                        "mutability": "mutable",
                        "name": "newCap",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 207,
                        "src": "2648:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 203,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2648:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "2647:13:0"
                  },
                  "returnParameters": {
                    "id": 206,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2677:0:0"
                  },
                  "scope": 257,
                  "src": "2632:46:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "9776e94b",
                  "id": 214,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "updateWeight",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 212,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 209,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 214,
                        "src": "2705:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 208,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2705:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 211,
                        "mutability": "mutable",
                        "name": "newWeight",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 214,
                        "src": "2720:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 210,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2720:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "2704:31:0"
                  },
                  "returnParameters": {
                    "id": 213,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2752:0:0"
                  },
                  "scope": 257,
                  "src": "2683:70:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "246bc19b",
                  "id": 224,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "updateWeightsGradually",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 222,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 217,
                        "mutability": "mutable",
                        "name": "newWeights",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 224,
                        "src": "2799:26:0",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 215,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "2799:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 216,
                          "length": null,
                          "nodeType": "ArrayTypeName",
                          "src": "2799:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 219,
                        "mutability": "mutable",
                        "name": "startBlock",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 224,
                        "src": "2827:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 218,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2827:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 221,
                        "mutability": "mutable",
                        "name": "endBlock",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 224,
                        "src": "2844:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 220,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2844:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "2789:74:0"
                  },
                  "returnParameters": {
                    "id": 223,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2880:0:0"
                  },
                  "scope": 257,
                  "src": "2758:123:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "4c20d209",
                  "id": 233,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "commitAddToken",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 231,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 226,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 233,
                        "src": "2910:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 225,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2910:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 228,
                        "mutability": "mutable",
                        "name": "balance",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 233,
                        "src": "2925:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 227,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2925:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 230,
                        "mutability": "mutable",
                        "name": "denormalizedWeight",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 233,
                        "src": "2939:23:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 229,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2939:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "2909:54:0"
                  },
                  "returnParameters": {
                    "id": 232,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2980:0:0"
                  },
                  "scope": 257,
                  "src": "2886:95:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "c275d81b",
                  "id": 236,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "applyAddToken",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 234,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3008:2:0"
                  },
                  "returnParameters": {
                    "id": 235,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3027:0:0"
                  },
                  "scope": 257,
                  "src": "2986:42:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "5fa7b584",
                  "id": 241,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "removeToken",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 239,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 238,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 241,
                        "src": "3054:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 237,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3054:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "3053:15:0"
                  },
                  "returnParameters": {
                    "id": 240,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3085:0:0"
                  },
                  "scope": 257,
                  "src": "3033:53:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "c83a1c2d",
                  "id": 246,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "whitelistLiquidityProvider",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 244,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 243,
                        "mutability": "mutable",
                        "name": "provider",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 246,
                        "src": "3127:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 242,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3127:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "3126:18:0"
                  },
                  "returnParameters": {
                    "id": 245,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3161:0:0"
                  },
                  "scope": 257,
                  "src": "3091:71:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "e2762d4b",
                  "id": 251,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "removeWhitelistedLiquidityProvider",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 249,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 248,
                        "mutability": "mutable",
                        "name": "provider",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 251,
                        "src": "3211:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 247,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3211:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "3210:18:0"
                  },
                  "returnParameters": {
                    "id": 250,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3245:0:0"
                  },
                  "scope": 257,
                  "src": "3167:79:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "b64ef17b",
                  "id": 256,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "bPool",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 252,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3265:2:0"
                  },
                  "returnParameters": {
                    "id": 255,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 254,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 256,
                        "src": "3299:5:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BPool_$157",
                          "typeString": "contract BPool"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 253,
                          "name": "BPool",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 157,
                          "src": "3299:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BPool_$157",
                            "typeString": "contract BPool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "3298:7:0"
                  },
                  "scope": 257,
                  "src": "3251:55:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "external"
                }
              ],
              "scope": 1417,
              "src": "2010:1298:0"
            },
            {
              "abstract": true,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": null,
              "fullyImplemented": false,
              "id": 269,
              "linearizedBaseContracts": [
                269
              ],
              "name": "CRPFactory",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": null,
                  "documentation": null,
                  "functionSelector": "4420002b",
                  "id": 268,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "newCrp",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 264,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 259,
                        "mutability": "mutable",
                        "name": "factoryAddress",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 268,
                        "src": "3370:22:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 258,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3370:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 261,
                        "mutability": "mutable",
                        "name": "params",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 268,
                        "src": "3402:49:0",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolParams_$181_calldata_ptr",
                          "typeString": "struct ConfigurableRightsPool.PoolParams"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 260,
                          "name": "ConfigurableRightsPool.PoolParams",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 181,
                          "src": "3402:33:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PoolParams_$181_storage_ptr",
                            "typeString": "struct ConfigurableRightsPool.PoolParams"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 263,
                        "mutability": "mutable",
                        "name": "rights",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 268,
                        "src": "3461:36:0",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Rights_$15_calldata_ptr",
                          "typeString": "struct RightsManager.Rights"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 262,
                          "name": "RightsManager.Rights",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 15,
                          "src": "3461:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Rights_$15_storage_ptr",
                            "typeString": "struct RightsManager.Rights"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "3360:143:0"
                  },
                  "returnParameters": {
                    "id": 267,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 266,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 268,
                        "src": "3530:22:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ConfigurableRightsPool_$257",
                          "typeString": "contract ConfigurableRightsPool"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 265,
                          "name": "ConfigurableRightsPool",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 257,
                          "src": "3530:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ConfigurableRightsPool_$257",
                            "typeString": "contract ConfigurableRightsPool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "3529:24:0"
                  },
                  "scope": 269,
                  "src": "3345:209:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "external"
                }
              ],
              "scope": 1417,
              "src": "3310:246:0"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": null,
              "fullyImplemented": true,
              "id": 1416,
              "linearizedBaseContracts": [
                1416
              ],
              "name": "BActions",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 412,
                    "nodeType": "Block",
                    "src": "4318:775:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 294,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 290,
                                  "name": "tokens",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 274,
                                  "src": "4336:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                    "typeString": "address[] calldata"
                                  }
                                },
                                "id": 291,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "4336:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 292,
                                  "name": "balances",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 277,
                                  "src": "4353:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                    "typeString": "uint256[] calldata"
                                  }
                                },
                                "id": 293,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "4353:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "4336:32:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "4552525f4c454e4754485f4d49534d41544348",
                              "id": 295,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4370:21:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_255e44775cff2b5a4cbe6c51fdfd1bbaf6984c9c19a7a9cae2cfac0275a994e8",
                                "typeString": "literal_string \"ERR_LENGTH_MISMATCH\""
                              },
                              "value": "ERR_LENGTH_MISMATCH"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_255e44775cff2b5a4cbe6c51fdfd1bbaf6984c9c19a7a9cae2cfac0275a994e8",
                                "typeString": "literal_string \"ERR_LENGTH_MISMATCH\""
                              }
                            ],
                            "id": 289,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4328:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 296,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4328:64:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 297,
                        "nodeType": "ExpressionStatement",
                        "src": "4328:64:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 303,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 299,
                                  "name": "tokens",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 274,
                                  "src": "4410:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                    "typeString": "address[] calldata"
                                  }
                                },
                                "id": 300,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "4410:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 301,
                                  "name": "weights",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 280,
                                  "src": "4427:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                    "typeString": "uint256[] calldata"
                                  }
                                },
                                "id": 302,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "4427:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "4410:31:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "4552525f4c454e4754485f4d49534d41544348",
                              "id": 304,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4443:21:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_255e44775cff2b5a4cbe6c51fdfd1bbaf6984c9c19a7a9cae2cfac0275a994e8",
                                "typeString": "literal_string \"ERR_LENGTH_MISMATCH\""
                              },
                              "value": "ERR_LENGTH_MISMATCH"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_255e44775cff2b5a4cbe6c51fdfd1bbaf6984c9c19a7a9cae2cfac0275a994e8",
                                "typeString": "literal_string \"ERR_LENGTH_MISMATCH\""
                              }
                            ],
                            "id": 298,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4402:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 305,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4402:63:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 306,
                        "nodeType": "ExpressionStatement",
                        "src": "4402:63:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 311,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 307,
                            "name": "pool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 287,
                            "src": "4476:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BPool_$157",
                              "typeString": "contract BPool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": null,
                                "id": 308,
                                "name": "factory",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 271,
                                "src": "4483:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BFactory_$163",
                                  "typeString": "contract BFactory"
                                }
                              },
                              "id": 309,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "newBPool",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 162,
                              "src": "4483:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_contract$_BPool_$157_$",
                                "typeString": "function () external returns (contract BPool)"
                              }
                            },
                            "id": 310,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4483:18:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BPool_$157",
                              "typeString": "contract BPool"
                            }
                          },
                          "src": "4476:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BPool_$157",
                            "typeString": "contract BPool"
                          }
                        },
                        "id": 312,
                        "nodeType": "ExpressionStatement",
                        "src": "4476:25:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 316,
                              "name": "swapFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 282,
                              "src": "4527:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 313,
                              "name": "pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 287,
                              "src": "4511:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BPool_$157",
                                "typeString": "contract BPool"
                              }
                            },
                            "id": 315,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "setSwapFee",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 77,
                            "src": "4511:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256) external"
                            }
                          },
                          "id": 317,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4511:24:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 318,
                        "nodeType": "ExpressionStatement",
                        "src": "4511:24:0"
                      },
                      {
                        "body": {
                          "id": 379,
                          "nodeType": "Block",
                          "src": "4587:279:0",
                          "statements": [
                            {
                              "assignments": [
                                331
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 331,
                                  "mutability": "mutable",
                                  "name": "token",
                                  "nodeType": "VariableDeclaration",
                                  "overrides": null,
                                  "scope": 379,
                                  "src": "4601:11:0",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ERC20_$62",
                                    "typeString": "contract ERC20"
                                  },
                                  "typeName": {
                                    "contractScope": null,
                                    "id": 330,
                                    "name": "ERC20",
                                    "nodeType": "UserDefinedTypeName",
                                    "referencedDeclaration": 62,
                                    "src": "4601:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ERC20_$62",
                                      "typeString": "contract ERC20"
                                    }
                                  },
                                  "value": null,
                                  "visibility": "internal"
                                }
                              ],
                              "id": 337,
                              "initialValue": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 333,
                                      "name": "tokens",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 274,
                                      "src": "4621:6:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                        "typeString": "address[] calldata"
                                      }
                                    },
                                    "id": 335,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 334,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 320,
                                      "src": "4628:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "4621:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 332,
                                  "name": "ERC20",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 62,
                                  "src": "4615:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_ERC20_$62_$",
                                    "typeString": "type(contract ERC20)"
                                  }
                                },
                                "id": 336,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4615:16:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20_$62",
                                  "typeString": "contract ERC20"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "4601:30:0"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "expression": {
                                          "argumentTypes": null,
                                          "id": 341,
                                          "name": "msg",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -15,
                                          "src": "4672:3:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_message",
                                            "typeString": "msg"
                                          }
                                        },
                                        "id": 342,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "sender",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": null,
                                        "src": "4672:10:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address_payable",
                                          "typeString": "address payable"
                                        }
                                      },
                                      {
                                        "argumentTypes": null,
                                        "arguments": [
                                          {
                                            "argumentTypes": null,
                                            "id": 345,
                                            "name": "this",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": -28,
                                            "src": "4692:4:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_BActions_$1416",
                                              "typeString": "contract BActions"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_contract$_BActions_$1416",
                                              "typeString": "contract BActions"
                                            }
                                          ],
                                          "id": 344,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "4684:7:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_address_$",
                                            "typeString": "type(address)"
                                          },
                                          "typeName": {
                                            "id": 343,
                                            "name": "address",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "4684:7:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": null,
                                              "typeString": null
                                            }
                                          }
                                        },
                                        "id": 346,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "4684:13:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "argumentTypes": null,
                                        "baseExpression": {
                                          "argumentTypes": null,
                                          "id": 347,
                                          "name": "balances",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 277,
                                          "src": "4699:8:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                            "typeString": "uint256[] calldata"
                                          }
                                        },
                                        "id": 349,
                                        "indexExpression": {
                                          "argumentTypes": null,
                                          "id": 348,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 320,
                                          "src": "4708:1:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "4699:11:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address_payable",
                                          "typeString": "address payable"
                                        },
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 339,
                                        "name": "token",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 331,
                                        "src": "4653:5:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_ERC20_$62",
                                          "typeString": "contract ERC20"
                                        }
                                      },
                                      "id": 340,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "transferFrom",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 45,
                                      "src": "4653:18:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                        "typeString": "function (address,address,uint256) external returns (bool)"
                                      }
                                    },
                                    "id": 350,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "4653:58:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "4552525f5452414e534645525f4641494c4544",
                                    "id": 351,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4713:21:0",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_c9252e500ac7052178e0516284a4bfdb9c18736079c4cc7803b8d1294a8fb98c",
                                      "typeString": "literal_string \"ERR_TRANSFER_FAILED\""
                                    },
                                    "value": "ERR_TRANSFER_FAILED"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_c9252e500ac7052178e0516284a4bfdb9c18736079c4cc7803b8d1294a8fb98c",
                                      "typeString": "literal_string \"ERR_TRANSFER_FAILED\""
                                    }
                                  ],
                                  "id": 338,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "4645:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 352,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4645:90:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 353,
                              "nodeType": "ExpressionStatement",
                              "src": "4645:90:0"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 355,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 331,
                                    "src": "4762:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ERC20_$62",
                                      "typeString": "contract ERC20"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "id": 358,
                                        "name": "pool",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 287,
                                        "src": "4777:4:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_BPool_$157",
                                          "typeString": "contract BPool"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_BPool_$157",
                                          "typeString": "contract BPool"
                                        }
                                      ],
                                      "id": 357,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "4769:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 356,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4769:7:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": null,
                                          "typeString": null
                                        }
                                      }
                                    },
                                    "id": 359,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "4769:13:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 360,
                                      "name": "balances",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 277,
                                      "src": "4784:8:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                        "typeString": "uint256[] calldata"
                                      }
                                    },
                                    "id": 362,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 361,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 320,
                                      "src": "4793:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "4784:11:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_ERC20_$62",
                                      "typeString": "contract ERC20"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 354,
                                  "name": "_safeApprove",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1273,
                                  "src": "4749:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$62_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (contract ERC20,address,uint256)"
                                  }
                                },
                                "id": 363,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4749:47:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 364,
                              "nodeType": "ExpressionStatement",
                              "src": "4749:47:0"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 368,
                                      "name": "tokens",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 274,
                                      "src": "4820:6:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                        "typeString": "address[] calldata"
                                      }
                                    },
                                    "id": 370,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 369,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 320,
                                      "src": "4827:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "4820:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 371,
                                      "name": "balances",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 277,
                                      "src": "4831:8:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                        "typeString": "uint256[] calldata"
                                      }
                                    },
                                    "id": 373,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 372,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 320,
                                      "src": "4840:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "4831:11:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 374,
                                      "name": "weights",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 280,
                                      "src": "4844:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                        "typeString": "uint256[] calldata"
                                      }
                                    },
                                    "id": 376,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 375,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 320,
                                      "src": "4852:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "4844:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 365,
                                    "name": "pool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 287,
                                    "src": "4810:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_BPool_$157",
                                      "typeString": "contract BPool"
                                    }
                                  },
                                  "id": 367,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "bind",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 116,
                                  "src": "4810:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,uint256,uint256) external"
                                  }
                                },
                                "id": 377,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4810:45:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 378,
                              "nodeType": "ExpressionStatement",
                              "src": "4810:45:0"
                            }
                          ]
                        },
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 326,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 323,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 320,
                            "src": "4563:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 324,
                              "name": "tokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 274,
                              "src": "4567:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                "typeString": "address[] calldata"
                              }
                            },
                            "id": 325,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4567:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4563:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 380,
                        "initializationExpression": {
                          "assignments": [
                            320
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 320,
                              "mutability": "mutable",
                              "name": "i",
                              "nodeType": "VariableDeclaration",
                              "overrides": null,
                              "scope": 380,
                              "src": "4551:6:0",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 319,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "4551:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "value": null,
                              "visibility": "internal"
                            }
                          ],
                          "id": 322,
                          "initialValue": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 321,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4560:1:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "4551:10:0"
                        },
                        "loopExpression": {
                          "expression": {
                            "argumentTypes": null,
                            "id": 328,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "4582:3:0",
                            "subExpression": {
                              "argumentTypes": null,
                              "id": 327,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 320,
                              "src": "4582:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 329,
                          "nodeType": "ExpressionStatement",
                          "src": "4582:3:0"
                        },
                        "nodeType": "ForStatement",
                        "src": "4546:320:0"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "id": 381,
                          "name": "finalize",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 284,
                          "src": "4880:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 410,
                          "nodeType": "Block",
                          "src": "5038:49:0",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "74727565",
                                    "id": 407,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "bool",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5071:4:0",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "value": "true"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 404,
                                    "name": "pool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 287,
                                    "src": "5052:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_BPool_$157",
                                      "typeString": "contract BPool"
                                    }
                                  },
                                  "id": 406,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "setPublicSwap",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 82,
                                  "src": "5052:18:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$__$",
                                    "typeString": "function (bool) external"
                                  }
                                },
                                "id": 408,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5052:24:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 409,
                              "nodeType": "ExpressionStatement",
                              "src": "5052:24:0"
                            }
                          ]
                        },
                        "id": 411,
                        "nodeType": "IfStatement",
                        "src": "4876:211:0",
                        "trueBody": {
                          "id": 403,
                          "nodeType": "Block",
                          "src": "4890:142:0",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 382,
                                    "name": "pool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 287,
                                    "src": "4904:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_BPool_$157",
                                      "typeString": "contract BPool"
                                    }
                                  },
                                  "id": 384,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "finalize",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 107,
                                  "src": "4904:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                                    "typeString": "function () external"
                                  }
                                },
                                "id": 385,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4904:15:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 386,
                              "nodeType": "ExpressionStatement",
                              "src": "4904:15:0"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "expression": {
                                          "argumentTypes": null,
                                          "id": 390,
                                          "name": "msg",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -15,
                                          "src": "4955:3:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_message",
                                            "typeString": "msg"
                                          }
                                        },
                                        "id": 391,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "sender",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": null,
                                        "src": "4955:10:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address_payable",
                                          "typeString": "address payable"
                                        }
                                      },
                                      {
                                        "argumentTypes": null,
                                        "arguments": [
                                          {
                                            "argumentTypes": null,
                                            "arguments": [
                                              {
                                                "argumentTypes": null,
                                                "id": 396,
                                                "name": "this",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": -28,
                                                "src": "4990:4:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_contract$_BActions_$1416",
                                                  "typeString": "contract BActions"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_contract$_BActions_$1416",
                                                  "typeString": "contract BActions"
                                                }
                                              ],
                                              "id": 395,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "nodeType": "ElementaryTypeNameExpression",
                                              "src": "4982:7:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_address_$",
                                                "typeString": "type(address)"
                                              },
                                              "typeName": {
                                                "id": 394,
                                                "name": "address",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "4982:7:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": null,
                                                  "typeString": null
                                                }
                                              }
                                            },
                                            "id": 397,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "4982:13:0",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": null,
                                            "id": 392,
                                            "name": "pool",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 287,
                                            "src": "4967:4:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_BPool_$157",
                                              "typeString": "contract BPool"
                                            }
                                          },
                                          "id": 393,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "balanceOf",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 52,
                                          "src": "4967:14:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                            "typeString": "function (address) view external returns (uint256)"
                                          }
                                        },
                                        "id": 398,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "4967:29:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address_payable",
                                          "typeString": "address payable"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 388,
                                        "name": "pool",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 287,
                                        "src": "4941:4:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_BPool_$157",
                                          "typeString": "contract BPool"
                                        }
                                      },
                                      "id": 389,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "transfer",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 34,
                                      "src": "4941:13:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                        "typeString": "function (address,uint256) external returns (bool)"
                                      }
                                    },
                                    "id": 399,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "4941:56:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "4552525f5452414e534645525f4641494c4544",
                                    "id": 400,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4999:21:0",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_c9252e500ac7052178e0516284a4bfdb9c18736079c4cc7803b8d1294a8fb98c",
                                      "typeString": "literal_string \"ERR_TRANSFER_FAILED\""
                                    },
                                    "value": "ERR_TRANSFER_FAILED"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_c9252e500ac7052178e0516284a4bfdb9c18736079c4cc7803b8d1294a8fb98c",
                                      "typeString": "literal_string \"ERR_TRANSFER_FAILED\""
                                    }
                                  ],
                                  "id": 387,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "4933:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 401,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4933:88:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 402,
                              "nodeType": "ExpressionStatement",
                              "src": "4933:88:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": null,
                  "functionSelector": "1a78a275",
                  "id": 413,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "create",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 285,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 271,
                        "mutability": "mutable",
                        "name": "factory",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 413,
                        "src": "4118:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BFactory_$163",
                          "typeString": "contract BFactory"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 270,
                          "name": "BFactory",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 163,
                          "src": "4118:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BFactory_$163",
                            "typeString": "contract BFactory"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 274,
                        "mutability": "mutable",
                        "name": "tokens",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 413,
                        "src": "4144:25:0",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 272,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4144:7:0",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 273,
                          "length": null,
                          "nodeType": "ArrayTypeName",
                          "src": "4144:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 277,
                        "mutability": "mutable",
                        "name": "balances",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 413,
                        "src": "4179:24:0",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 275,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "4179:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 276,
                          "length": null,
                          "nodeType": "ArrayTypeName",
                          "src": "4179:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 280,
                        "mutability": "mutable",
                        "name": "weights",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 413,
                        "src": "4213:23:0",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 278,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "4213:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 279,
                          "length": null,
                          "nodeType": "ArrayTypeName",
                          "src": "4213:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 282,
                        "mutability": "mutable",
                        "name": "swapFee",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 413,
                        "src": "4246:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 281,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "4246:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 284,
                        "mutability": "mutable",
                        "name": "finalize",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 413,
                        "src": "4268:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 283,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "4268:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "4108:179:0"
                  },
                  "returnParameters": {
                    "id": 288,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 287,
                        "mutability": "mutable",
                        "name": "pool",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 413,
                        "src": "4306:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BPool_$157",
                          "typeString": "contract BPool"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 286,
                          "name": "BPool",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 157,
                          "src": "4306:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BPool_$157",
                            "typeString": "contract BPool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "4305:12:0"
                  },
                  "scope": 1416,
                  "src": "4093:1000:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 536,
                    "nodeType": "Block",
                    "src": "5401:1141:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 435,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 429,
                                    "name": "poolParams",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 419,
                                    "src": "5432:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_PoolParams_$181_calldata_ptr",
                                      "typeString": "struct ConfigurableRightsPool.PoolParams calldata"
                                    }
                                  },
                                  "id": 430,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "constituentTokens",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 172,
                                  "src": "5432:28:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                    "typeString": "address[] calldata"
                                  }
                                },
                                "id": 431,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "5432:35:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 432,
                                    "name": "poolParams",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 419,
                                    "src": "5471:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_PoolParams_$181_calldata_ptr",
                                      "typeString": "struct ConfigurableRightsPool.PoolParams calldata"
                                    }
                                  },
                                  "id": 433,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "tokenBalances",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 175,
                                  "src": "5471:24:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                    "typeString": "uint256[] calldata"
                                  }
                                },
                                "id": 434,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "5471:31:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "5432:70:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "4552525f4c454e4754485f4d49534d41544348",
                              "id": 436,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5516:21:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_255e44775cff2b5a4cbe6c51fdfd1bbaf6984c9c19a7a9cae2cfac0275a994e8",
                                "typeString": "literal_string \"ERR_LENGTH_MISMATCH\""
                              },
                              "value": "ERR_LENGTH_MISMATCH"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_255e44775cff2b5a4cbe6c51fdfd1bbaf6984c9c19a7a9cae2cfac0275a994e8",
                                "typeString": "literal_string \"ERR_LENGTH_MISMATCH\""
                              }
                            ],
                            "id": 428,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5411:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 437,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5411:136:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 438,
                        "nodeType": "ExpressionStatement",
                        "src": "5411:136:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 446,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 440,
                                    "name": "poolParams",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 419,
                                    "src": "5578:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_PoolParams_$181_calldata_ptr",
                                      "typeString": "struct ConfigurableRightsPool.PoolParams calldata"
                                    }
                                  },
                                  "id": 441,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "constituentTokens",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 172,
                                  "src": "5578:28:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                    "typeString": "address[] calldata"
                                  }
                                },
                                "id": 442,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "5578:35:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 443,
                                    "name": "poolParams",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 419,
                                    "src": "5617:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_PoolParams_$181_calldata_ptr",
                                      "typeString": "struct ConfigurableRightsPool.PoolParams calldata"
                                    }
                                  },
                                  "id": 444,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "tokenWeights",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 178,
                                  "src": "5617:23:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                    "typeString": "uint256[] calldata"
                                  }
                                },
                                "id": 445,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "5617:30:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "5578:69:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "4552525f4c454e4754485f4d49534d41544348",
                              "id": 447,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5661:21:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_255e44775cff2b5a4cbe6c51fdfd1bbaf6984c9c19a7a9cae2cfac0275a994e8",
                                "typeString": "literal_string \"ERR_LENGTH_MISMATCH\""
                              },
                              "value": "ERR_LENGTH_MISMATCH"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_255e44775cff2b5a4cbe6c51fdfd1bbaf6984c9c19a7a9cae2cfac0275a994e8",
                                "typeString": "literal_string \"ERR_LENGTH_MISMATCH\""
                              }
                            ],
                            "id": 439,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5557:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 448,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5557:135:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 449,
                        "nodeType": "ExpressionStatement",
                        "src": "5557:135:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 460,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 450,
                            "name": "crp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 426,
                            "src": "5703:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ConfigurableRightsPool_$257",
                              "typeString": "contract ConfigurableRightsPool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 455,
                                    "name": "kFactory",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 417,
                                    "src": "5745:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_BFactory_$163",
                                      "typeString": "contract BFactory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_BFactory_$163",
                                      "typeString": "contract BFactory"
                                    }
                                  ],
                                  "id": 454,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "5737:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 453,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5737:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": null,
                                      "typeString": null
                                    }
                                  }
                                },
                                "id": 456,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5737:17:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 457,
                                "name": "poolParams",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 419,
                                "src": "5768:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PoolParams_$181_calldata_ptr",
                                  "typeString": "struct ConfigurableRightsPool.PoolParams calldata"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 458,
                                "name": "rights",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 423,
                                "src": "5792:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Rights_$15_calldata_ptr",
                                  "typeString": "struct RightsManager.Rights calldata"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_struct$_PoolParams_$181_calldata_ptr",
                                  "typeString": "struct ConfigurableRightsPool.PoolParams calldata"
                                },
                                {
                                  "typeIdentifier": "t_struct$_Rights_$15_calldata_ptr",
                                  "typeString": "struct RightsManager.Rights calldata"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 451,
                                "name": "factory",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 415,
                                "src": "5709:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_CRPFactory_$269",
                                  "typeString": "contract CRPFactory"
                                }
                              },
                              "id": 452,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "newCrp",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 268,
                              "src": "5709:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_struct$_PoolParams_$181_memory_ptr_$_t_struct$_Rights_$15_memory_ptr_$returns$_t_contract$_ConfigurableRightsPool_$257_$",
                                "typeString": "function (address,struct ConfigurableRightsPool.PoolParams memory,struct RightsManager.Rights memory) external returns (contract ConfigurableRightsPool)"
                              }
                            },
                            "id": 459,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5709:99:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ConfigurableRightsPool_$257",
                              "typeString": "contract ConfigurableRightsPool"
                            }
                          },
                          "src": "5703:105:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ConfigurableRightsPool_$257",
                            "typeString": "contract ConfigurableRightsPool"
                          }
                        },
                        "id": 461,
                        "nodeType": "ExpressionStatement",
                        "src": "5703:105:0"
                      },
                      {
                        "body": {
                          "id": 512,
                          "nodeType": "Block",
                          "src": "5882:319:0",
                          "statements": [
                            {
                              "assignments": [
                                475
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 475,
                                  "mutability": "mutable",
                                  "name": "token",
                                  "nodeType": "VariableDeclaration",
                                  "overrides": null,
                                  "scope": 512,
                                  "src": "5896:11:0",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ERC20_$62",
                                    "typeString": "contract ERC20"
                                  },
                                  "typeName": {
                                    "contractScope": null,
                                    "id": 474,
                                    "name": "ERC20",
                                    "nodeType": "UserDefinedTypeName",
                                    "referencedDeclaration": 62,
                                    "src": "5896:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ERC20_$62",
                                      "typeString": "contract ERC20"
                                    }
                                  },
                                  "value": null,
                                  "visibility": "internal"
                                }
                              ],
                              "id": 482,
                              "initialValue": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 477,
                                        "name": "poolParams",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 419,
                                        "src": "5916:10:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_PoolParams_$181_calldata_ptr",
                                          "typeString": "struct ConfigurableRightsPool.PoolParams calldata"
                                        }
                                      },
                                      "id": 478,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "constituentTokens",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 172,
                                      "src": "5916:28:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                        "typeString": "address[] calldata"
                                      }
                                    },
                                    "id": 480,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 479,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 463,
                                      "src": "5945:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "5916:31:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 476,
                                  "name": "ERC20",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 62,
                                  "src": "5910:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_ERC20_$62_$",
                                    "typeString": "type(contract ERC20)"
                                  }
                                },
                                "id": 481,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5910:38:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20_$62",
                                  "typeString": "contract ERC20"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "5896:52:0"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "expression": {
                                          "argumentTypes": null,
                                          "id": 486,
                                          "name": "msg",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -15,
                                          "src": "6006:3:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_message",
                                            "typeString": "msg"
                                          }
                                        },
                                        "id": 487,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "sender",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": null,
                                        "src": "6006:10:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address_payable",
                                          "typeString": "address payable"
                                        }
                                      },
                                      {
                                        "argumentTypes": null,
                                        "arguments": [
                                          {
                                            "argumentTypes": null,
                                            "id": 490,
                                            "name": "this",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": -28,
                                            "src": "6026:4:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_BActions_$1416",
                                              "typeString": "contract BActions"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_contract$_BActions_$1416",
                                              "typeString": "contract BActions"
                                            }
                                          ],
                                          "id": 489,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "6018:7:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_address_$",
                                            "typeString": "type(address)"
                                          },
                                          "typeName": {
                                            "id": 488,
                                            "name": "address",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "6018:7:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": null,
                                              "typeString": null
                                            }
                                          }
                                        },
                                        "id": 491,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "6018:13:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "argumentTypes": null,
                                        "baseExpression": {
                                          "argumentTypes": null,
                                          "expression": {
                                            "argumentTypes": null,
                                            "id": 492,
                                            "name": "poolParams",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 419,
                                            "src": "6033:10:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_PoolParams_$181_calldata_ptr",
                                              "typeString": "struct ConfigurableRightsPool.PoolParams calldata"
                                            }
                                          },
                                          "id": 493,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "tokenBalances",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 175,
                                          "src": "6033:24:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                            "typeString": "uint256[] calldata"
                                          }
                                        },
                                        "id": 495,
                                        "indexExpression": {
                                          "argumentTypes": null,
                                          "id": 494,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 463,
                                          "src": "6058:1:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "6033:27:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address_payable",
                                          "typeString": "address payable"
                                        },
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 484,
                                        "name": "token",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 475,
                                        "src": "5987:5:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_ERC20_$62",
                                          "typeString": "contract ERC20"
                                        }
                                      },
                                      "id": 485,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "transferFrom",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 45,
                                      "src": "5987:18:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                        "typeString": "function (address,address,uint256) external returns (bool)"
                                      }
                                    },
                                    "id": 496,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5987:74:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "4552525f5452414e534645525f4641494c4544",
                                    "id": 497,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "6079:21:0",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_c9252e500ac7052178e0516284a4bfdb9c18736079c4cc7803b8d1294a8fb98c",
                                      "typeString": "literal_string \"ERR_TRANSFER_FAILED\""
                                    },
                                    "value": "ERR_TRANSFER_FAILED"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_c9252e500ac7052178e0516284a4bfdb9c18736079c4cc7803b8d1294a8fb98c",
                                      "typeString": "literal_string \"ERR_TRANSFER_FAILED\""
                                    }
                                  ],
                                  "id": 483,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "5962:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 498,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5962:152:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 499,
                              "nodeType": "ExpressionStatement",
                              "src": "5962:152:0"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 501,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 475,
                                    "src": "6141:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ERC20_$62",
                                      "typeString": "contract ERC20"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "id": 504,
                                        "name": "crp",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 426,
                                        "src": "6156:3:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_ConfigurableRightsPool_$257",
                                          "typeString": "contract ConfigurableRightsPool"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_ConfigurableRightsPool_$257",
                                          "typeString": "contract ConfigurableRightsPool"
                                        }
                                      ],
                                      "id": 503,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "6148:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 502,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "6148:7:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": null,
                                          "typeString": null
                                        }
                                      }
                                    },
                                    "id": 505,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "6148:12:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 506,
                                        "name": "poolParams",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 419,
                                        "src": "6162:10:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_PoolParams_$181_calldata_ptr",
                                          "typeString": "struct ConfigurableRightsPool.PoolParams calldata"
                                        }
                                      },
                                      "id": 507,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "tokenBalances",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 175,
                                      "src": "6162:24:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                        "typeString": "uint256[] calldata"
                                      }
                                    },
                                    "id": 509,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 508,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 463,
                                      "src": "6187:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "6162:27:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_ERC20_$62",
                                      "typeString": "contract ERC20"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 500,
                                  "name": "_safeApprove",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1273,
                                  "src": "6128:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$62_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (contract ERC20,address,uint256)"
                                  }
                                },
                                "id": 510,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6128:62:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 511,
                              "nodeType": "ExpressionStatement",
                              "src": "6128:62:0"
                            }
                          ]
                        },
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 470,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 466,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 463,
                            "src": "5836:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 467,
                                "name": "poolParams",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 419,
                                "src": "5840:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PoolParams_$181_calldata_ptr",
                                  "typeString": "struct ConfigurableRightsPool.PoolParams calldata"
                                }
                              },
                              "id": 468,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "constituentTokens",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 172,
                              "src": "5840:28:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                "typeString": "address[] calldata"
                              }
                            },
                            "id": 469,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "5840:35:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5836:39:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 513,
                        "initializationExpression": {
                          "assignments": [
                            463
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 463,
                              "mutability": "mutable",
                              "name": "i",
                              "nodeType": "VariableDeclaration",
                              "overrides": null,
                              "scope": 513,
                              "src": "5824:6:0",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 462,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "5824:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "value": null,
                              "visibility": "internal"
                            }
                          ],
                          "id": 465,
                          "initialValue": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 464,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5833:1:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "5824:10:0"
                        },
                        "loopExpression": {
                          "expression": {
                            "argumentTypes": null,
                            "id": 472,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "5877:3:0",
                            "subExpression": {
                              "argumentTypes": null,
                              "id": 471,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 463,
                              "src": "5877:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 473,
                          "nodeType": "ExpressionStatement",
                          "src": "5877:3:0"
                        },
                        "nodeType": "ForStatement",
                        "src": "5819:382:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 517,
                                "name": "crpParams",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 421,
                                "src": "6239:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_CrpParams_$188_calldata_ptr",
                                  "typeString": "struct ConfigurableRightsPool.CrpParams calldata"
                                }
                              },
                              "id": 518,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "initialSupply",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 183,
                              "src": "6239:23:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 519,
                                "name": "crpParams",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 421,
                                "src": "6276:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_CrpParams_$188_calldata_ptr",
                                  "typeString": "struct ConfigurableRightsPool.CrpParams calldata"
                                }
                              },
                              "id": 520,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "minimumWeightChangeBlockPeriod",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 185,
                              "src": "6276:40:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 521,
                                "name": "crpParams",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 421,
                                "src": "6330:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_CrpParams_$188_calldata_ptr",
                                  "typeString": "struct ConfigurableRightsPool.CrpParams calldata"
                                }
                              },
                              "id": 522,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "addTokenTimeLockInBlocks",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 187,
                              "src": "6330:34:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 514,
                              "name": "crp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 426,
                              "src": "6211:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ConfigurableRightsPool_$257",
                                "typeString": "contract ConfigurableRightsPool"
                              }
                            },
                            "id": 516,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "createPool",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 197,
                            "src": "6211:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256,uint256) external"
                            }
                          },
                          "id": 523,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6211:163:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 524,
                        "nodeType": "ExpressionStatement",
                        "src": "6211:163:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 528,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "6405:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 529,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "6405:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 530,
                                    "name": "crpParams",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 421,
                                    "src": "6417:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_CrpParams_$188_calldata_ptr",
                                      "typeString": "struct ConfigurableRightsPool.CrpParams calldata"
                                    }
                                  },
                                  "id": 531,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "initialSupply",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 183,
                                  "src": "6417:23:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 526,
                                  "name": "crp",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 426,
                                  "src": "6392:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ConfigurableRightsPool_$257",
                                    "typeString": "contract ConfigurableRightsPool"
                                  }
                                },
                                "id": 527,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "transfer",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 34,
                                "src": "6392:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (address,uint256) external returns (bool)"
                                }
                              },
                              "id": 532,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6392:49:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "4552525f5452414e534645525f4641494c4544",
                              "id": 533,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6443:21:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c9252e500ac7052178e0516284a4bfdb9c18736079c4cc7803b8d1294a8fb98c",
                                "typeString": "literal_string \"ERR_TRANSFER_FAILED\""
                              },
                              "value": "ERR_TRANSFER_FAILED"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c9252e500ac7052178e0516284a4bfdb9c18736079c4cc7803b8d1294a8fb98c",
                                "typeString": "literal_string \"ERR_TRANSFER_FAILED\""
                              }
                            ],
                            "id": 525,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6384:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 534,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6384:81:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 535,
                        "nodeType": "ExpressionStatement",
                        "src": "6384:81:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "functionSelector": "c152e579",
                  "id": 537,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "createSmartPool",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 424,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 415,
                        "mutability": "mutable",
                        "name": "factory",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 537,
                        "src": "5133:18:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CRPFactory_$269",
                          "typeString": "contract CRPFactory"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 414,
                          "name": "CRPFactory",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 269,
                          "src": "5133:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_CRPFactory_$269",
                            "typeString": "contract CRPFactory"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 417,
                        "mutability": "mutable",
                        "name": "kFactory",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 537,
                        "src": "5161:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BFactory_$163",
                          "typeString": "contract BFactory"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 416,
                          "name": "BFactory",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 163,
                          "src": "5161:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BFactory_$163",
                            "typeString": "contract BFactory"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 419,
                        "mutability": "mutable",
                        "name": "poolParams",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 537,
                        "src": "5188:53:0",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolParams_$181_calldata_ptr",
                          "typeString": "struct ConfigurableRightsPool.PoolParams"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 418,
                          "name": "ConfigurableRightsPool.PoolParams",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 181,
                          "src": "5188:33:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PoolParams_$181_storage_ptr",
                            "typeString": "struct ConfigurableRightsPool.PoolParams"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 421,
                        "mutability": "mutable",
                        "name": "crpParams",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 537,
                        "src": "5251:51:0",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CrpParams_$188_calldata_ptr",
                          "typeString": "struct ConfigurableRightsPool.CrpParams"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 420,
                          "name": "ConfigurableRightsPool.CrpParams",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 188,
                          "src": "5251:32:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_CrpParams_$188_storage_ptr",
                            "typeString": "struct ConfigurableRightsPool.CrpParams"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 423,
                        "mutability": "mutable",
                        "name": "rights",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 537,
                        "src": "5312:36:0",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Rights_$15_calldata_ptr",
                          "typeString": "struct RightsManager.Rights"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 422,
                          "name": "RightsManager.Rights",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 15,
                          "src": "5312:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Rights_$15_storage_ptr",
                            "typeString": "struct RightsManager.Rights"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "5123:231:0"
                  },
                  "returnParameters": {
                    "id": 427,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 426,
                        "mutability": "mutable",
                        "name": "crp",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 537,
                        "src": "5373:26:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ConfigurableRightsPool_$257",
                          "typeString": "contract ConfigurableRightsPool"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 425,
                          "name": "ConfigurableRightsPool",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 257,
                          "src": "5373:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ConfigurableRightsPool_$257",
                            "typeString": "contract ConfigurableRightsPool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "5372:28:0"
                  },
                  "scope": 1416,
                  "src": "5099:1443:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 563,
                    "nodeType": "Block",
                    "src": "6689:122:0",
                    "statements": [
                      {
                        "assignments": [
                          551
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 551,
                            "mutability": "mutable",
                            "name": "tokens",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 563,
                            "src": "6699:23:0",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 549,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6699:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 550,
                              "length": null,
                              "nodeType": "ArrayTypeName",
                              "src": "6699:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                "typeString": "address[]"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 555,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "id": 552,
                              "name": "pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 539,
                              "src": "6725:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BPool_$157",
                                "typeString": "contract BPool"
                              }
                            },
                            "id": 553,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getFinalTokens",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 149,
                            "src": "6725:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                              "typeString": "function () view external returns (address[] memory)"
                            }
                          },
                          "id": 554,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6725:21:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6699:47:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 557,
                              "name": "pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 539,
                              "src": "6762:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BPool_$157",
                                "typeString": "contract BPool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 558,
                              "name": "tokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 551,
                              "src": "6768:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 559,
                              "name": "poolAmountOut",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 541,
                              "src": "6776:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 560,
                              "name": "maxAmountsIn",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 544,
                              "src": "6791:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                "typeString": "uint256[] calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_BPool_$157",
                                "typeString": "contract BPool"
                              },
                              {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                "typeString": "uint256[] calldata"
                              }
                            ],
                            "id": 556,
                            "name": "_join",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1415,
                            "src": "6756:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_AbstractPool_$102_$_t_array$_t_address_$dyn_memory_ptr_$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                              "typeString": "function (contract AbstractPool,address[] memory,uint256,uint256[] memory)"
                            }
                          },
                          "id": 561,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6756:48:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 562,
                        "nodeType": "ExpressionStatement",
                        "src": "6756:48:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "functionSelector": "8a5c57df",
                  "id": 564,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "joinPool",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 545,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 539,
                        "mutability": "mutable",
                        "name": "pool",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 564,
                        "src": "6597:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BPool_$157",
                          "typeString": "contract BPool"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 538,
                          "name": "BPool",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 157,
                          "src": "6597:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BPool_$157",
                            "typeString": "contract BPool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 541,
                        "mutability": "mutable",
                        "name": "poolAmountOut",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 564,
                        "src": "6617:18:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 540,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "6617:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 544,
                        "mutability": "mutable",
                        "name": "maxAmountsIn",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 564,
                        "src": "6645:28:0",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 542,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "6645:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 543,
                          "length": null,
                          "nodeType": "ArrayTypeName",
                          "src": "6645:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "6587:92:0"
                  },
                  "returnParameters": {
                    "id": 546,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6689:0:0"
                  },
                  "scope": 1416,
                  "src": "6570:241:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 592,
                    "nodeType": "Block",
                    "src": "6958:132:0",
                    "statements": [
                      {
                        "assignments": [
                          578
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 578,
                            "mutability": "mutable",
                            "name": "tokens",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 592,
                            "src": "6968:23:0",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 576,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6968:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 577,
                              "length": null,
                              "nodeType": "ArrayTypeName",
                              "src": "6968:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                "typeString": "address[]"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 584,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 579,
                                  "name": "pool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 566,
                                  "src": "6994:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ConfigurableRightsPool_$257",
                                    "typeString": "contract ConfigurableRightsPool"
                                  }
                                },
                                "id": 580,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "bPool",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 256,
                                "src": "6994:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_BPool_$157_$",
                                  "typeString": "function () view external returns (contract BPool)"
                                }
                              },
                              "id": 581,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6994:12:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BPool_$157",
                                "typeString": "contract BPool"
                              }
                            },
                            "id": 582,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getCurrentTokens",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 143,
                            "src": "6994:29:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                              "typeString": "function () view external returns (address[] memory)"
                            }
                          },
                          "id": 583,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6994:31:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6968:57:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 586,
                              "name": "pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 566,
                              "src": "7041:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ConfigurableRightsPool_$257",
                                "typeString": "contract ConfigurableRightsPool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 587,
                              "name": "tokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 578,
                              "src": "7047:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 588,
                              "name": "poolAmountOut",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 568,
                              "src": "7055:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 589,
                              "name": "maxAmountsIn",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 571,
                              "src": "7070:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                "typeString": "uint256[] calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ConfigurableRightsPool_$257",
                                "typeString": "contract ConfigurableRightsPool"
                              },
                              {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                "typeString": "uint256[] calldata"
                              }
                            ],
                            "id": 585,
                            "name": "_join",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1415,
                            "src": "7035:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_AbstractPool_$102_$_t_array$_t_address_$dyn_memory_ptr_$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                              "typeString": "function (contract AbstractPool,address[] memory,uint256,uint256[] memory)"
                            }
                          },
                          "id": 590,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7035:48:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 591,
                        "nodeType": "ExpressionStatement",
                        "src": "7035:48:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "functionSelector": "2c91a591",
                  "id": 593,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "joinSmartPool",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 572,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 566,
                        "mutability": "mutable",
                        "name": "pool",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 593,
                        "src": "6849:27:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ConfigurableRightsPool_$257",
                          "typeString": "contract ConfigurableRightsPool"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 565,
                          "name": "ConfigurableRightsPool",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 257,
                          "src": "6849:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ConfigurableRightsPool_$257",
                            "typeString": "contract ConfigurableRightsPool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 568,
                        "mutability": "mutable",
                        "name": "poolAmountOut",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 593,
                        "src": "6886:18:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 567,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "6886:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 571,
                        "mutability": "mutable",
                        "name": "maxAmountsIn",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 593,
                        "src": "6914:28:0",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 569,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "6914:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 570,
                          "length": null,
                          "nodeType": "ArrayTypeName",
                          "src": "6914:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "6839:109:0"
                  },
                  "returnParameters": {
                    "id": 573,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6958:0:0"
                  },
                  "scope": 1416,
                  "src": "6817:273:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 649,
                    "nodeType": "Block",
                    "src": "7250:357:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 607,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "7287:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 608,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "7287:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 611,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "7307:4:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_BActions_$1416",
                                        "typeString": "contract BActions"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_BActions_$1416",
                                        "typeString": "contract BActions"
                                      }
                                    ],
                                    "id": 610,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "7299:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 609,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "7299:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": null,
                                        "typeString": null
                                      }
                                    }
                                  },
                                  "id": 612,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "7299:13:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 613,
                                  "name": "tokenAmountIn",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 599,
                                  "src": "7314:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 605,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 597,
                                  "src": "7268:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ERC20_$62",
                                    "typeString": "contract ERC20"
                                  }
                                },
                                "id": 606,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "transferFrom",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 45,
                                "src": "7268:18:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (address,address,uint256) external returns (bool)"
                                }
                              },
                              "id": 614,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7268:60:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "4552525f5452414e534645525f4641494c4544",
                              "id": 615,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7330:21:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c9252e500ac7052178e0516284a4bfdb9c18736079c4cc7803b8d1294a8fb98c",
                                "typeString": "literal_string \"ERR_TRANSFER_FAILED\""
                              },
                              "value": "ERR_TRANSFER_FAILED"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c9252e500ac7052178e0516284a4bfdb9c18736079c4cc7803b8d1294a8fb98c",
                                "typeString": "literal_string \"ERR_TRANSFER_FAILED\""
                              }
                            ],
                            "id": 604,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "7260:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 616,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7260:92:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 617,
                        "nodeType": "ExpressionStatement",
                        "src": "7260:92:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 619,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 597,
                              "src": "7375:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$62",
                                "typeString": "contract ERC20"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 622,
                                  "name": "pool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 595,
                                  "src": "7390:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_AbstractPool_$102",
                                    "typeString": "contract AbstractPool"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_AbstractPool_$102",
                                    "typeString": "contract AbstractPool"
                                  }
                                ],
                                "id": 621,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7382:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 620,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7382:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 623,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7382:13:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 624,
                              "name": "tokenAmountIn",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 599,
                              "src": "7397:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ERC20_$62",
                                "typeString": "contract ERC20"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 618,
                            "name": "_safeApprove",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1273,
                            "src": "7362:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$62_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (contract ERC20,address,uint256)"
                            }
                          },
                          "id": 625,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7362:49:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 626,
                        "nodeType": "ExpressionStatement",
                        "src": "7362:49:0"
                      },
                      {
                        "assignments": [
                          628
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 628,
                            "mutability": "mutable",
                            "name": "poolAmountOut",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 649,
                            "src": "7421:18:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 627,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "7421:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 638,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 633,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 597,
                                  "src": "7478:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ERC20_$62",
                                    "typeString": "contract ERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ERC20_$62",
                                    "typeString": "contract ERC20"
                                  }
                                ],
                                "id": 632,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7470:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 631,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7470:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 634,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7470:14:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 635,
                              "name": "tokenAmountIn",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 599,
                              "src": "7486:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 636,
                              "name": "minPoolAmountOut",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 601,
                              "src": "7501:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 629,
                              "name": "pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 595,
                              "src": "7442:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AbstractPool_$102",
                                "typeString": "contract AbstractPool"
                              }
                            },
                            "id": 630,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "joinswapExternAmountIn",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 101,
                            "src": "7442:27:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (address,uint256,uint256) external returns (uint256)"
                            }
                          },
                          "id": 637,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7442:76:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7421:97:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 642,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "7550:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 643,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "7550:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 644,
                                  "name": "poolAmountOut",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 628,
                                  "src": "7562:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 640,
                                  "name": "pool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 595,
                                  "src": "7536:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_AbstractPool_$102",
                                    "typeString": "contract AbstractPool"
                                  }
                                },
                                "id": 641,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "transfer",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 34,
                                "src": "7536:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (address,uint256) external returns (bool)"
                                }
                              },
                              "id": 645,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7536:40:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "4552525f5452414e534645525f4641494c4544",
                              "id": 646,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7578:21:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c9252e500ac7052178e0516284a4bfdb9c18736079c4cc7803b8d1294a8fb98c",
                                "typeString": "literal_string \"ERR_TRANSFER_FAILED\""
                              },
                              "value": "ERR_TRANSFER_FAILED"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c9252e500ac7052178e0516284a4bfdb9c18736079c4cc7803b8d1294a8fb98c",
                                "typeString": "literal_string \"ERR_TRANSFER_FAILED\""
                              }
                            ],
                            "id": 639,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "7528:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 647,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7528:72:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 648,
                        "nodeType": "ExpressionStatement",
                        "src": "7528:72:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "functionSelector": "c1762b15",
                  "id": 650,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "joinswapExternAmountIn",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 602,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 595,
                        "mutability": "mutable",
                        "name": "pool",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 650,
                        "src": "7137:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractPool_$102",
                          "typeString": "contract AbstractPool"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 594,
                          "name": "AbstractPool",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 102,
                          "src": "7137:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AbstractPool_$102",
                            "typeString": "contract AbstractPool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 597,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 650,
                        "src": "7164:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$62",
                          "typeString": "contract ERC20"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 596,
                          "name": "ERC20",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 62,
                          "src": "7164:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$62",
                            "typeString": "contract ERC20"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 599,
                        "mutability": "mutable",
                        "name": "tokenAmountIn",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 650,
                        "src": "7185:18:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 598,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "7185:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 601,
                        "mutability": "mutable",
                        "name": "minPoolAmountOut",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 650,
                        "src": "7213:21:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 600,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "7213:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "7127:113:0"
                  },
                  "returnParameters": {
                    "id": 603,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7250:0:0"
                  },
                  "scope": 1416,
                  "src": "7096:511:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 663,
                    "nodeType": "Block",
                    "src": "7722:47:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 660,
                              "name": "publicSwap",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 654,
                              "src": "7751:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 657,
                              "name": "pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 652,
                              "src": "7732:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AbstractPool_$102",
                                "typeString": "contract AbstractPool"
                              }
                            },
                            "id": 659,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "setPublicSwap",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 82,
                            "src": "7732:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$__$",
                              "typeString": "function (bool) external"
                            }
                          },
                          "id": 661,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7732:30:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 662,
                        "nodeType": "ExpressionStatement",
                        "src": "7732:30:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "functionSelector": "1eccc185",
                  "id": 664,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setPublicSwap",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 655,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 652,
                        "mutability": "mutable",
                        "name": "pool",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 664,
                        "src": "7677:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractPool_$102",
                          "typeString": "contract AbstractPool"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 651,
                          "name": "AbstractPool",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 102,
                          "src": "7677:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AbstractPool_$102",
                            "typeString": "contract AbstractPool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 654,
                        "mutability": "mutable",
                        "name": "publicSwap",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 664,
                        "src": "7696:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 653,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "7696:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "7676:36:0"
                  },
                  "returnParameters": {
                    "id": 656,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7722:0:0"
                  },
                  "scope": 1416,
                  "src": "7654:115:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 677,
                    "nodeType": "Block",
                    "src": "7836:40:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 674,
                              "name": "newFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 668,
                              "src": "7862:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 671,
                              "name": "pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 666,
                              "src": "7846:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AbstractPool_$102",
                                "typeString": "contract AbstractPool"
                              }
                            },
                            "id": 673,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "setSwapFee",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 77,
                            "src": "7846:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256) external"
                            }
                          },
                          "id": 675,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7846:23:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 676,
                        "nodeType": "ExpressionStatement",
                        "src": "7846:23:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "functionSelector": "991991c7",
                  "id": 678,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setSwapFee",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 669,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 666,
                        "mutability": "mutable",
                        "name": "pool",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 678,
                        "src": "7795:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractPool_$102",
                          "typeString": "contract AbstractPool"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 665,
                          "name": "AbstractPool",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 102,
                          "src": "7795:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AbstractPool_$102",
                            "typeString": "contract AbstractPool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 668,
                        "mutability": "mutable",
                        "name": "newFee",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 678,
                        "src": "7814:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 667,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "7814:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "7794:32:0"
                  },
                  "returnParameters": {
                    "id": 670,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7836:0:0"
                  },
                  "scope": 1416,
                  "src": "7775:101:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 691,
                    "nodeType": "Block",
                    "src": "7956:50:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 688,
                              "name": "newController",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 682,
                              "src": "7985:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 685,
                              "name": "pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 680,
                              "src": "7966:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AbstractPool_$102",
                                "typeString": "contract AbstractPool"
                              }
                            },
                            "id": 687,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "setController",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 67,
                            "src": "7966:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address) external"
                            }
                          },
                          "id": 689,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7966:33:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 690,
                        "nodeType": "ExpressionStatement",
                        "src": "7966:33:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "functionSelector": "7b7d6c68",
                  "id": 692,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setController",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 683,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 680,
                        "mutability": "mutable",
                        "name": "pool",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 692,
                        "src": "7905:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractPool_$102",
                          "typeString": "contract AbstractPool"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 679,
                          "name": "AbstractPool",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 102,
                          "src": "7905:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AbstractPool_$102",
                            "typeString": "contract AbstractPool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 682,
                        "mutability": "mutable",
                        "name": "newController",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 692,
                        "src": "7924:21:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 681,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7924:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "7904:42:0"
                  },
                  "returnParameters": {
                    "id": 684,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7956:0:0"
                  },
                  "scope": 1416,
                  "src": "7882:124:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 907,
                    "nodeType": "Block",
                    "src": "8208:1343:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 711,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 707,
                                  "name": "tokens",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 697,
                                  "src": "8226:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                    "typeString": "address[] calldata"
                                  }
                                },
                                "id": 708,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "8226:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 709,
                                  "name": "balances",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 700,
                                  "src": "8243:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                    "typeString": "uint256[] calldata"
                                  }
                                },
                                "id": 710,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "8243:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "8226:32:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "4552525f4c454e4754485f4d49534d41544348",
                              "id": 712,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8260:21:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_255e44775cff2b5a4cbe6c51fdfd1bbaf6984c9c19a7a9cae2cfac0275a994e8",
                                "typeString": "literal_string \"ERR_LENGTH_MISMATCH\""
                              },
                              "value": "ERR_LENGTH_MISMATCH"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_255e44775cff2b5a4cbe6c51fdfd1bbaf6984c9c19a7a9cae2cfac0275a994e8",
                                "typeString": "literal_string \"ERR_LENGTH_MISMATCH\""
                              }
                            ],
                            "id": 706,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "8218:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 713,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8218:64:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 714,
                        "nodeType": "ExpressionStatement",
                        "src": "8218:64:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 720,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 716,
                                  "name": "tokens",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 697,
                                  "src": "8300:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                    "typeString": "address[] calldata"
                                  }
                                },
                                "id": 717,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "8300:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 718,
                                  "name": "denorms",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 703,
                                  "src": "8317:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                    "typeString": "uint256[] calldata"
                                  }
                                },
                                "id": 719,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "8317:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "8300:31:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "4552525f4c454e4754485f4d49534d41544348",
                              "id": 721,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8333:21:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_255e44775cff2b5a4cbe6c51fdfd1bbaf6984c9c19a7a9cae2cfac0275a994e8",
                                "typeString": "literal_string \"ERR_LENGTH_MISMATCH\""
                              },
                              "value": "ERR_LENGTH_MISMATCH"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_255e44775cff2b5a4cbe6c51fdfd1bbaf6984c9c19a7a9cae2cfac0275a994e8",
                                "typeString": "literal_string \"ERR_LENGTH_MISMATCH\""
                              }
                            ],
                            "id": 715,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "8292:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 722,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8292:63:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 723,
                        "nodeType": "ExpressionStatement",
                        "src": "8292:63:0"
                      },
                      {
                        "body": {
                          "id": 905,
                          "nodeType": "Block",
                          "src": "8407:1138:0",
                          "statements": [
                            {
                              "assignments": [
                                736
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 736,
                                  "mutability": "mutable",
                                  "name": "token",
                                  "nodeType": "VariableDeclaration",
                                  "overrides": null,
                                  "scope": 905,
                                  "src": "8421:11:0",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ERC20_$62",
                                    "typeString": "contract ERC20"
                                  },
                                  "typeName": {
                                    "contractScope": null,
                                    "id": 735,
                                    "name": "ERC20",
                                    "nodeType": "UserDefinedTypeName",
                                    "referencedDeclaration": 62,
                                    "src": "8421:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ERC20_$62",
                                      "typeString": "contract ERC20"
                                    }
                                  },
                                  "value": null,
                                  "visibility": "internal"
                                }
                              ],
                              "id": 742,
                              "initialValue": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 738,
                                      "name": "tokens",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 697,
                                      "src": "8441:6:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                        "typeString": "address[] calldata"
                                      }
                                    },
                                    "id": 740,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 739,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 725,
                                      "src": "8448:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "8441:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 737,
                                  "name": "ERC20",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 62,
                                  "src": "8435:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_ERC20_$62_$",
                                    "typeString": "type(contract ERC20)"
                                  }
                                },
                                "id": 741,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8435:16:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20_$62",
                                  "typeString": "contract ERC20"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "8421:30:0"
                            },
                            {
                              "condition": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 745,
                                      "name": "tokens",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 697,
                                      "src": "8482:6:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                        "typeString": "address[] calldata"
                                      }
                                    },
                                    "id": 747,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 746,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 725,
                                      "src": "8489:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "8482:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 743,
                                    "name": "pool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 694,
                                    "src": "8469:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_BPool_$157",
                                      "typeString": "contract BPool"
                                    }
                                  },
                                  "id": 744,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "isBound",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 137,
                                  "src": "8469:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                                    "typeString": "function (address) view external returns (bool)"
                                  }
                                },
                                "id": 748,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8469:23:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "id": 876,
                                "nodeType": "Block",
                                "src": "9106:251:0",
                                "statements": [
                                  {
                                    "expression": {
                                      "argumentTypes": null,
                                      "arguments": [
                                        {
                                          "argumentTypes": null,
                                          "arguments": [
                                            {
                                              "argumentTypes": null,
                                              "expression": {
                                                "argumentTypes": null,
                                                "id": 838,
                                                "name": "msg",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": -15,
                                                "src": "9151:3:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_magic_message",
                                                  "typeString": "msg"
                                                }
                                              },
                                              "id": 839,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "sender",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": null,
                                              "src": "9151:10:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address_payable",
                                                "typeString": "address payable"
                                              }
                                            },
                                            {
                                              "argumentTypes": null,
                                              "arguments": [
                                                {
                                                  "argumentTypes": null,
                                                  "id": 842,
                                                  "name": "this",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": -28,
                                                  "src": "9171:4:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_BActions_$1416",
                                                    "typeString": "contract BActions"
                                                  }
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_contract$_BActions_$1416",
                                                    "typeString": "contract BActions"
                                                  }
                                                ],
                                                "id": 841,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "nodeType": "ElementaryTypeNameExpression",
                                                "src": "9163:7:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_type$_t_address_$",
                                                  "typeString": "type(address)"
                                                },
                                                "typeName": {
                                                  "id": 840,
                                                  "name": "address",
                                                  "nodeType": "ElementaryTypeName",
                                                  "src": "9163:7:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": null,
                                                    "typeString": null
                                                  }
                                                }
                                              },
                                              "id": 843,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "typeConversion",
                                              "lValueRequested": false,
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "9163:13:0",
                                              "tryCall": false,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            {
                                              "argumentTypes": null,
                                              "baseExpression": {
                                                "argumentTypes": null,
                                                "id": 844,
                                                "name": "balances",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 700,
                                                "src": "9178:8:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                                  "typeString": "uint256[] calldata"
                                                }
                                              },
                                              "id": 846,
                                              "indexExpression": {
                                                "argumentTypes": null,
                                                "id": 845,
                                                "name": "i",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 725,
                                                "src": "9187:1:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
                                              "src": "9178:11:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_address_payable",
                                                "typeString": "address payable"
                                              },
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              },
                                              {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": null,
                                              "id": 836,
                                              "name": "token",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 736,
                                              "src": "9132:5:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_ERC20_$62",
                                                "typeString": "contract ERC20"
                                              }
                                            },
                                            "id": 837,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "transferFrom",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 45,
                                            "src": "9132:18:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                              "typeString": "function (address,address,uint256) external returns (bool)"
                                            }
                                          },
                                          "id": 847,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "9132:58:0",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        {
                                          "argumentTypes": null,
                                          "hexValue": "4552525f5452414e534645525f4641494c4544",
                                          "id": 848,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "string",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "9192:21:0",
                                          "subdenomination": null,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_c9252e500ac7052178e0516284a4bfdb9c18736079c4cc7803b8d1294a8fb98c",
                                            "typeString": "literal_string \"ERR_TRANSFER_FAILED\""
                                          },
                                          "value": "ERR_TRANSFER_FAILED"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          },
                                          {
                                            "typeIdentifier": "t_stringliteral_c9252e500ac7052178e0516284a4bfdb9c18736079c4cc7803b8d1294a8fb98c",
                                            "typeString": "literal_string \"ERR_TRANSFER_FAILED\""
                                          }
                                        ],
                                        "id": 835,
                                        "name": "require",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [
                                          -18,
                                          -18
                                        ],
                                        "referencedDeclaration": -18,
                                        "src": "9124:7:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                          "typeString": "function (bool,string memory) pure"
                                        }
                                      },
                                      "id": 849,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "9124:90:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 850,
                                    "nodeType": "ExpressionStatement",
                                    "src": "9124:90:0"
                                  },
                                  {
                                    "expression": {
                                      "argumentTypes": null,
                                      "arguments": [
                                        {
                                          "argumentTypes": null,
                                          "id": 852,
                                          "name": "token",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 736,
                                          "src": "9245:5:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_ERC20_$62",
                                            "typeString": "contract ERC20"
                                          }
                                        },
                                        {
                                          "argumentTypes": null,
                                          "arguments": [
                                            {
                                              "argumentTypes": null,
                                              "id": 855,
                                              "name": "pool",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 694,
                                              "src": "9260:4:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_BPool_$157",
                                                "typeString": "contract BPool"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_contract$_BPool_$157",
                                                "typeString": "contract BPool"
                                              }
                                            ],
                                            "id": 854,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "9252:7:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_address_$",
                                              "typeString": "type(address)"
                                            },
                                            "typeName": {
                                              "id": 853,
                                              "name": "address",
                                              "nodeType": "ElementaryTypeName",
                                              "src": "9252:7:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": null,
                                                "typeString": null
                                              }
                                            }
                                          },
                                          "id": 856,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "9252:13:0",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "argumentTypes": null,
                                          "baseExpression": {
                                            "argumentTypes": null,
                                            "id": 857,
                                            "name": "balances",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 700,
                                            "src": "9267:8:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                              "typeString": "uint256[] calldata"
                                            }
                                          },
                                          "id": 859,
                                          "indexExpression": {
                                            "argumentTypes": null,
                                            "id": 858,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 725,
                                            "src": "9276:1:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "9267:11:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_contract$_ERC20_$62",
                                            "typeString": "contract ERC20"
                                          },
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 851,
                                        "name": "_safeApprove",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1273,
                                        "src": "9232:12:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$62_$_t_address_$_t_uint256_$returns$__$",
                                          "typeString": "function (contract ERC20,address,uint256)"
                                        }
                                      },
                                      "id": 860,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "9232:47:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 861,
                                    "nodeType": "ExpressionStatement",
                                    "src": "9232:47:0"
                                  },
                                  {
                                    "expression": {
                                      "argumentTypes": null,
                                      "arguments": [
                                        {
                                          "argumentTypes": null,
                                          "baseExpression": {
                                            "argumentTypes": null,
                                            "id": 865,
                                            "name": "tokens",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 697,
                                            "src": "9307:6:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                              "typeString": "address[] calldata"
                                            }
                                          },
                                          "id": 867,
                                          "indexExpression": {
                                            "argumentTypes": null,
                                            "id": 866,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 725,
                                            "src": "9314:1:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "9307:9:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "argumentTypes": null,
                                          "baseExpression": {
                                            "argumentTypes": null,
                                            "id": 868,
                                            "name": "balances",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 700,
                                            "src": "9318:8:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                              "typeString": "uint256[] calldata"
                                            }
                                          },
                                          "id": 870,
                                          "indexExpression": {
                                            "argumentTypes": null,
                                            "id": 869,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 725,
                                            "src": "9327:1:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "9318:11:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "argumentTypes": null,
                                          "baseExpression": {
                                            "argumentTypes": null,
                                            "id": 871,
                                            "name": "denorms",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 703,
                                            "src": "9331:7:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                              "typeString": "uint256[] calldata"
                                            }
                                          },
                                          "id": 873,
                                          "indexExpression": {
                                            "argumentTypes": null,
                                            "id": 872,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 725,
                                            "src": "9339:1:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "9331:10:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": null,
                                          "id": 862,
                                          "name": "pool",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 694,
                                          "src": "9297:4:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_BPool_$157",
                                            "typeString": "contract BPool"
                                          }
                                        },
                                        "id": 864,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "bind",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 116,
                                        "src": "9297:9:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                                          "typeString": "function (address,uint256,uint256) external"
                                        }
                                      },
                                      "id": 874,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "9297:45:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 875,
                                    "nodeType": "ExpressionStatement",
                                    "src": "9297:45:0"
                                  }
                                ]
                              },
                              "id": 877,
                              "nodeType": "IfStatement",
                              "src": "8465:892:0",
                              "trueBody": {
                                "id": 834,
                                "nodeType": "Block",
                                "src": "8494:606:0",
                                "statements": [
                                  {
                                    "condition": {
                                      "argumentTypes": null,
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 758,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "argumentTypes": null,
                                        "baseExpression": {
                                          "argumentTypes": null,
                                          "id": 749,
                                          "name": "balances",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 700,
                                          "src": "8516:8:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                            "typeString": "uint256[] calldata"
                                          }
                                        },
                                        "id": 751,
                                        "indexExpression": {
                                          "argumentTypes": null,
                                          "id": 750,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 725,
                                          "src": "8525:1:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "8516:11:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": ">",
                                      "rightExpression": {
                                        "argumentTypes": null,
                                        "arguments": [
                                          {
                                            "argumentTypes": null,
                                            "baseExpression": {
                                              "argumentTypes": null,
                                              "id": 754,
                                              "name": "tokens",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 697,
                                              "src": "8546:6:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                                "typeString": "address[] calldata"
                                              }
                                            },
                                            "id": 756,
                                            "indexExpression": {
                                              "argumentTypes": null,
                                              "id": 755,
                                              "name": "i",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 725,
                                              "src": "8553:1:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "8546:9:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": null,
                                            "id": 752,
                                            "name": "pool",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 694,
                                            "src": "8530:4:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_BPool_$157",
                                              "typeString": "contract BPool"
                                            }
                                          },
                                          "id": 753,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "getBalance",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 156,
                                          "src": "8530:15:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                            "typeString": "function (address) view external returns (uint256)"
                                          }
                                        },
                                        "id": 757,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "8530:26:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "8516:40:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "falseBody": null,
                                    "id": 801,
                                    "nodeType": "IfStatement",
                                    "src": "8512:374:0",
                                    "trueBody": {
                                      "id": 800,
                                      "nodeType": "Block",
                                      "src": "8558:328:0",
                                      "statements": [
                                        {
                                          "expression": {
                                            "argumentTypes": null,
                                            "arguments": [
                                              {
                                                "argumentTypes": null,
                                                "arguments": [
                                                  {
                                                    "argumentTypes": null,
                                                    "expression": {
                                                      "argumentTypes": null,
                                                      "id": 762,
                                                      "name": "msg",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": -15,
                                                      "src": "8632:3:0",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_magic_message",
                                                        "typeString": "msg"
                                                      }
                                                    },
                                                    "id": 763,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "sender",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": null,
                                                    "src": "8632:10:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_address_payable",
                                                      "typeString": "address payable"
                                                    }
                                                  },
                                                  {
                                                    "argumentTypes": null,
                                                    "arguments": [
                                                      {
                                                        "argumentTypes": null,
                                                        "id": 766,
                                                        "name": "this",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": -28,
                                                        "src": "8652:4:0",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_contract$_BActions_$1416",
                                                          "typeString": "contract BActions"
                                                        }
                                                      }
                                                    ],
                                                    "expression": {
                                                      "argumentTypes": [
                                                        {
                                                          "typeIdentifier": "t_contract$_BActions_$1416",
                                                          "typeString": "contract BActions"
                                                        }
                                                      ],
                                                      "id": 765,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": true,
                                                      "lValueRequested": false,
                                                      "nodeType": "ElementaryTypeNameExpression",
                                                      "src": "8644:7:0",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_address_$",
                                                        "typeString": "type(address)"
                                                      },
                                                      "typeName": {
                                                        "id": 764,
                                                        "name": "address",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "8644:7:0",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": null,
                                                          "typeString": null
                                                        }
                                                      }
                                                    },
                                                    "id": 767,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "typeConversion",
                                                    "lValueRequested": false,
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "8644:13:0",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_address",
                                                      "typeString": "address"
                                                    }
                                                  },
                                                  {
                                                    "argumentTypes": null,
                                                    "commonType": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    },
                                                    "id": 777,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftExpression": {
                                                      "argumentTypes": null,
                                                      "baseExpression": {
                                                        "argumentTypes": null,
                                                        "id": 768,
                                                        "name": "balances",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 700,
                                                        "src": "8659:8:0",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                                          "typeString": "uint256[] calldata"
                                                        }
                                                      },
                                                      "id": 770,
                                                      "indexExpression": {
                                                        "argumentTypes": null,
                                                        "id": 769,
                                                        "name": "i",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 725,
                                                        "src": "8668:1:0",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_uint256",
                                                          "typeString": "uint256"
                                                        }
                                                      },
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "nodeType": "IndexAccess",
                                                      "src": "8659:11:0",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    },
                                                    "nodeType": "BinaryOperation",
                                                    "operator": "-",
                                                    "rightExpression": {
                                                      "argumentTypes": null,
                                                      "arguments": [
                                                        {
                                                          "argumentTypes": null,
                                                          "baseExpression": {
                                                            "argumentTypes": null,
                                                            "id": 773,
                                                            "name": "tokens",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 697,
                                                            "src": "8689:6:0",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                                              "typeString": "address[] calldata"
                                                            }
                                                          },
                                                          "id": 775,
                                                          "indexExpression": {
                                                            "argumentTypes": null,
                                                            "id": 774,
                                                            "name": "i",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 725,
                                                            "src": "8696:1:0",
                                                            "typeDescriptions": {
                                                              "typeIdentifier": "t_uint256",
                                                              "typeString": "uint256"
                                                            }
                                                          },
                                                          "isConstant": false,
                                                          "isLValue": false,
                                                          "isPure": false,
                                                          "lValueRequested": false,
                                                          "nodeType": "IndexAccess",
                                                          "src": "8689:9:0",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                          }
                                                        }
                                                      ],
                                                      "expression": {
                                                        "argumentTypes": [
                                                          {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                          }
                                                        ],
                                                        "expression": {
                                                          "argumentTypes": null,
                                                          "id": 771,
                                                          "name": "pool",
                                                          "nodeType": "Identifier",
                                                          "overloadedDeclarations": [],
                                                          "referencedDeclaration": 694,
                                                          "src": "8673:4:0",
                                                          "typeDescriptions": {
                                                            "typeIdentifier": "t_contract$_BPool_$157",
                                                            "typeString": "contract BPool"
                                                          }
                                                        },
                                                        "id": 772,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberName": "getBalance",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": 156,
                                                        "src": "8673:15:0",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                                          "typeString": "function (address) view external returns (uint256)"
                                                        }
                                                      },
                                                      "id": 776,
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "kind": "functionCall",
                                                      "lValueRequested": false,
                                                      "names": [],
                                                      "nodeType": "FunctionCall",
                                                      "src": "8673:26:0",
                                                      "tryCall": false,
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    },
                                                    "src": "8659:40:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  }
                                                ],
                                                "expression": {
                                                  "argumentTypes": [
                                                    {
                                                      "typeIdentifier": "t_address_payable",
                                                      "typeString": "address payable"
                                                    },
                                                    {
                                                      "typeIdentifier": "t_address",
                                                      "typeString": "address"
                                                    },
                                                    {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  ],
                                                  "expression": {
                                                    "argumentTypes": null,
                                                    "id": 760,
                                                    "name": "token",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 736,
                                                    "src": "8613:5:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_contract$_ERC20_$62",
                                                      "typeString": "contract ERC20"
                                                    }
                                                  },
                                                  "id": 761,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "memberName": "transferFrom",
                                                  "nodeType": "MemberAccess",
                                                  "referencedDeclaration": 45,
                                                  "src": "8613:18:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                                    "typeString": "function (address,address,uint256) external returns (bool)"
                                                  }
                                                },
                                                "id": 778,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "8613:87:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bool",
                                                  "typeString": "bool"
                                                }
                                              },
                                              {
                                                "argumentTypes": null,
                                                "hexValue": "4552525f5452414e534645525f4641494c4544",
                                                "id": 779,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "8726:21:0",
                                                "subdenomination": null,
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_stringliteral_c9252e500ac7052178e0516284a4bfdb9c18736079c4cc7803b8d1294a8fb98c",
                                                  "typeString": "literal_string \"ERR_TRANSFER_FAILED\""
                                                },
                                                "value": "ERR_TRANSFER_FAILED"
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_bool",
                                                  "typeString": "bool"
                                                },
                                                {
                                                  "typeIdentifier": "t_stringliteral_c9252e500ac7052178e0516284a4bfdb9c18736079c4cc7803b8d1294a8fb98c",
                                                  "typeString": "literal_string \"ERR_TRANSFER_FAILED\""
                                                }
                                              ],
                                              "id": 759,
                                              "name": "require",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [
                                                -18,
                                                -18
                                              ],
                                              "referencedDeclaration": -18,
                                              "src": "8580:7:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                              }
                                            },
                                            "id": 780,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "8580:189:0",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_tuple$__$",
                                              "typeString": "tuple()"
                                            }
                                          },
                                          "id": 781,
                                          "nodeType": "ExpressionStatement",
                                          "src": "8580:189:0"
                                        },
                                        {
                                          "expression": {
                                            "argumentTypes": null,
                                            "arguments": [
                                              {
                                                "argumentTypes": null,
                                                "id": 783,
                                                "name": "token",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 736,
                                                "src": "8804:5:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_contract$_ERC20_$62",
                                                  "typeString": "contract ERC20"
                                                }
                                              },
                                              {
                                                "argumentTypes": null,
                                                "arguments": [
                                                  {
                                                    "argumentTypes": null,
                                                    "id": 786,
                                                    "name": "pool",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 694,
                                                    "src": "8819:4:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_contract$_BPool_$157",
                                                      "typeString": "contract BPool"
                                                    }
                                                  }
                                                ],
                                                "expression": {
                                                  "argumentTypes": [
                                                    {
                                                      "typeIdentifier": "t_contract$_BPool_$157",
                                                      "typeString": "contract BPool"
                                                    }
                                                  ],
                                                  "id": 785,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "lValueRequested": false,
                                                  "nodeType": "ElementaryTypeNameExpression",
                                                  "src": "8811:7:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_address_$",
                                                    "typeString": "type(address)"
                                                  },
                                                  "typeName": {
                                                    "id": 784,
                                                    "name": "address",
                                                    "nodeType": "ElementaryTypeName",
                                                    "src": "8811:7:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": null,
                                                      "typeString": null
                                                    }
                                                  }
                                                },
                                                "id": 787,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "8811:13:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              },
                                              {
                                                "argumentTypes": null,
                                                "commonType": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                },
                                                "id": 797,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                  "argumentTypes": null,
                                                  "baseExpression": {
                                                    "argumentTypes": null,
                                                    "id": 788,
                                                    "name": "balances",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 700,
                                                    "src": "8826:8:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                                      "typeString": "uint256[] calldata"
                                                    }
                                                  },
                                                  "id": 790,
                                                  "indexExpression": {
                                                    "argumentTypes": null,
                                                    "id": 789,
                                                    "name": "i",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 725,
                                                    "src": "8835:1:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "nodeType": "IndexAccess",
                                                  "src": "8826:11:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "-",
                                                "rightExpression": {
                                                  "argumentTypes": null,
                                                  "arguments": [
                                                    {
                                                      "argumentTypes": null,
                                                      "baseExpression": {
                                                        "argumentTypes": null,
                                                        "id": 793,
                                                        "name": "tokens",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 697,
                                                        "src": "8856:6:0",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                                          "typeString": "address[] calldata"
                                                        }
                                                      },
                                                      "id": 795,
                                                      "indexExpression": {
                                                        "argumentTypes": null,
                                                        "id": 794,
                                                        "name": "i",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 725,
                                                        "src": "8863:1:0",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_uint256",
                                                          "typeString": "uint256"
                                                        }
                                                      },
                                                      "isConstant": false,
                                                      "isLValue": false,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "nodeType": "IndexAccess",
                                                      "src": "8856:9:0",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                      }
                                                    }
                                                  ],
                                                  "expression": {
                                                    "argumentTypes": [
                                                      {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                      }
                                                    ],
                                                    "expression": {
                                                      "argumentTypes": null,
                                                      "id": 791,
                                                      "name": "pool",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 694,
                                                      "src": "8840:4:0",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_contract$_BPool_$157",
                                                        "typeString": "contract BPool"
                                                      }
                                                    },
                                                    "id": 792,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "getBalance",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 156,
                                                    "src": "8840:15:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                                      "typeString": "function (address) view external returns (uint256)"
                                                    }
                                                  },
                                                  "id": 796,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "kind": "functionCall",
                                                  "lValueRequested": false,
                                                  "names": [],
                                                  "nodeType": "FunctionCall",
                                                  "src": "8840:26:0",
                                                  "tryCall": false,
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "src": "8826:40:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_contract$_ERC20_$62",
                                                  "typeString": "contract ERC20"
                                                },
                                                {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                },
                                                {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              ],
                                              "id": 782,
                                              "name": "_safeApprove",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1273,
                                              "src": "8791:12:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$62_$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (contract ERC20,address,uint256)"
                                              }
                                            },
                                            "id": 798,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "8791:76:0",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_tuple$__$",
                                              "typeString": "tuple()"
                                            }
                                          },
                                          "id": 799,
                                          "nodeType": "ExpressionStatement",
                                          "src": "8791:76:0"
                                        }
                                      ]
                                    }
                                  },
                                  {
                                    "condition": {
                                      "argumentTypes": null,
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 808,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "argumentTypes": null,
                                        "baseExpression": {
                                          "argumentTypes": null,
                                          "id": 802,
                                          "name": "balances",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 700,
                                          "src": "8907:8:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                            "typeString": "uint256[] calldata"
                                          }
                                        },
                                        "id": 804,
                                        "indexExpression": {
                                          "argumentTypes": null,
                                          "id": 803,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 725,
                                          "src": "8916:1:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "8907:11:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": ">",
                                      "rightExpression": {
                                        "argumentTypes": null,
                                        "commonType": {
                                          "typeIdentifier": "t_rational_1000000_by_1",
                                          "typeString": "int_const 1000000"
                                        },
                                        "id": 807,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "argumentTypes": null,
                                          "hexValue": "3130",
                                          "id": 805,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "8921:2:0",
                                          "subdenomination": null,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_10_by_1",
                                            "typeString": "int_const 10"
                                          },
                                          "value": "10"
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "**",
                                        "rightExpression": {
                                          "argumentTypes": null,
                                          "hexValue": "36",
                                          "id": 806,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "8925:1:0",
                                          "subdenomination": null,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_6_by_1",
                                            "typeString": "int_const 6"
                                          },
                                          "value": "6"
                                        },
                                        "src": "8921:5:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_1000000_by_1",
                                          "typeString": "int_const 1000000"
                                        }
                                      },
                                      "src": "8907:19:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "falseBody": {
                                      "id": 832,
                                      "nodeType": "Block",
                                      "src": "9022:63:0",
                                      "statements": [
                                        {
                                          "expression": {
                                            "argumentTypes": null,
                                            "arguments": [
                                              {
                                                "argumentTypes": null,
                                                "baseExpression": {
                                                  "argumentTypes": null,
                                                  "id": 827,
                                                  "name": "tokens",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 697,
                                                  "src": "9056:6:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                                    "typeString": "address[] calldata"
                                                  }
                                                },
                                                "id": 829,
                                                "indexExpression": {
                                                  "argumentTypes": null,
                                                  "id": 828,
                                                  "name": "i",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 725,
                                                  "src": "9063:1:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "IndexAccess",
                                                "src": "9056:9:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": null,
                                                "id": 824,
                                                "name": "pool",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 694,
                                                "src": "9044:4:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_contract$_BPool_$157",
                                                  "typeString": "contract BPool"
                                                }
                                              },
                                              "id": 826,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "unbind",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 130,
                                              "src": "9044:11:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                                                "typeString": "function (address) external"
                                              }
                                            },
                                            "id": 830,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "9044:22:0",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_tuple$__$",
                                              "typeString": "tuple()"
                                            }
                                          },
                                          "id": 831,
                                          "nodeType": "ExpressionStatement",
                                          "src": "9044:22:0"
                                        }
                                      ]
                                    },
                                    "id": 833,
                                    "nodeType": "IfStatement",
                                    "src": "8903:182:0",
                                    "trueBody": {
                                      "id": 823,
                                      "nodeType": "Block",
                                      "src": "8928:88:0",
                                      "statements": [
                                        {
                                          "expression": {
                                            "argumentTypes": null,
                                            "arguments": [
                                              {
                                                "argumentTypes": null,
                                                "baseExpression": {
                                                  "argumentTypes": null,
                                                  "id": 812,
                                                  "name": "tokens",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 697,
                                                  "src": "8962:6:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                                    "typeString": "address[] calldata"
                                                  }
                                                },
                                                "id": 814,
                                                "indexExpression": {
                                                  "argumentTypes": null,
                                                  "id": 813,
                                                  "name": "i",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 725,
                                                  "src": "8969:1:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "IndexAccess",
                                                "src": "8962:9:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              },
                                              {
                                                "argumentTypes": null,
                                                "baseExpression": {
                                                  "argumentTypes": null,
                                                  "id": 815,
                                                  "name": "balances",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 700,
                                                  "src": "8973:8:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                                    "typeString": "uint256[] calldata"
                                                  }
                                                },
                                                "id": 817,
                                                "indexExpression": {
                                                  "argumentTypes": null,
                                                  "id": 816,
                                                  "name": "i",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 725,
                                                  "src": "8982:1:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "IndexAccess",
                                                "src": "8973:11:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              {
                                                "argumentTypes": null,
                                                "baseExpression": {
                                                  "argumentTypes": null,
                                                  "id": 818,
                                                  "name": "denorms",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 703,
                                                  "src": "8986:7:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                                    "typeString": "uint256[] calldata"
                                                  }
                                                },
                                                "id": 820,
                                                "indexExpression": {
                                                  "argumentTypes": null,
                                                  "id": 819,
                                                  "name": "i",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 725,
                                                  "src": "8994:1:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "IndexAccess",
                                                "src": "8986:10:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                },
                                                {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                },
                                                {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": null,
                                                "id": 809,
                                                "name": "pool",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 694,
                                                "src": "8950:4:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_contract$_BPool_$157",
                                                  "typeString": "contract BPool"
                                                }
                                              },
                                              "id": 811,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "rebind",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 125,
                                              "src": "8950:11:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,uint256,uint256) external"
                                              }
                                            },
                                            "id": 821,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "8950:47:0",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_tuple$__$",
                                              "typeString": "tuple()"
                                            }
                                          },
                                          "id": 822,
                                          "nodeType": "ExpressionStatement",
                                          "src": "8950:47:0"
                                        }
                                      ]
                                    }
                                  }
                                ]
                              }
                            },
                            {
                              "condition": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 886,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "arguments": [
                                        {
                                          "argumentTypes": null,
                                          "id": 882,
                                          "name": "this",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -28,
                                          "src": "9399:4:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_BActions_$1416",
                                            "typeString": "contract BActions"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_contract$_BActions_$1416",
                                            "typeString": "contract BActions"
                                          }
                                        ],
                                        "id": 881,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "9391:7:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": {
                                          "id": 880,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "9391:7:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": null,
                                            "typeString": null
                                          }
                                        }
                                      },
                                      "id": 883,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "9391:13:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 878,
                                      "name": "token",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 736,
                                      "src": "9375:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_ERC20_$62",
                                        "typeString": "contract ERC20"
                                      }
                                    },
                                    "id": 879,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "balanceOf",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 52,
                                    "src": "9375:15:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                      "typeString": "function (address) view external returns (uint256)"
                                    }
                                  },
                                  "id": 884,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "9375:30:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "hexValue": "30",
                                  "id": 885,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9408:1:0",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "9375:34:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": null,
                              "id": 904,
                              "nodeType": "IfStatement",
                              "src": "9371:163:0",
                              "trueBody": {
                                "id": 903,
                                "nodeType": "Block",
                                "src": "9411:123:0",
                                "statements": [
                                  {
                                    "expression": {
                                      "argumentTypes": null,
                                      "arguments": [
                                        {
                                          "argumentTypes": null,
                                          "arguments": [
                                            {
                                              "argumentTypes": null,
                                              "expression": {
                                                "argumentTypes": null,
                                                "id": 890,
                                                "name": "msg",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": -15,
                                                "src": "9452:3:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_magic_message",
                                                  "typeString": "msg"
                                                }
                                              },
                                              "id": 891,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "sender",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": null,
                                              "src": "9452:10:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address_payable",
                                                "typeString": "address payable"
                                              }
                                            },
                                            {
                                              "argumentTypes": null,
                                              "arguments": [
                                                {
                                                  "argumentTypes": null,
                                                  "arguments": [
                                                    {
                                                      "argumentTypes": null,
                                                      "id": 896,
                                                      "name": "this",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": -28,
                                                      "src": "9488:4:0",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_contract$_BActions_$1416",
                                                        "typeString": "contract BActions"
                                                      }
                                                    }
                                                  ],
                                                  "expression": {
                                                    "argumentTypes": [
                                                      {
                                                        "typeIdentifier": "t_contract$_BActions_$1416",
                                                        "typeString": "contract BActions"
                                                      }
                                                    ],
                                                    "id": 895,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "nodeType": "ElementaryTypeNameExpression",
                                                    "src": "9480:7:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_type$_t_address_$",
                                                      "typeString": "type(address)"
                                                    },
                                                    "typeName": {
                                                      "id": 894,
                                                      "name": "address",
                                                      "nodeType": "ElementaryTypeName",
                                                      "src": "9480:7:0",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": null,
                                                        "typeString": null
                                                      }
                                                    }
                                                  },
                                                  "id": 897,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "kind": "typeConversion",
                                                  "lValueRequested": false,
                                                  "names": [],
                                                  "nodeType": "FunctionCall",
                                                  "src": "9480:13:0",
                                                  "tryCall": false,
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                  }
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                  }
                                                ],
                                                "expression": {
                                                  "argumentTypes": null,
                                                  "id": 892,
                                                  "name": "token",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 736,
                                                  "src": "9464:5:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_ERC20_$62",
                                                    "typeString": "contract ERC20"
                                                  }
                                                },
                                                "id": 893,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "balanceOf",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 52,
                                                "src": "9464:15:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                                  "typeString": "function (address) view external returns (uint256)"
                                                }
                                              },
                                              "id": 898,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "functionCall",
                                              "lValueRequested": false,
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "9464:30:0",
                                              "tryCall": false,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_address_payable",
                                                "typeString": "address payable"
                                              },
                                              {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": null,
                                              "id": 888,
                                              "name": "token",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 736,
                                              "src": "9437:5:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_ERC20_$62",
                                                "typeString": "contract ERC20"
                                              }
                                            },
                                            "id": 889,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "transfer",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 34,
                                            "src": "9437:14:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                              "typeString": "function (address,uint256) external returns (bool)"
                                            }
                                          },
                                          "id": 899,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "9437:58:0",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        {
                                          "argumentTypes": null,
                                          "hexValue": "4552525f5452414e534645525f4641494c4544",
                                          "id": 900,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "string",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "9497:21:0",
                                          "subdenomination": null,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_c9252e500ac7052178e0516284a4bfdb9c18736079c4cc7803b8d1294a8fb98c",
                                            "typeString": "literal_string \"ERR_TRANSFER_FAILED\""
                                          },
                                          "value": "ERR_TRANSFER_FAILED"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          },
                                          {
                                            "typeIdentifier": "t_stringliteral_c9252e500ac7052178e0516284a4bfdb9c18736079c4cc7803b8d1294a8fb98c",
                                            "typeString": "literal_string \"ERR_TRANSFER_FAILED\""
                                          }
                                        ],
                                        "id": 887,
                                        "name": "require",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [
                                          -18,
                                          -18
                                        ],
                                        "referencedDeclaration": -18,
                                        "src": "9429:7:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                          "typeString": "function (bool,string memory) pure"
                                        }
                                      },
                                      "id": 901,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "9429:90:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 902,
                                    "nodeType": "ExpressionStatement",
                                    "src": "9429:90:0"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 731,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 728,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 725,
                            "src": "8383:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 729,
                              "name": "tokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 697,
                              "src": "8387:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                "typeString": "address[] calldata"
                              }
                            },
                            "id": 730,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "8387:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8383:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 906,
                        "initializationExpression": {
                          "assignments": [
                            725
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 725,
                              "mutability": "mutable",
                              "name": "i",
                              "nodeType": "VariableDeclaration",
                              "overrides": null,
                              "scope": 906,
                              "src": "8371:6:0",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 724,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "8371:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "value": null,
                              "visibility": "internal"
                            }
                          ],
                          "id": 727,
                          "initialValue": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 726,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8380:1:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "8371:10:0"
                        },
                        "loopExpression": {
                          "expression": {
                            "argumentTypes": null,
                            "id": 733,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "8402:3:0",
                            "subExpression": {
                              "argumentTypes": null,
                              "id": 732,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 725,
                              "src": "8402:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 734,
                          "nodeType": "ExpressionStatement",
                          "src": "8402:3:0"
                        },
                        "nodeType": "ForStatement",
                        "src": "8366:1179:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "functionSelector": "e0d945bf",
                  "id": 908,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setTokens",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 704,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 694,
                        "mutability": "mutable",
                        "name": "pool",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 908,
                        "src": "8080:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BPool_$157",
                          "typeString": "contract BPool"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 693,
                          "name": "BPool",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 157,
                          "src": "8080:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BPool_$157",
                            "typeString": "contract BPool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 697,
                        "mutability": "mutable",
                        "name": "tokens",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 908,
                        "src": "8100:25:0",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 695,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8100:7:0",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 696,
                          "length": null,
                          "nodeType": "ArrayTypeName",
                          "src": "8100:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 700,
                        "mutability": "mutable",
                        "name": "balances",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 908,
                        "src": "8135:24:0",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 698,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "8135:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 699,
                          "length": null,
                          "nodeType": "ArrayTypeName",
                          "src": "8135:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 703,
                        "mutability": "mutable",
                        "name": "denorms",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 908,
                        "src": "8169:23:0",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 701,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "8169:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 702,
                          "length": null,
                          "nodeType": "ArrayTypeName",
                          "src": "8169:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "8070:128:0"
                  },
                  "returnParameters": {
                    "id": 705,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8208:0:0"
                  },
                  "scope": 1416,
                  "src": "8052:1499:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 934,
                    "nodeType": "Block",
                    "src": "9596:130:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "id": 913,
                              "name": "pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 910,
                              "src": "9606:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BPool_$157",
                                "typeString": "contract BPool"
                              }
                            },
                            "id": 915,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "finalize",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 107,
                            "src": "9606:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                              "typeString": "function () external"
                            }
                          },
                          "id": 916,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9606:15:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 917,
                        "nodeType": "ExpressionStatement",
                        "src": "9606:15:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 921,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "9653:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 922,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "9653:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "arguments": [
                                        {
                                          "argumentTypes": null,
                                          "id": 927,
                                          "name": "this",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -28,
                                          "src": "9688:4:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_BActions_$1416",
                                            "typeString": "contract BActions"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_contract$_BActions_$1416",
                                            "typeString": "contract BActions"
                                          }
                                        ],
                                        "id": 926,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "9680:7:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": {
                                          "id": 925,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "9680:7:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": null,
                                            "typeString": null
                                          }
                                        }
                                      },
                                      "id": 928,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "9680:13:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 923,
                                      "name": "pool",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 910,
                                      "src": "9665:4:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_BPool_$157",
                                        "typeString": "contract BPool"
                                      }
                                    },
                                    "id": 924,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "balanceOf",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 52,
                                    "src": "9665:14:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                      "typeString": "function (address) view external returns (uint256)"
                                    }
                                  },
                                  "id": 929,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "9665:29:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 919,
                                  "name": "pool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 910,
                                  "src": "9639:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_BPool_$157",
                                    "typeString": "contract BPool"
                                  }
                                },
                                "id": 920,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "transfer",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 34,
                                "src": "9639:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (address,uint256) external returns (bool)"
                                }
                              },
                              "id": 930,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9639:56:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "4552525f5452414e534645525f4641494c4544",
                              "id": 931,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9697:21:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c9252e500ac7052178e0516284a4bfdb9c18736079c4cc7803b8d1294a8fb98c",
                                "typeString": "literal_string \"ERR_TRANSFER_FAILED\""
                              },
                              "value": "ERR_TRANSFER_FAILED"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c9252e500ac7052178e0516284a4bfdb9c18736079c4cc7803b8d1294a8fb98c",
                                "typeString": "literal_string \"ERR_TRANSFER_FAILED\""
                              }
                            ],
                            "id": 918,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "9631:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 932,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9631:88:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 933,
                        "nodeType": "ExpressionStatement",
                        "src": "9631:88:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "functionSelector": "4ef39b75",
                  "id": 935,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "finalize",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 911,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 910,
                        "mutability": "mutable",
                        "name": "pool",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 935,
                        "src": "9575:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BPool_$157",
                          "typeString": "contract BPool"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 909,
                          "name": "BPool",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 157,
                          "src": "9575:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BPool_$157",
                            "typeString": "contract BPool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "9574:12:0"
                  },
                  "returnParameters": {
                    "id": 912,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "9596:0:0"
                  },
                  "scope": 1416,
                  "src": "9557:169:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 995,
                    "nodeType": "Block",
                    "src": "9918:316:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 949,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "9955:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 950,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "9955:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 953,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "9975:4:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_BActions_$1416",
                                        "typeString": "contract BActions"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_BActions_$1416",
                                        "typeString": "contract BActions"
                                      }
                                    ],
                                    "id": 952,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "9967:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 951,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "9967:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": null,
                                        "typeString": null
                                      }
                                    }
                                  },
                                  "id": 954,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "9967:13:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 955,
                                  "name": "tokenAmountIn",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 943,
                                  "src": "9982:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 947,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 939,
                                  "src": "9936:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ERC20_$62",
                                    "typeString": "contract ERC20"
                                  }
                                },
                                "id": 948,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "transferFrom",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 45,
                                "src": "9936:18:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (address,address,uint256) external returns (bool)"
                                }
                              },
                              "id": 956,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9936:60:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "4552525f5452414e534645525f4641494c4544",
                              "id": 957,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9998:21:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c9252e500ac7052178e0516284a4bfdb9c18736079c4cc7803b8d1294a8fb98c",
                                "typeString": "literal_string \"ERR_TRANSFER_FAILED\""
                              },
                              "value": "ERR_TRANSFER_FAILED"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c9252e500ac7052178e0516284a4bfdb9c18736079c4cc7803b8d1294a8fb98c",
                                "typeString": "literal_string \"ERR_TRANSFER_FAILED\""
                              }
                            ],
                            "id": 946,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "9928:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 958,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9928:92:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 959,
                        "nodeType": "ExpressionStatement",
                        "src": "9928:92:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 961,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 939,
                              "src": "10043:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$62",
                                "typeString": "contract ERC20"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 964,
                                  "name": "crp",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 937,
                                  "src": "10058:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ConfigurableRightsPool_$257",
                                    "typeString": "contract ConfigurableRightsPool"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ConfigurableRightsPool_$257",
                                    "typeString": "contract ConfigurableRightsPool"
                                  }
                                ],
                                "id": 963,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "10050:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 962,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "10050:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 965,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10050:12:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 966,
                              "name": "tokenAmountIn",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 943,
                              "src": "10064:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ERC20_$62",
                                "typeString": "contract ERC20"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 960,
                            "name": "_safeApprove",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1273,
                            "src": "10030:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$62_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (contract ERC20,address,uint256)"
                            }
                          },
                          "id": 967,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10030:48:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 968,
                        "nodeType": "ExpressionStatement",
                        "src": "10030:48:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 974,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 939,
                                  "src": "10113:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ERC20_$62",
                                    "typeString": "contract ERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ERC20_$62",
                                    "typeString": "contract ERC20"
                                  }
                                ],
                                "id": 973,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "10105:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 972,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "10105:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 975,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10105:14:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 976,
                              "name": "newWeight",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 941,
                              "src": "10121:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 969,
                              "name": "crp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 937,
                              "src": "10088:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ConfigurableRightsPool_$257",
                                "typeString": "contract ConfigurableRightsPool"
                              }
                            },
                            "id": 971,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "updateWeight",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 214,
                            "src": "10088:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256) external"
                            }
                          },
                          "id": 977,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10088:43:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 978,
                        "nodeType": "ExpressionStatement",
                        "src": "10088:43:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 982,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "10162:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 983,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "10162:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "arguments": [
                                        {
                                          "argumentTypes": null,
                                          "id": 988,
                                          "name": "this",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -28,
                                          "src": "10196:4:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_BActions_$1416",
                                            "typeString": "contract BActions"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_contract$_BActions_$1416",
                                            "typeString": "contract BActions"
                                          }
                                        ],
                                        "id": 987,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "10188:7:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": {
                                          "id": 986,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "10188:7:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": null,
                                            "typeString": null
                                          }
                                        }
                                      },
                                      "id": 989,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "10188:13:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 984,
                                      "name": "crp",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 937,
                                      "src": "10174:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_ConfigurableRightsPool_$257",
                                        "typeString": "contract ConfigurableRightsPool"
                                      }
                                    },
                                    "id": 985,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "balanceOf",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 52,
                                    "src": "10174:13:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                      "typeString": "function (address) view external returns (uint256)"
                                    }
                                  },
                                  "id": 990,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "10174:28:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 980,
                                  "name": "crp",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 937,
                                  "src": "10149:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ConfigurableRightsPool_$257",
                                    "typeString": "contract ConfigurableRightsPool"
                                  }
                                },
                                "id": 981,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "transfer",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 34,
                                "src": "10149:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (address,uint256) external returns (bool)"
                                }
                              },
                              "id": 991,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10149:54:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "4552525f5452414e534645525f4641494c4544",
                              "id": 992,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10205:21:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c9252e500ac7052178e0516284a4bfdb9c18736079c4cc7803b8d1294a8fb98c",
                                "typeString": "literal_string \"ERR_TRANSFER_FAILED\""
                              },
                              "value": "ERR_TRANSFER_FAILED"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c9252e500ac7052178e0516284a4bfdb9c18736079c4cc7803b8d1294a8fb98c",
                                "typeString": "literal_string \"ERR_TRANSFER_FAILED\""
                              }
                            ],
                            "id": 979,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "10141:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 993,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10141:86:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 994,
                        "nodeType": "ExpressionStatement",
                        "src": "10141:86:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "functionSelector": "81bd5cd7",
                  "id": 996,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "increaseWeight",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 944,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 937,
                        "mutability": "mutable",
                        "name": "crp",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 996,
                        "src": "9803:26:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ConfigurableRightsPool_$257",
                          "typeString": "contract ConfigurableRightsPool"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 936,
                          "name": "ConfigurableRightsPool",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 257,
                          "src": "9803:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ConfigurableRightsPool_$257",
                            "typeString": "contract ConfigurableRightsPool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 939,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 996,
                        "src": "9839:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$62",
                          "typeString": "contract ERC20"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 938,
                          "name": "ERC20",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 62,
                          "src": "9839:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$62",
                            "typeString": "contract ERC20"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 941,
                        "mutability": "mutable",
                        "name": "newWeight",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 996,
                        "src": "9860:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 940,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "9860:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 943,
                        "mutability": "mutable",
                        "name": "tokenAmountIn",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 996,
                        "src": "9884:18:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 942,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "9884:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "9793:115:0"
                  },
                  "returnParameters": {
                    "id": 945,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "9918:0:0"
                  },
                  "scope": 1416,
                  "src": "9770:464:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1047,
                    "nodeType": "Block",
                    "src": "10387:259:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 1010,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "10422:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1011,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "10422:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 1014,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "10442:4:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_BActions_$1416",
                                        "typeString": "contract BActions"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_BActions_$1416",
                                        "typeString": "contract BActions"
                                      }
                                    ],
                                    "id": 1013,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "10434:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 1012,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "10434:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": null,
                                        "typeString": null
                                      }
                                    }
                                  },
                                  "id": 1015,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "10434:13:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 1016,
                                  "name": "poolAmountIn",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1004,
                                  "src": "10449:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 1008,
                                  "name": "crp",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 998,
                                  "src": "10405:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ConfigurableRightsPool_$257",
                                    "typeString": "contract ConfigurableRightsPool"
                                  }
                                },
                                "id": 1009,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "transferFrom",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 45,
                                "src": "10405:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (address,address,uint256) external returns (bool)"
                                }
                              },
                              "id": 1017,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10405:57:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "4552525f5452414e534645525f4641494c4544",
                              "id": 1018,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10464:21:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c9252e500ac7052178e0516284a4bfdb9c18736079c4cc7803b8d1294a8fb98c",
                                "typeString": "literal_string \"ERR_TRANSFER_FAILED\""
                              },
                              "value": "ERR_TRANSFER_FAILED"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c9252e500ac7052178e0516284a4bfdb9c18736079c4cc7803b8d1294a8fb98c",
                                "typeString": "literal_string \"ERR_TRANSFER_FAILED\""
                              }
                            ],
                            "id": 1007,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "10397:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1019,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10397:89:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1020,
                        "nodeType": "ExpressionStatement",
                        "src": "10397:89:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 1026,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1000,
                                  "src": "10521:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ERC20_$62",
                                    "typeString": "contract ERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ERC20_$62",
                                    "typeString": "contract ERC20"
                                  }
                                ],
                                "id": 1025,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "10513:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1024,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "10513:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 1027,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10513:14:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1028,
                              "name": "newWeight",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1002,
                              "src": "10529:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 1021,
                              "name": "crp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 998,
                              "src": "10496:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ConfigurableRightsPool_$257",
                                "typeString": "contract ConfigurableRightsPool"
                              }
                            },
                            "id": 1023,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "updateWeight",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 214,
                            "src": "10496:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256) external"
                            }
                          },
                          "id": 1029,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10496:43:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1030,
                        "nodeType": "ExpressionStatement",
                        "src": "10496:43:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 1034,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "10572:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1035,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "10572:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "arguments": [
                                        {
                                          "argumentTypes": null,
                                          "id": 1040,
                                          "name": "this",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -28,
                                          "src": "10608:4:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_BActions_$1416",
                                            "typeString": "contract BActions"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_contract$_BActions_$1416",
                                            "typeString": "contract BActions"
                                          }
                                        ],
                                        "id": 1039,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "10600:7:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": {
                                          "id": 1038,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "10600:7:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": null,
                                            "typeString": null
                                          }
                                        }
                                      },
                                      "id": 1041,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "10600:13:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 1036,
                                      "name": "token",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1000,
                                      "src": "10584:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_ERC20_$62",
                                        "typeString": "contract ERC20"
                                      }
                                    },
                                    "id": 1037,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "balanceOf",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 52,
                                    "src": "10584:15:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                      "typeString": "function (address) view external returns (uint256)"
                                    }
                                  },
                                  "id": 1042,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "10584:30:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 1032,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1000,
                                  "src": "10557:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ERC20_$62",
                                    "typeString": "contract ERC20"
                                  }
                                },
                                "id": 1033,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "transfer",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 34,
                                "src": "10557:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (address,uint256) external returns (bool)"
                                }
                              },
                              "id": 1043,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10557:58:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "4552525f5452414e534645525f4641494c4544",
                              "id": 1044,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10617:21:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c9252e500ac7052178e0516284a4bfdb9c18736079c4cc7803b8d1294a8fb98c",
                                "typeString": "literal_string \"ERR_TRANSFER_FAILED\""
                              },
                              "value": "ERR_TRANSFER_FAILED"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c9252e500ac7052178e0516284a4bfdb9c18736079c4cc7803b8d1294a8fb98c",
                                "typeString": "literal_string \"ERR_TRANSFER_FAILED\""
                              }
                            ],
                            "id": 1031,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "10549:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1045,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10549:90:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1046,
                        "nodeType": "ExpressionStatement",
                        "src": "10549:90:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "functionSelector": "674f8d8e",
                  "id": 1048,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decreaseWeight",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 1005,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 998,
                        "mutability": "mutable",
                        "name": "crp",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1048,
                        "src": "10273:26:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ConfigurableRightsPool_$257",
                          "typeString": "contract ConfigurableRightsPool"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 997,
                          "name": "ConfigurableRightsPool",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 257,
                          "src": "10273:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ConfigurableRightsPool_$257",
                            "typeString": "contract ConfigurableRightsPool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1000,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1048,
                        "src": "10309:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$62",
                          "typeString": "contract ERC20"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 999,
                          "name": "ERC20",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 62,
                          "src": "10309:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$62",
                            "typeString": "contract ERC20"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1002,
                        "mutability": "mutable",
                        "name": "newWeight",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1048,
                        "src": "10330:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1001,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "10330:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1004,
                        "mutability": "mutable",
                        "name": "poolAmountIn",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1048,
                        "src": "10354:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1003,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "10354:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "10263:114:0"
                  },
                  "returnParameters": {
                    "id": 1006,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "10387:0:0"
                  },
                  "scope": 1416,
                  "src": "10240:406:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1068,
                    "nodeType": "Block",
                    "src": "10819:77:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1063,
                              "name": "newWeights",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1053,
                              "src": "10856:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                "typeString": "uint256[] calldata"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1064,
                              "name": "startBlock",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1055,
                              "src": "10868:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1065,
                              "name": "endBlock",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1057,
                              "src": "10880:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                "typeString": "uint256[] calldata"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 1060,
                              "name": "crp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1050,
                              "src": "10829:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ConfigurableRightsPool_$257",
                                "typeString": "contract ConfigurableRightsPool"
                              }
                            },
                            "id": 1062,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "updateWeightsGradually",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 224,
                            "src": "10829:26:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256[] memory,uint256,uint256) external"
                            }
                          },
                          "id": 1066,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10829:60:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1067,
                        "nodeType": "ExpressionStatement",
                        "src": "10829:60:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "functionSelector": "9c11bd17",
                  "id": 1069,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "updateWeightsGradually",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 1058,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1050,
                        "mutability": "mutable",
                        "name": "crp",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1069,
                        "src": "10693:26:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ConfigurableRightsPool_$257",
                          "typeString": "contract ConfigurableRightsPool"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 1049,
                          "name": "ConfigurableRightsPool",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 257,
                          "src": "10693:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ConfigurableRightsPool_$257",
                            "typeString": "contract ConfigurableRightsPool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1053,
                        "mutability": "mutable",
                        "name": "newWeights",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1069,
                        "src": "10729:26:0",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1051,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "10729:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1052,
                          "length": null,
                          "nodeType": "ArrayTypeName",
                          "src": "10729:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1055,
                        "mutability": "mutable",
                        "name": "startBlock",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1069,
                        "src": "10765:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1054,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "10765:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1057,
                        "mutability": "mutable",
                        "name": "endBlock",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1069,
                        "src": "10790:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1056,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "10790:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "10683:126:0"
                  },
                  "returnParameters": {
                    "id": 1059,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "10819:0:0"
                  },
                  "scope": 1416,
                  "src": "10652:244:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1082,
                    "nodeType": "Block",
                    "src": "10990:35:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1079,
                              "name": "newCap",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1073,
                              "src": "11011:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 1076,
                              "name": "crp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1071,
                              "src": "11000:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ConfigurableRightsPool_$257",
                                "typeString": "contract ConfigurableRightsPool"
                              }
                            },
                            "id": 1078,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "setCap",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 207,
                            "src": "11000:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256) external"
                            }
                          },
                          "id": 1080,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11000:18:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1081,
                        "nodeType": "ExpressionStatement",
                        "src": "11000:18:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "functionSelector": "80ad2cf3",
                  "id": 1083,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setCap",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 1074,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1071,
                        "mutability": "mutable",
                        "name": "crp",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1083,
                        "src": "10927:26:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ConfigurableRightsPool_$257",
                          "typeString": "contract ConfigurableRightsPool"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 1070,
                          "name": "ConfigurableRightsPool",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 257,
                          "src": "10927:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ConfigurableRightsPool_$257",
                            "typeString": "contract ConfigurableRightsPool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1073,
                        "mutability": "mutable",
                        "name": "newCap",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1083,
                        "src": "10963:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1072,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "10963:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "10917:63:0"
                  },
                  "returnParameters": {
                    "id": 1075,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "10990:0:0"
                  },
                  "scope": 1416,
                  "src": "10902:123:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1105,
                    "nodeType": "Block",
                    "src": "11182:80:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 1099,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1087,
                                  "src": "11219:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ERC20_$62",
                                    "typeString": "contract ERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ERC20_$62",
                                    "typeString": "contract ERC20"
                                  }
                                ],
                                "id": 1098,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "11211:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1097,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "11211:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 1100,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11211:14:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1101,
                              "name": "balance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1089,
                              "src": "11227:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1102,
                              "name": "denormalizedWeight",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1091,
                              "src": "11236:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 1094,
                              "name": "crp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1085,
                              "src": "11192:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ConfigurableRightsPool_$257",
                                "typeString": "contract ConfigurableRightsPool"
                              }
                            },
                            "id": 1096,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "commitAddToken",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 233,
                            "src": "11192:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256,uint256) external"
                            }
                          },
                          "id": 1103,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11192:63:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1104,
                        "nodeType": "ExpressionStatement",
                        "src": "11192:63:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "functionSelector": "9fbbf3ba",
                  "id": 1106,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "commitAddToken",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 1092,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1085,
                        "mutability": "mutable",
                        "name": "crp",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1106,
                        "src": "11064:26:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ConfigurableRightsPool_$257",
                          "typeString": "contract ConfigurableRightsPool"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 1084,
                          "name": "ConfigurableRightsPool",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 257,
                          "src": "11064:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ConfigurableRightsPool_$257",
                            "typeString": "contract ConfigurableRightsPool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1087,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1106,
                        "src": "11100:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$62",
                          "typeString": "contract ERC20"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 1086,
                          "name": "ERC20",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 62,
                          "src": "11100:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$62",
                            "typeString": "contract ERC20"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1089,
                        "mutability": "mutable",
                        "name": "balance",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1106,
                        "src": "11121:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1088,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "11121:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1091,
                        "mutability": "mutable",
                        "name": "denormalizedWeight",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1106,
                        "src": "11143:23:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1090,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "11143:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "11054:118:0"
                  },
                  "returnParameters": {
                    "id": 1093,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "11182:0:0"
                  },
                  "scope": 1416,
                  "src": "11031:231:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1159,
                    "nodeType": "Block",
                    "src": "11391:292:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 1118,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "11428:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1119,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "11428:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 1122,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "11448:4:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_BActions_$1416",
                                        "typeString": "contract BActions"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_BActions_$1416",
                                        "typeString": "contract BActions"
                                      }
                                    ],
                                    "id": 1121,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "11440:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 1120,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "11440:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": null,
                                        "typeString": null
                                      }
                                    }
                                  },
                                  "id": 1123,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "11440:13:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 1124,
                                  "name": "tokenAmountIn",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1112,
                                  "src": "11455:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 1116,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1110,
                                  "src": "11409:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ERC20_$62",
                                    "typeString": "contract ERC20"
                                  }
                                },
                                "id": 1117,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "transferFrom",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 45,
                                "src": "11409:18:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (address,address,uint256) external returns (bool)"
                                }
                              },
                              "id": 1125,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11409:60:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "4552525f5452414e534645525f4641494c4544",
                              "id": 1126,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11471:21:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c9252e500ac7052178e0516284a4bfdb9c18736079c4cc7803b8d1294a8fb98c",
                                "typeString": "literal_string \"ERR_TRANSFER_FAILED\""
                              },
                              "value": "ERR_TRANSFER_FAILED"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c9252e500ac7052178e0516284a4bfdb9c18736079c4cc7803b8d1294a8fb98c",
                                "typeString": "literal_string \"ERR_TRANSFER_FAILED\""
                              }
                            ],
                            "id": 1115,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "11401:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1127,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11401:92:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1128,
                        "nodeType": "ExpressionStatement",
                        "src": "11401:92:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1130,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1110,
                              "src": "11516:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$62",
                                "typeString": "contract ERC20"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 1133,
                                  "name": "crp",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1108,
                                  "src": "11531:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ConfigurableRightsPool_$257",
                                    "typeString": "contract ConfigurableRightsPool"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ConfigurableRightsPool_$257",
                                    "typeString": "contract ConfigurableRightsPool"
                                  }
                                ],
                                "id": 1132,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "11523:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1131,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "11523:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 1134,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11523:12:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1135,
                              "name": "tokenAmountIn",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1112,
                              "src": "11537:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ERC20_$62",
                                "typeString": "contract ERC20"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1129,
                            "name": "_safeApprove",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1273,
                            "src": "11503:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$62_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (contract ERC20,address,uint256)"
                            }
                          },
                          "id": 1136,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11503:48:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1137,
                        "nodeType": "ExpressionStatement",
                        "src": "11503:48:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "id": 1138,
                              "name": "crp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1108,
                              "src": "11561:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ConfigurableRightsPool_$257",
                                "typeString": "contract ConfigurableRightsPool"
                              }
                            },
                            "id": 1140,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "applyAddToken",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 236,
                            "src": "11561:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                              "typeString": "function () external"
                            }
                          },
                          "id": 1141,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11561:19:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1142,
                        "nodeType": "ExpressionStatement",
                        "src": "11561:19:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 1146,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "11611:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1147,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "11611:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "arguments": [
                                        {
                                          "argumentTypes": null,
                                          "id": 1152,
                                          "name": "this",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -28,
                                          "src": "11645:4:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_BActions_$1416",
                                            "typeString": "contract BActions"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_contract$_BActions_$1416",
                                            "typeString": "contract BActions"
                                          }
                                        ],
                                        "id": 1151,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "11637:7:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": {
                                          "id": 1150,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "11637:7:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": null,
                                            "typeString": null
                                          }
                                        }
                                      },
                                      "id": 1153,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "11637:13:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 1148,
                                      "name": "crp",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1108,
                                      "src": "11623:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_ConfigurableRightsPool_$257",
                                        "typeString": "contract ConfigurableRightsPool"
                                      }
                                    },
                                    "id": 1149,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "balanceOf",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 52,
                                    "src": "11623:13:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                      "typeString": "function (address) view external returns (uint256)"
                                    }
                                  },
                                  "id": 1154,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "11623:28:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 1144,
                                  "name": "crp",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1108,
                                  "src": "11598:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ConfigurableRightsPool_$257",
                                    "typeString": "contract ConfigurableRightsPool"
                                  }
                                },
                                "id": 1145,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "transfer",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 34,
                                "src": "11598:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (address,uint256) external returns (bool)"
                                }
                              },
                              "id": 1155,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11598:54:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "4552525f5452414e534645525f4641494c4544",
                              "id": 1156,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11654:21:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c9252e500ac7052178e0516284a4bfdb9c18736079c4cc7803b8d1294a8fb98c",
                                "typeString": "literal_string \"ERR_TRANSFER_FAILED\""
                              },
                              "value": "ERR_TRANSFER_FAILED"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c9252e500ac7052178e0516284a4bfdb9c18736079c4cc7803b8d1294a8fb98c",
                                "typeString": "literal_string \"ERR_TRANSFER_FAILED\""
                              }
                            ],
                            "id": 1143,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "11590:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1157,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11590:86:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1158,
                        "nodeType": "ExpressionStatement",
                        "src": "11590:86:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "functionSelector": "c037f39c",
                  "id": 1160,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "applyAddToken",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 1113,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1108,
                        "mutability": "mutable",
                        "name": "crp",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1160,
                        "src": "11300:26:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ConfigurableRightsPool_$257",
                          "typeString": "contract ConfigurableRightsPool"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 1107,
                          "name": "ConfigurableRightsPool",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 257,
                          "src": "11300:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ConfigurableRightsPool_$257",
                            "typeString": "contract ConfigurableRightsPool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1110,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1160,
                        "src": "11336:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$62",
                          "typeString": "contract ERC20"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 1109,
                          "name": "ERC20",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 62,
                          "src": "11336:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$62",
                            "typeString": "contract ERC20"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1112,
                        "mutability": "mutable",
                        "name": "tokenAmountIn",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1160,
                        "src": "11357:18:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1111,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "11357:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "11290:91:0"
                  },
                  "returnParameters": {
                    "id": 1114,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "11391:0:0"
                  },
                  "scope": 1416,
                  "src": "11268:415:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1208,
                    "nodeType": "Block",
                    "src": "11809:247:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 1172,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "11844:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1173,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "11844:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 1176,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "11864:4:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_BActions_$1416",
                                        "typeString": "contract BActions"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_BActions_$1416",
                                        "typeString": "contract BActions"
                                      }
                                    ],
                                    "id": 1175,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "11856:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 1174,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "11856:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": null,
                                        "typeString": null
                                      }
                                    }
                                  },
                                  "id": 1177,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "11856:13:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 1178,
                                  "name": "poolAmountIn",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1166,
                                  "src": "11871:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 1170,
                                  "name": "crp",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1162,
                                  "src": "11827:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ConfigurableRightsPool_$257",
                                    "typeString": "contract ConfigurableRightsPool"
                                  }
                                },
                                "id": 1171,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "transferFrom",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 45,
                                "src": "11827:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (address,address,uint256) external returns (bool)"
                                }
                              },
                              "id": 1179,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11827:57:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "4552525f5452414e534645525f4641494c4544",
                              "id": 1180,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11886:21:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c9252e500ac7052178e0516284a4bfdb9c18736079c4cc7803b8d1294a8fb98c",
                                "typeString": "literal_string \"ERR_TRANSFER_FAILED\""
                              },
                              "value": "ERR_TRANSFER_FAILED"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c9252e500ac7052178e0516284a4bfdb9c18736079c4cc7803b8d1294a8fb98c",
                                "typeString": "literal_string \"ERR_TRANSFER_FAILED\""
                              }
                            ],
                            "id": 1169,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "11819:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1181,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11819:89:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1182,
                        "nodeType": "ExpressionStatement",
                        "src": "11819:89:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 1188,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1164,
                                  "src": "11942:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ERC20_$62",
                                    "typeString": "contract ERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ERC20_$62",
                                    "typeString": "contract ERC20"
                                  }
                                ],
                                "id": 1187,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "11934:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1186,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "11934:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": null,
                                    "typeString": null
                                  }
                                }
                              },
                              "id": 1189,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11934:14:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 1183,
                              "name": "crp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1162,
                              "src": "11918:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ConfigurableRightsPool_$257",
                                "typeString": "contract ConfigurableRightsPool"
                              }
                            },
                            "id": 1185,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "removeToken",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 241,
                            "src": "11918:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address) external"
                            }
                          },
                          "id": 1190,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11918:31:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1191,
                        "nodeType": "ExpressionStatement",
                        "src": "11918:31:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 1195,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "11982:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1196,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "11982:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "arguments": [
                                        {
                                          "argumentTypes": null,
                                          "id": 1201,
                                          "name": "this",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -28,
                                          "src": "12018:4:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_BActions_$1416",
                                            "typeString": "contract BActions"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_contract$_BActions_$1416",
                                            "typeString": "contract BActions"
                                          }
                                        ],
                                        "id": 1200,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "12010:7:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": {
                                          "id": 1199,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "12010:7:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": null,
                                            "typeString": null
                                          }
                                        }
                                      },
                                      "id": 1202,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "12010:13:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 1197,
                                      "name": "token",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1164,
                                      "src": "11994:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_ERC20_$62",
                                        "typeString": "contract ERC20"
                                      }
                                    },
                                    "id": 1198,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "balanceOf",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 52,
                                    "src": "11994:15:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                      "typeString": "function (address) view external returns (uint256)"
                                    }
                                  },
                                  "id": 1203,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "11994:30:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 1193,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1164,
                                  "src": "11967:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ERC20_$62",
                                    "typeString": "contract ERC20"
                                  }
                                },
                                "id": 1194,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "transfer",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 34,
                                "src": "11967:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (address,uint256) external returns (bool)"
                                }
                              },
                              "id": 1204,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11967:58:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "4552525f5452414e534645525f4641494c4544",
                              "id": 1205,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12027:21:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c9252e500ac7052178e0516284a4bfdb9c18736079c4cc7803b8d1294a8fb98c",
                                "typeString": "literal_string \"ERR_TRANSFER_FAILED\""
                              },
                              "value": "ERR_TRANSFER_FAILED"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c9252e500ac7052178e0516284a4bfdb9c18736079c4cc7803b8d1294a8fb98c",
                                "typeString": "literal_string \"ERR_TRANSFER_FAILED\""
                              }
                            ],
                            "id": 1192,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "11959:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1206,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11959:90:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1207,
                        "nodeType": "ExpressionStatement",
                        "src": "11959:90:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "functionSelector": "84f3859b",
                  "id": 1209,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "removeToken",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 1167,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1162,
                        "mutability": "mutable",
                        "name": "crp",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1209,
                        "src": "11719:26:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ConfigurableRightsPool_$257",
                          "typeString": "contract ConfigurableRightsPool"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 1161,
                          "name": "ConfigurableRightsPool",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 257,
                          "src": "11719:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ConfigurableRightsPool_$257",
                            "typeString": "contract ConfigurableRightsPool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1164,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1209,
                        "src": "11755:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$62",
                          "typeString": "contract ERC20"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 1163,
                          "name": "ERC20",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 62,
                          "src": "11755:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$62",
                            "typeString": "contract ERC20"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1166,
                        "mutability": "mutable",
                        "name": "poolAmountIn",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1209,
                        "src": "11776:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1165,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "11776:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "11709:90:0"
                  },
                  "returnParameters": {
                    "id": 1168,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "11809:0:0"
                  },
                  "scope": 1416,
                  "src": "11689:367:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1222,
                    "nodeType": "Block",
                    "src": "12175:57:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1219,
                              "name": "provider",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1213,
                              "src": "12216:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 1216,
                              "name": "crp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1211,
                              "src": "12185:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ConfigurableRightsPool_$257",
                                "typeString": "contract ConfigurableRightsPool"
                              }
                            },
                            "id": 1218,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "whitelistLiquidityProvider",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 246,
                            "src": "12185:30:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address) external"
                            }
                          },
                          "id": 1220,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12185:40:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1221,
                        "nodeType": "ExpressionStatement",
                        "src": "12185:40:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "functionSelector": "333fbeef",
                  "id": 1223,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "whitelistLiquidityProvider",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 1214,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1211,
                        "mutability": "mutable",
                        "name": "crp",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1223,
                        "src": "12107:26:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ConfigurableRightsPool_$257",
                          "typeString": "contract ConfigurableRightsPool"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 1210,
                          "name": "ConfigurableRightsPool",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 257,
                          "src": "12107:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ConfigurableRightsPool_$257",
                            "typeString": "contract ConfigurableRightsPool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1213,
                        "mutability": "mutable",
                        "name": "provider",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1223,
                        "src": "12143:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1212,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "12143:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "12097:68:0"
                  },
                  "returnParameters": {
                    "id": 1215,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "12175:0:0"
                  },
                  "scope": 1416,
                  "src": "12062:170:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1236,
                    "nodeType": "Block",
                    "src": "12359:65:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1233,
                              "name": "provider",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1227,
                              "src": "12408:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 1230,
                              "name": "crp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1225,
                              "src": "12369:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ConfigurableRightsPool_$257",
                                "typeString": "contract ConfigurableRightsPool"
                              }
                            },
                            "id": 1232,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "removeWhitelistedLiquidityProvider",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 251,
                            "src": "12369:38:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address) external"
                            }
                          },
                          "id": 1234,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12369:48:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1235,
                        "nodeType": "ExpressionStatement",
                        "src": "12369:48:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "functionSelector": "a7f28da7",
                  "id": 1237,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "removeWhitelistedLiquidityProvider",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 1228,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1225,
                        "mutability": "mutable",
                        "name": "crp",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1237,
                        "src": "12291:26:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ConfigurableRightsPool_$257",
                          "typeString": "contract ConfigurableRightsPool"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 1224,
                          "name": "ConfigurableRightsPool",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 257,
                          "src": "12291:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ConfigurableRightsPool_$257",
                            "typeString": "contract ConfigurableRightsPool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1227,
                        "mutability": "mutable",
                        "name": "provider",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1237,
                        "src": "12327:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1226,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "12327:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "12281:68:0"
                  },
                  "returnParameters": {
                    "id": 1229,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "12359:0:0"
                  },
                  "scope": 1416,
                  "src": "12238:186:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1272,
                    "nodeType": "Block",
                    "src": "12530:155:0",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1255,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 1250,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "12568:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_BActions_$1416",
                                      "typeString": "contract BActions"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_BActions_$1416",
                                      "typeString": "contract BActions"
                                    }
                                  ],
                                  "id": 1249,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "12560:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1248,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "12560:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": null,
                                      "typeString": null
                                    }
                                  }
                                },
                                "id": 1251,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "12560:13:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "id": 1252,
                                "name": "spender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1241,
                                "src": "12575:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 1246,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1239,
                                "src": "12544:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20_$62",
                                  "typeString": "contract ERC20"
                                }
                              },
                              "id": 1247,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "allowance",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 61,
                              "src": "12544:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address,address) view external returns (uint256)"
                              }
                            },
                            "id": 1253,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12544:39:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 1254,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12586:1:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "12544:43:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 1264,
                        "nodeType": "IfStatement",
                        "src": "12540:99:0",
                        "trueBody": {
                          "id": 1263,
                          "nodeType": "Block",
                          "src": "12589:50:0",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 1259,
                                    "name": "spender",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1241,
                                    "src": "12617:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "30",
                                    "id": 1260,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "12626:1:0",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 1256,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1239,
                                    "src": "12603:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ERC20_$62",
                                      "typeString": "contract ERC20"
                                    }
                                  },
                                  "id": 1258,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "approve",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 25,
                                  "src": "12603:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,uint256) external returns (bool)"
                                  }
                                },
                                "id": 1261,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "12603:25:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1262,
                              "nodeType": "ExpressionStatement",
                              "src": "12603:25:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1268,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1241,
                              "src": "12662:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1269,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1243,
                              "src": "12671:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 1265,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1239,
                              "src": "12648:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$62",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 1267,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "approve",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 25,
                            "src": "12648:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 1270,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12648:30:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1271,
                        "nodeType": "ExpressionStatement",
                        "src": "12648:30:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "id": 1273,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_safeApprove",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 1244,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1239,
                        "mutability": "mutable",
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1273,
                        "src": "12478:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$62",
                          "typeString": "contract ERC20"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 1238,
                          "name": "ERC20",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 62,
                          "src": "12478:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$62",
                            "typeString": "contract ERC20"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1241,
                        "mutability": "mutable",
                        "name": "spender",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1273,
                        "src": "12491:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1240,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "12491:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1243,
                        "mutability": "mutable",
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1273,
                        "src": "12508:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1242,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "12508:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "12477:43:0"
                  },
                  "returnParameters": {
                    "id": 1245,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "12530:0:0"
                  },
                  "scope": 1416,
                  "src": "12456:229:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1414,
                    "nodeType": "Block",
                    "src": "12845:795:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1291,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 1287,
                                  "name": "maxAmountsIn",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1283,
                                  "src": "12863:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                    "typeString": "uint256[] memory"
                                  }
                                },
                                "id": 1288,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "12863:19:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 1289,
                                  "name": "tokens",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1278,
                                  "src": "12886:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                    "typeString": "address[] memory"
                                  }
                                },
                                "id": 1290,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "12886:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "12863:36:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "4552525f4c454e4754485f4d49534d41544348",
                              "id": 1292,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12901:21:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_255e44775cff2b5a4cbe6c51fdfd1bbaf6984c9c19a7a9cae2cfac0275a994e8",
                                "typeString": "literal_string \"ERR_LENGTH_MISMATCH\""
                              },
                              "value": "ERR_LENGTH_MISMATCH"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_255e44775cff2b5a4cbe6c51fdfd1bbaf6984c9c19a7a9cae2cfac0275a994e8",
                                "typeString": "literal_string \"ERR_LENGTH_MISMATCH\""
                              }
                            ],
                            "id": 1286,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "12855:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1293,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12855:68:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1294,
                        "nodeType": "ExpressionStatement",
                        "src": "12855:68:0"
                      },
                      {
                        "body": {
                          "id": 1341,
                          "nodeType": "Block",
                          "src": "12975:228:0",
                          "statements": [
                            {
                              "assignments": [
                                1307
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1307,
                                  "mutability": "mutable",
                                  "name": "token",
                                  "nodeType": "VariableDeclaration",
                                  "overrides": null,
                                  "scope": 1341,
                                  "src": "12989:11:0",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ERC20_$62",
                                    "typeString": "contract ERC20"
                                  },
                                  "typeName": {
                                    "contractScope": null,
                                    "id": 1306,
                                    "name": "ERC20",
                                    "nodeType": "UserDefinedTypeName",
                                    "referencedDeclaration": 62,
                                    "src": "12989:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ERC20_$62",
                                      "typeString": "contract ERC20"
                                    }
                                  },
                                  "value": null,
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1313,
                              "initialValue": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 1309,
                                      "name": "tokens",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1278,
                                      "src": "13009:6:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                        "typeString": "address[] memory"
                                      }
                                    },
                                    "id": 1311,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 1310,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1296,
                                      "src": "13016:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "13009:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1308,
                                  "name": "ERC20",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 62,
                                  "src": "13003:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_ERC20_$62_$",
                                    "typeString": "type(contract ERC20)"
                                  }
                                },
                                "id": 1312,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "13003:16:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20_$62",
                                  "typeString": "contract ERC20"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "12989:30:0"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "expression": {
                                          "argumentTypes": null,
                                          "id": 1317,
                                          "name": "msg",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -15,
                                          "src": "13060:3:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_message",
                                            "typeString": "msg"
                                          }
                                        },
                                        "id": 1318,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "sender",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": null,
                                        "src": "13060:10:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address_payable",
                                          "typeString": "address payable"
                                        }
                                      },
                                      {
                                        "argumentTypes": null,
                                        "arguments": [
                                          {
                                            "argumentTypes": null,
                                            "id": 1321,
                                            "name": "this",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": -28,
                                            "src": "13080:4:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_BActions_$1416",
                                              "typeString": "contract BActions"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_contract$_BActions_$1416",
                                              "typeString": "contract BActions"
                                            }
                                          ],
                                          "id": 1320,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "13072:7:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_address_$",
                                            "typeString": "type(address)"
                                          },
                                          "typeName": {
                                            "id": 1319,
                                            "name": "address",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "13072:7:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": null,
                                              "typeString": null
                                            }
                                          }
                                        },
                                        "id": 1322,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "13072:13:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "argumentTypes": null,
                                        "baseExpression": {
                                          "argumentTypes": null,
                                          "id": 1323,
                                          "name": "maxAmountsIn",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1283,
                                          "src": "13087:12:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                            "typeString": "uint256[] memory"
                                          }
                                        },
                                        "id": 1325,
                                        "indexExpression": {
                                          "argumentTypes": null,
                                          "id": 1324,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1296,
                                          "src": "13100:1:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "13087:15:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address_payable",
                                          "typeString": "address payable"
                                        },
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 1315,
                                        "name": "token",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1307,
                                        "src": "13041:5:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_ERC20_$62",
                                          "typeString": "contract ERC20"
                                        }
                                      },
                                      "id": 1316,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "transferFrom",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 45,
                                      "src": "13041:18:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                        "typeString": "function (address,address,uint256) external returns (bool)"
                                      }
                                    },
                                    "id": 1326,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "13041:62:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "4552525f5452414e534645525f4641494c4544",
                                    "id": 1327,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "13105:21:0",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_c9252e500ac7052178e0516284a4bfdb9c18736079c4cc7803b8d1294a8fb98c",
                                      "typeString": "literal_string \"ERR_TRANSFER_FAILED\""
                                    },
                                    "value": "ERR_TRANSFER_FAILED"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_c9252e500ac7052178e0516284a4bfdb9c18736079c4cc7803b8d1294a8fb98c",
                                      "typeString": "literal_string \"ERR_TRANSFER_FAILED\""
                                    }
                                  ],
                                  "id": 1314,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "13033:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 1328,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "13033:94:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1329,
                              "nodeType": "ExpressionStatement",
                              "src": "13033:94:0"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 1331,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1307,
                                    "src": "13154:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ERC20_$62",
                                      "typeString": "contract ERC20"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "id": 1334,
                                        "name": "pool",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1275,
                                        "src": "13169:4:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_AbstractPool_$102",
                                          "typeString": "contract AbstractPool"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_AbstractPool_$102",
                                          "typeString": "contract AbstractPool"
                                        }
                                      ],
                                      "id": 1333,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "13161:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 1332,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "13161:7:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": null,
                                          "typeString": null
                                        }
                                      }
                                    },
                                    "id": 1335,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "13161:13:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 1336,
                                      "name": "maxAmountsIn",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1283,
                                      "src": "13176:12:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                        "typeString": "uint256[] memory"
                                      }
                                    },
                                    "id": 1338,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 1337,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1296,
                                      "src": "13189:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "13176:15:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_ERC20_$62",
                                      "typeString": "contract ERC20"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 1330,
                                  "name": "_safeApprove",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1273,
                                  "src": "13141:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$62_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (contract ERC20,address,uint256)"
                                  }
                                },
                                "id": 1339,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "13141:51:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1340,
                              "nodeType": "ExpressionStatement",
                              "src": "13141:51:0"
                            }
                          ]
                        },
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1302,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 1299,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1296,
                            "src": "12951:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1300,
                              "name": "tokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1278,
                              "src": "12955:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 1301,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "12955:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12951:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1342,
                        "initializationExpression": {
                          "assignments": [
                            1296
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1296,
                              "mutability": "mutable",
                              "name": "i",
                              "nodeType": "VariableDeclaration",
                              "overrides": null,
                              "scope": 1342,
                              "src": "12939:6:0",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1295,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "12939:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "value": null,
                              "visibility": "internal"
                            }
                          ],
                          "id": 1298,
                          "initialValue": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 1297,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12948:1:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "12939:10:0"
                        },
                        "loopExpression": {
                          "expression": {
                            "argumentTypes": null,
                            "id": 1304,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "12970:3:0",
                            "subExpression": {
                              "argumentTypes": null,
                              "id": 1303,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1296,
                              "src": "12970:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1305,
                          "nodeType": "ExpressionStatement",
                          "src": "12970:3:0"
                        },
                        "nodeType": "ForStatement",
                        "src": "12934:269:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1346,
                              "name": "poolAmountOut",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1280,
                              "src": "13226:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1347,
                              "name": "maxAmountsIn",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1283,
                              "src": "13241:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 1343,
                              "name": "pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1275,
                              "src": "13212:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AbstractPool_$102",
                                "typeString": "contract AbstractPool"
                              }
                            },
                            "id": 1345,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "joinPool",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 90,
                            "src": "13212:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                              "typeString": "function (uint256,uint256[] memory) external"
                            }
                          },
                          "id": 1348,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13212:42:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1349,
                        "nodeType": "ExpressionStatement",
                        "src": "13212:42:0"
                      },
                      {
                        "body": {
                          "id": 1396,
                          "nodeType": "Block",
                          "src": "13305:231:0",
                          "statements": [
                            {
                              "assignments": [
                                1362
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1362,
                                  "mutability": "mutable",
                                  "name": "token",
                                  "nodeType": "VariableDeclaration",
                                  "overrides": null,
                                  "scope": 1396,
                                  "src": "13319:11:0",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ERC20_$62",
                                    "typeString": "contract ERC20"
                                  },
                                  "typeName": {
                                    "contractScope": null,
                                    "id": 1361,
                                    "name": "ERC20",
                                    "nodeType": "UserDefinedTypeName",
                                    "referencedDeclaration": 62,
                                    "src": "13319:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ERC20_$62",
                                      "typeString": "contract ERC20"
                                    }
                                  },
                                  "value": null,
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1368,
                              "initialValue": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 1364,
                                      "name": "tokens",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1278,
                                      "src": "13339:6:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                        "typeString": "address[] memory"
                                      }
                                    },
                                    "id": 1366,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 1365,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1351,
                                      "src": "13346:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "13339:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1363,
                                  "name": "ERC20",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 62,
                                  "src": "13333:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_ERC20_$62_$",
                                    "typeString": "type(contract ERC20)"
                                  }
                                },
                                "id": 1367,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "13333:16:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20_$62",
                                  "typeString": "contract ERC20"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "13319:30:0"
                            },
                            {
                              "condition": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1377,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "arguments": [
                                        {
                                          "argumentTypes": null,
                                          "id": 1373,
                                          "name": "this",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -28,
                                          "src": "13391:4:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_BActions_$1416",
                                            "typeString": "contract BActions"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_contract$_BActions_$1416",
                                            "typeString": "contract BActions"
                                          }
                                        ],
                                        "id": 1372,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "13383:7:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": {
                                          "id": 1371,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "13383:7:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": null,
                                            "typeString": null
                                          }
                                        }
                                      },
                                      "id": 1374,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "13383:13:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 1369,
                                      "name": "token",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1362,
                                      "src": "13367:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_ERC20_$62",
                                        "typeString": "contract ERC20"
                                      }
                                    },
                                    "id": 1370,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "balanceOf",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 52,
                                    "src": "13367:15:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                      "typeString": "function (address) view external returns (uint256)"
                                    }
                                  },
                                  "id": 1375,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "13367:30:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "hexValue": "30",
                                  "id": 1376,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "13400:1:0",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "13367:34:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": null,
                              "id": 1395,
                              "nodeType": "IfStatement",
                              "src": "13363:163:0",
                              "trueBody": {
                                "id": 1394,
                                "nodeType": "Block",
                                "src": "13403:123:0",
                                "statements": [
                                  {
                                    "expression": {
                                      "argumentTypes": null,
                                      "arguments": [
                                        {
                                          "argumentTypes": null,
                                          "arguments": [
                                            {
                                              "argumentTypes": null,
                                              "expression": {
                                                "argumentTypes": null,
                                                "id": 1381,
                                                "name": "msg",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": -15,
                                                "src": "13444:3:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_magic_message",
                                                  "typeString": "msg"
                                                }
                                              },
                                              "id": 1382,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "sender",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": null,
                                              "src": "13444:10:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address_payable",
                                                "typeString": "address payable"
                                              }
                                            },
                                            {
                                              "argumentTypes": null,
                                              "arguments": [
                                                {
                                                  "argumentTypes": null,
                                                  "arguments": [
                                                    {
                                                      "argumentTypes": null,
                                                      "id": 1387,
                                                      "name": "this",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": -28,
                                                      "src": "13480:4:0",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_contract$_BActions_$1416",
                                                        "typeString": "contract BActions"
                                                      }
                                                    }
                                                  ],
                                                  "expression": {
                                                    "argumentTypes": [
                                                      {
                                                        "typeIdentifier": "t_contract$_BActions_$1416",
                                                        "typeString": "contract BActions"
                                                      }
                                                    ],
                                                    "id": 1386,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "nodeType": "ElementaryTypeNameExpression",
                                                    "src": "13472:7:0",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_type$_t_address_$",
                                                      "typeString": "type(address)"
                                                    },
                                                    "typeName": {
                                                      "id": 1385,
                                                      "name": "address",
                                                      "nodeType": "ElementaryTypeName",
                                                      "src": "13472:7:0",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": null,
                                                        "typeString": null
                                                      }
                                                    }
                                                  },
                                                  "id": 1388,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "kind": "typeConversion",
                                                  "lValueRequested": false,
                                                  "names": [],
                                                  "nodeType": "FunctionCall",
                                                  "src": "13472:13:0",
                                                  "tryCall": false,
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                  }
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                  }
                                                ],
                                                "expression": {
                                                  "argumentTypes": null,
                                                  "id": 1383,
                                                  "name": "token",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 1362,
                                                  "src": "13456:5:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_ERC20_$62",
                                                    "typeString": "contract ERC20"
                                                  }
                                                },
                                                "id": 1384,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "balanceOf",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 52,
                                                "src": "13456:15:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                                  "typeString": "function (address) view external returns (uint256)"
                                                }
                                              },
                                              "id": 1389,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "functionCall",
                                              "lValueRequested": false,
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "13456:30:0",
                                              "tryCall": false,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_address_payable",
                                                "typeString": "address payable"
                                              },
                                              {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": null,
                                              "id": 1379,
                                              "name": "token",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1362,
                                              "src": "13429:5:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_ERC20_$62",
                                                "typeString": "contract ERC20"
                                              }
                                            },
                                            "id": 1380,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "transfer",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 34,
                                            "src": "13429:14:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                              "typeString": "function (address,uint256) external returns (bool)"
                                            }
                                          },
                                          "id": 1390,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "13429:58:0",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        {
                                          "argumentTypes": null,
                                          "hexValue": "4552525f5452414e534645525f4641494c4544",
                                          "id": 1391,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "string",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "13489:21:0",
                                          "subdenomination": null,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_c9252e500ac7052178e0516284a4bfdb9c18736079c4cc7803b8d1294a8fb98c",
                                            "typeString": "literal_string \"ERR_TRANSFER_FAILED\""
                                          },
                                          "value": "ERR_TRANSFER_FAILED"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          },
                                          {
                                            "typeIdentifier": "t_stringliteral_c9252e500ac7052178e0516284a4bfdb9c18736079c4cc7803b8d1294a8fb98c",
                                            "typeString": "literal_string \"ERR_TRANSFER_FAILED\""
                                          }
                                        ],
                                        "id": 1378,
                                        "name": "require",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [
                                          -18,
                                          -18
                                        ],
                                        "referencedDeclaration": -18,
                                        "src": "13421:7:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                          "typeString": "function (bool,string memory) pure"
                                        }
                                      },
                                      "id": 1392,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "13421:90:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 1393,
                                    "nodeType": "ExpressionStatement",
                                    "src": "13421:90:0"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1357,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 1354,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1351,
                            "src": "13281:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1355,
                              "name": "tokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1278,
                              "src": "13285:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 1356,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "13285:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13281:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1397,
                        "initializationExpression": {
                          "assignments": [
                            1351
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1351,
                              "mutability": "mutable",
                              "name": "i",
                              "nodeType": "VariableDeclaration",
                              "overrides": null,
                              "scope": 1397,
                              "src": "13269:6:0",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1350,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "13269:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "value": null,
                              "visibility": "internal"
                            }
                          ],
                          "id": 1353,
                          "initialValue": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 1352,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13278:1:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "13269:10:0"
                        },
                        "loopExpression": {
                          "expression": {
                            "argumentTypes": null,
                            "id": 1359,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "13300:3:0",
                            "subExpression": {
                              "argumentTypes": null,
                              "id": 1358,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1351,
                              "src": "13300:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1360,
                          "nodeType": "ExpressionStatement",
                          "src": "13300:3:0"
                        },
                        "nodeType": "ForStatement",
                        "src": "13264:272:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 1401,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "13567:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1402,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "13567:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "arguments": [
                                        {
                                          "argumentTypes": null,
                                          "id": 1407,
                                          "name": "this",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -28,
                                          "src": "13602:4:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_BActions_$1416",
                                            "typeString": "contract BActions"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_contract$_BActions_$1416",
                                            "typeString": "contract BActions"
                                          }
                                        ],
                                        "id": 1406,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "13594:7:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": {
                                          "id": 1405,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "13594:7:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": null,
                                            "typeString": null
                                          }
                                        }
                                      },
                                      "id": 1408,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "13594:13:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 1403,
                                      "name": "pool",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1275,
                                      "src": "13579:4:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_AbstractPool_$102",
                                        "typeString": "contract AbstractPool"
                                      }
                                    },
                                    "id": 1404,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "balanceOf",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 52,
                                    "src": "13579:14:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                      "typeString": "function (address) view external returns (uint256)"
                                    }
                                  },
                                  "id": 1409,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "13579:29:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 1399,
                                  "name": "pool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1275,
                                  "src": "13553:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_AbstractPool_$102",
                                    "typeString": "contract AbstractPool"
                                  }
                                },
                                "id": 1400,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "transfer",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 34,
                                "src": "13553:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (address,uint256) external returns (bool)"
                                }
                              },
                              "id": 1410,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13553:56:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "4552525f5452414e534645525f4641494c4544",
                              "id": 1411,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13611:21:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c9252e500ac7052178e0516284a4bfdb9c18736079c4cc7803b8d1294a8fb98c",
                                "typeString": "literal_string \"ERR_TRANSFER_FAILED\""
                              },
                              "value": "ERR_TRANSFER_FAILED"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c9252e500ac7052178e0516284a4bfdb9c18736079c4cc7803b8d1294a8fb98c",
                                "typeString": "literal_string \"ERR_TRANSFER_FAILED\""
                              }
                            ],
                            "id": 1398,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "13545:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1412,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13545:88:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1413,
                        "nodeType": "ExpressionStatement",
                        "src": "13545:88:0"
                      }
                    ]
                  },
                  "documentation": null,
                  "id": 1415,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_join",
                  "nodeType": "FunctionDefinition",
                  "overrides": null,
                  "parameters": {
                    "id": 1284,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1275,
                        "mutability": "mutable",
                        "name": "pool",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1415,
                        "src": "12715:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractPool_$102",
                          "typeString": "contract AbstractPool"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 1274,
                          "name": "AbstractPool",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 102,
                          "src": "12715:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AbstractPool_$102",
                            "typeString": "contract AbstractPool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1278,
                        "mutability": "mutable",
                        "name": "tokens",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1415,
                        "src": "12742:23:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1276,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12742:7:0",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 1277,
                          "length": null,
                          "nodeType": "ArrayTypeName",
                          "src": "12742:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1280,
                        "mutability": "mutable",
                        "name": "poolAmountOut",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1415,
                        "src": "12775:18:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1279,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "12775:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1283,
                        "mutability": "mutable",
                        "name": "maxAmountsIn",
                        "nodeType": "VariableDeclaration",
                        "overrides": null,
                        "scope": 1415,
                        "src": "12803:26:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1281,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "12803:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1282,
                          "length": null,
                          "nodeType": "ArrayTypeName",
                          "src": "12803:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "12705:130:0"
                  },
                  "returnParameters": {
                    "id": 1285,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "12845:0:0"
                  },
                  "scope": 1416,
                  "src": "12691:949:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 1417,
              "src": "4038:9604:0"
            }
          ],
          "src": "45:13598:0"
        },
        "id": 0
      }
    }
  }
}
